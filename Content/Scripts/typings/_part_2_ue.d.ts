declare class WindowTitleBarAreaSlot extends PanelSlot { 
	Padding: Margin;
	HorizontalAlignment: EHorizontalAlignment;
	VerticalAlignment: EVerticalAlignment;
	static Load(ResourceName: string): WindowTitleBarAreaSlot;
	static Find(Outer: UObject, ResourceName: string): WindowTitleBarAreaSlot;
	static GetDefaultObject(): WindowTitleBarAreaSlot;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindowTitleBarAreaSlot;
	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
	SetPadding(InPadding: Margin): void;
	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
	static C(Other: UObject | any): WindowTitleBarAreaSlot;
}

declare class WrapBox extends PanelWidget { 
	InnerSlotPadding: Vector2D;
	WrapSize: number;
	bExplicitWrapSize: boolean;
	HorizontalAlignment: EHorizontalAlignment;
	Orientation: EOrientation;
	static Load(ResourceName: string): WrapBox;
	static Find(Outer: UObject, ResourceName: string): WrapBox;
	static GetDefaultObject(): WrapBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WrapBox;
	SetInnerSlotPadding(InPadding: Vector2D): void;
	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
	AddChildToWrapBox(Content: Widget): WrapBoxSlot;
	static C(Other: UObject | any): WrapBox;
}

declare class SlateBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SlateBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): SlateBlueprintLibrary;
	static GetDefaultObject(): SlateBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateBlueprintLibrary;
	static TransformVectorLocalToAbsolute(Geometry: Geometry,LocalVector: Vector2D): Vector2D;
	static TransformVectorAbsoluteToLocal(Geometry: Geometry,AbsoluteVector: Vector2D): Vector2D;
	static TransformScalarLocalToAbsolute(Geometry: Geometry,LocalScalar: number): number;
	static TransformScalarAbsoluteToLocal(Geometry: Geometry,AbsoluteScalar: number): number;
	static ScreenToWidgetLocal(WorldContextObject: UObject,Geometry: Geometry,ScreenPosition: Vector2D,LocalCoordinate?: Vector2D,bIncludeWindowPosition?: boolean): {LocalCoordinate: Vector2D};
	static ScreenToWidgetAbsolute(WorldContextObject: UObject,ScreenPosition: Vector2D,AbsoluteCoordinate?: Vector2D,bIncludeWindowPosition?: boolean): {AbsoluteCoordinate: Vector2D};
	static ScreenToViewport(WorldContextObject: UObject,ScreenPosition: Vector2D,ViewportPosition?: Vector2D): {ViewportPosition: Vector2D};
	static LocalToViewport(WorldContextObject: UObject,Geometry: Geometry,LocalCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
	static LocalToAbsolute(Geometry: Geometry,LocalCoordinate: Vector2D): Vector2D;
	static IsUnderLocation(Geometry: Geometry,AbsoluteCoordinate: Vector2D): boolean;
	static GetLocalTopLeft(Geometry: Geometry): Vector2D;
	static GetLocalSize(Geometry: Geometry): Vector2D;
	static GetAbsoluteSize(Geometry: Geometry): Vector2D;
	static EqualEqual_SlateBrush(A: SlateBrush,B: SlateBrush): boolean;
	static AbsoluteToViewport(WorldContextObject: UObject,AbsoluteDesktopCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
	static AbsoluteToLocal(Geometry: Geometry,AbsoluteCoordinate: Vector2D): Vector2D;
	static C(Other: UObject | any): SlateBlueprintLibrary;
}

declare class SlateMeshVertex { 
	Position: Vector2f;
	Color: Color;
	UV0: Vector2f;
	UV1: Vector2f;
	UV2: Vector2f;
	UV3: Vector2f;
	UV4: Vector2f;
	UV5: Vector2f;
	clone() : SlateMeshVertex;
	static C(Other: UObject | any): SlateMeshVertex;
}

declare class SlateVectorArtData extends UObject { 
	MeshAsset: StaticMesh;
	SourceMaterial: MaterialInterface;
	VertexData: SlateMeshVertex[];
	IndexData: number[];
	Material: MaterialInterface;
	ExtentMin: Vector2D;
	ExtentMax: Vector2D;
	static Load(ResourceName: string): SlateVectorArtData;
	static Find(Outer: UObject, ResourceName: string): SlateVectorArtData;
	static GetDefaultObject(): SlateVectorArtData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateVectorArtData;
	static C(Other: UObject | any): SlateVectorArtData;
}

declare class EventGraphFastCallPair { 
	FunctionToPatch: UFunction;
	EventGraphCallOffset: number;
	clone() : EventGraphFastCallPair;
	static C(Other: UObject | any): EventGraphFastCallPair;
}

declare class ClassCookedMetaData extends UObject { 
	ClassMetaData: StructCookedMetaDataStore;
	FunctionsMetaData: Map<string, StructCookedMetaDataStore>;
	static Load(ResourceName: string): ClassCookedMetaData;
	static Find(Outer: UObject, ResourceName: string): ClassCookedMetaData;
	static GetDefaultObject(): ClassCookedMetaData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClassCookedMetaData;
	static C(Other: UObject | any): ClassCookedMetaData;
}

declare class BlueprintGeneratedClass extends Class { 
	NumReplicatedProperties: number;
	bHasNativizedParent: boolean;
	bHasCookedComponentInstancingData: boolean;
	bIsSparseClassDataSerializable: boolean;
	DynamicBindingObjects: DynamicBlueprintBinding[];
	ComponentTemplates: ActorComponent[];
	Timelines: TimelineTemplate[];
	ComponentClassOverrides: BPComponentClassOverride[];
	SimpleConstructionScript: SimpleConstructionScript;
	InheritableComponentHandler: InheritableComponentHandler;
	UberGraphFramePointerProperty: StructProperty;
	UberGraphFunction: UFunction;
	FastCallPairs: EventGraphFastCallPair[];
	OverridenArchetypeForCDO: UObject;
	PropertyGuids: Map<string, Guid>;
	CalledFunctions: UFunction[];
	CookedPropertyGuids: Map<string, Guid>;
	CookedComponentInstancingData: Map<string, BlueprintCookedComponentInstancingData>;
	CachedCookedMetaDataPtr: ClassCookedMetaData;
	static Load(ResourceName: string): BlueprintGeneratedClass;
	static Find(Outer: UObject, ResourceName: string): BlueprintGeneratedClass;
	static GetDefaultObject(): BlueprintGeneratedClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintGeneratedClass;
	static C(Other: UObject | any): BlueprintGeneratedClass;
}

declare type EBindingKind = 'Function' | 'Property' | 'EBindingKind_MAX';
declare var EBindingKind : { Function:'Function',Property:'Property',EBindingKind_MAX:'EBindingKind_MAX', };
declare class DelegateRuntimeBinding { 
	ObjectName: string;
	PropertyName: string;
	FunctionName: string;
	SourcePath: DynamicPropertyPath;
	Kind: EBindingKind;
	clone() : DelegateRuntimeBinding;
	static C(Other: UObject | any): DelegateRuntimeBinding;
}

declare class WidgetBlueprintGeneratedClass extends BlueprintGeneratedClass { 
	WidgetTree: WidgetTree;
	Extensions: WidgetBlueprintGeneratedClassExtension[];
	FieldNotifyNames: FieldNotificationId[];
	bClassRequiresNativeTick: boolean;
	bCanCallPreConstruct: boolean;
	Bindings: DelegateRuntimeBinding[];
	Animations: WidgetAnimation[];
	NamedSlots: string[];
	AvailableNamedSlots: string[];
	InstanceNamedSlots: string[];
	static Load(ResourceName: string): WidgetBlueprintGeneratedClass;
	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintGeneratedClass;
	static GetDefaultObject(): WidgetBlueprintGeneratedClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintGeneratedClass;
	static C(Other: UObject | any): WidgetBlueprintGeneratedClass;
}

declare type EColorVisionDeficiency = 'NormalVision' | 'Deuteranope' | 'Protanope' | 'Tritanope' | 'EColorVisionDeficiency_MAX';
declare var EColorVisionDeficiency : { NormalVision:'NormalVision',Deuteranope:'Deuteranope',Protanope:'Protanope',Tritanope:'Tritanope',EColorVisionDeficiency_MAX:'EColorVisionDeficiency_MAX', };
declare class NavigationEvent extends InputEvent { 
	clone() : NavigationEvent;
	static C(Other: UObject | any): NavigationEvent;
	GetInputEventFromNavigationEvent(): InputEvent;
	static GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent;
}

declare class WidgetBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): WidgetBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintLibrary;
	static GetDefaultObject(): WidgetBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintLibrary;
	static UnlockMouse(Reply?: EventReply): {Reply: EventReply, $: EventReply};
	static Unhandled(): EventReply;
	static SetWindowTitleBarState(TitleBarContent: Widget,Mode: EWindowTitleBarMode,bTitleBarDragEnabled: boolean,bWindowButtonsVisible: boolean,bTitleBarVisible: boolean): void;
	static SetWindowTitleBarCloseButtonActive(bActive: boolean): void;
	static SetUserFocus(Reply?: EventReply,FocusWidget?: Widget,bInAllUsers?: boolean): {Reply: EventReply, $: EventReply};
	static SetMousePosition(Reply?: EventReply,NewMousePosition?: Vector2D): {Reply: EventReply, $: EventReply};
	static SetInputMode_UIOnlyEx(PlayerController: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode,bFlushInput: boolean): void;
	static SetInputMode_GameOnly(PlayerController: PlayerController,bFlushInput: boolean): void;
	static SetInputMode_GameAndUIEx(PlayerController: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode,bHideCursorDuringCapture: boolean,bFlushInput: boolean): void;
	static SetHardwareCursor(WorldContextObject: UObject,CursorShape: EMouseCursor,CursorName: string,Hotspot: Vector2D): boolean;
	static SetFocusToGameViewport(): void;
	static SetColorVisionDeficiencyType(Type: EColorVisionDeficiency,Severity: number,CorrectDeficiency: boolean,ShowCorrectionWithDeficiency: boolean): void;
	static SetBrushResourceToTexture(Brush?: SlateBrush,Texture?: Texture2D): {Brush: SlateBrush};
	static SetBrushResourceToMaterial(Brush?: SlateBrush,Material?: MaterialInterface): {Brush: SlateBrush};
	static RestorePreviousWindowTitleBarState(): void;
	static ReleaseMouseCapture(Reply?: EventReply): {Reply: EventReply, $: EventReply};
	static ReleaseJoystickCapture(Reply?: EventReply,bInAllJoysticks?: boolean): {Reply: EventReply, $: EventReply};
	static NoResourceBrush(): SlateBrush;
	static MakeBrushFromTexture(Texture: Texture2D,Width: number,Height: number): SlateBrush;
	static MakeBrushFromMaterial(Material: MaterialInterface,Width: number,Height: number): SlateBrush;
	static MakeBrushFromAsset(BrushAsset: SlateBrushAsset): SlateBrush;
	static LockMouse(Reply?: EventReply,CapturingWidget?: Widget): {Reply: EventReply, $: EventReply};
	static IsDragDropping(): boolean;
	static Handled(): EventReply;
	static GetSafeZonePadding(WorldContextObject: UObject,SafePadding?: Vector4,SafePaddingScale?: Vector2D,SpillOverPadding?: Vector4): {SafePadding: Vector4, SafePaddingScale: Vector2D, SpillOverPadding: Vector4};
	static GetKeyEventFromAnalogInputEvent(Event: AnalogInputEvent): KeyEvent;
	static GetInputEventFromPointerEvent(Event: UPointerEvent): InputEvent;
	static GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent;
	static GetInputEventFromKeyEvent(Event: KeyEvent): InputEvent;
	static GetInputEventFromCharacterEvent(Event: CharacterEvent): InputEvent;
	static GetDynamicMaterial(Brush?: SlateBrush): {Brush: SlateBrush, $: MaterialInstanceDynamic};
	static GetDragDroppingContent(): DragDropOperation;
	static GetBrushResourceAsTexture2D(Brush: SlateBrush): Texture2D;
	static GetBrushResourceAsMaterial(Brush: SlateBrush): MaterialInterface;
	static GetBrushResource(Brush: SlateBrush): UObject;
	static GetAllWidgetsWithInterface(WorldContextObject: UObject,FoundWidgets?: UserWidget[],Interface?: UnrealEngineClass,TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
	static GetAllWidgetsOfClass(WorldContextObject: UObject,FoundWidgets?: UserWidget[],WidgetClass?: UnrealEngineClass,TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
	static EndDragDrop(Reply?: EventReply): {Reply: EventReply, $: EventReply};
	static DrawTextFormatted(Context?: PaintContext,Text?: string,Position?: Vector2D,Font?: Font,FontSize?: number,FontTypeFace?: string,Tint?: LinearColor): {Context: PaintContext};
	static DrawText(Context?: PaintContext,InString?: string,Position?: Vector2D,Tint?: LinearColor): {Context: PaintContext};
	static DrawSpline(Context?: PaintContext,Start?: Vector2D,StartDir?: Vector2D,End?: Vector2D,EndDir?: Vector2D,Tint?: LinearColor,Thickness?: number): {Context: PaintContext};
	static DrawLines(Context?: PaintContext,Points?: Vector2D[],Tint?: LinearColor,bAntiAlias?: boolean,Thickness?: number): {Context: PaintContext};
	static DrawLine(Context?: PaintContext,PositionA?: Vector2D,PositionB?: Vector2D,Tint?: LinearColor,bAntiAlias?: boolean,Thickness?: number): {Context: PaintContext};
	static DrawBox(Context?: PaintContext,Position?: Vector2D,Size?: Vector2D,Brush?: SlateBrushAsset,Tint?: LinearColor): {Context: PaintContext};
	static DismissAllMenus(): void;
	static DetectDragIfPressed(UPointerEvent: UPointerEvent,WidgetDetectingDrag: Widget,DragKey: Key): EventReply;
	static DetectDrag(Reply?: EventReply,WidgetDetectingDrag?: Widget,DragKey?: Key): {Reply: EventReply, $: EventReply};
	static CreateDragDropOperation(OperationClass: UnrealEngineClass): DragDropOperation;
	static Create(WorldContextObject: UObject,WidgetType: UnrealEngineClass,OwningPlayer: PlayerController): UserWidget;
	static ClearUserFocus(Reply?: EventReply,bInAllUsers?: boolean): {Reply: EventReply, $: EventReply};
	static CaptureMouse(Reply?: EventReply,CapturingWidget?: Widget): {Reply: EventReply, $: EventReply};
	static CaptureJoystick(Reply?: EventReply,CapturingWidget?: Widget,bInAllJoysticks?: boolean): {Reply: EventReply, $: EventReply};
	static CancelDragDrop(): void;
	static C(Other: UObject | any): WidgetBlueprintLibrary;
}

declare class WidgetLayoutLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): WidgetLayoutLibrary;
	static Find(Outer: UObject, ResourceName: string): WidgetLayoutLibrary;
	static GetDefaultObject(): WidgetLayoutLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetLayoutLibrary;
	static SlotAsWrapBoxSlot(Widget: Widget): WrapBoxSlot;
	static SlotAsWidgetSwitcherSlot(Widget: Widget): WidgetSwitcherSlot;
	static SlotAsVerticalBoxSlot(Widget: Widget): VerticalBoxSlot;
	static SlotAsUniformGridSlot(Widget: Widget): UniformGridSlot;
	static SlotAsSizeBoxSlot(Widget: Widget): SizeBoxSlot;
	static SlotAsScrollBoxSlot(Widget: Widget): ScrollBoxSlot;
	static SlotAsScaleBoxSlot(Widget: Widget): ScaleBoxSlot;
	static SlotAsSafeBoxSlot(Widget: Widget): SafeZoneSlot;
	static SlotAsOverlaySlot(Widget: Widget): OverlaySlot;
	static SlotAsHorizontalBoxSlot(Widget: Widget): HorizontalBoxSlot;
	static SlotAsGridSlot(Widget: Widget): GridSlot;
	static SlotAsCanvasSlot(Widget: Widget): CanvasPanelSlot;
	static SlotAsBorderSlot(Widget: Widget): BorderSlot;
	static RemoveAllWidgets(WorldContextObject: UObject): void;
	static ProjectWorldLocationToWidgetPosition(PlayerController: PlayerController,WorldLocation: Vector,ScreenPosition?: Vector2D,bPlayerViewportRelative?: boolean): {ScreenPosition: Vector2D, $: boolean};
	static GetViewportWidgetGeometry(WorldContextObject: UObject): Geometry;
	static GetViewportSize(WorldContextObject: UObject): Vector2D;
	static GetViewportScale(WorldContextObject: UObject): number;
	static GetPlayerScreenWidgetGeometry(PlayerController: PlayerController): Geometry;
	static GetMousePositionScaledByDPI(Player: PlayerController,LocationX?: number,LocationY?: number): {LocationX: number, LocationY: number, $: boolean};
	static GetMousePositionOnViewport(WorldContextObject: UObject): Vector2D;
	static GetMousePositionOnPlatform(): Vector2D;
	static C(Other: UObject | any): WidgetLayoutLibrary;
}

declare class AssetBackedTarget extends Interface { 
	static Load(ResourceName: string): AssetBackedTarget;
	static Find(Outer: UObject, ResourceName: string): AssetBackedTarget;
	static GetDefaultObject(): AssetBackedTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetBackedTarget;
	static C(Other: UObject | any): AssetBackedTarget;
}

declare class GizmoBaseComponent extends PrimitiveComponent { 
	Color: LinearColor;
	HoverSizeMultiplier: number;
	PixelHitDistanceThreshold: number;
	GizmoViewContext: GizmoViewContext;
	static Load(ResourceName: string): GizmoBaseComponent;
	static Find(Outer: UObject, ResourceName: string): GizmoBaseComponent;
	static GetDefaultObject(): GizmoBaseComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoBaseComponent;
	UpdateWorldLocalState(bWorldIn: boolean): void;
	UpdateHoverState(bHoveringIn: boolean): void;
	static C(Other: UObject | any): GizmoBaseComponent;
}

declare class GizmoElementArc extends GizmoElementCircleBase { 
	InnerRadius: number;
	static Load(ResourceName: string): GizmoElementArc;
	static Find(Outer: UObject, ResourceName: string): GizmoElementArc;
	static GetDefaultObject(): GizmoElementArc;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoElementArc;
	static C(Other: UObject | any): GizmoElementArc;
}

declare class InteractiveCommandArguments extends UObject { 
	static Load(ResourceName: string): InteractiveCommandArguments;
	static Find(Outer: UObject, ResourceName: string): InteractiveCommandArguments;
	static GetDefaultObject(): InteractiveCommandArguments;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveCommandArguments;
	static C(Other: UObject | any): InteractiveCommandArguments;
}

declare class InteractiveCommand extends UObject { 
	static Load(ResourceName: string): InteractiveCommand;
	static Find(Outer: UObject, ResourceName: string): InteractiveCommand;
	static GetDefaultObject(): InteractiveCommand;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveCommand;
	static C(Other: UObject | any): InteractiveCommand;
}

declare class InternalToolFrameworkActor extends Actor { 
	bIsSelectableInEditor: boolean;
	static GetDefaultObject(): InternalToolFrameworkActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InternalToolFrameworkActor;
	static C(Other: UObject | any): InternalToolFrameworkActor;
}

declare class ToolFrameworkComponent extends Interface { 
	static Load(ResourceName: string): ToolFrameworkComponent;
	static Find(Outer: UObject, ResourceName: string): ToolFrameworkComponent;
	static GetDefaultObject(): ToolFrameworkComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ToolFrameworkComponent;
	static C(Other: UObject | any): ToolFrameworkComponent;
}

declare class InteractiveToolCameraFocusAPI extends Interface { 
	static Load(ResourceName: string): InteractiveToolCameraFocusAPI;
	static Find(Outer: UObject, ResourceName: string): InteractiveToolCameraFocusAPI;
	static GetDefaultObject(): InteractiveToolCameraFocusAPI;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveToolCameraFocusAPI;
	static C(Other: UObject | any): InteractiveToolCameraFocusAPI;
}

declare class InteractiveToolNestedAcceptCancelAPI extends Interface { 
	static Load(ResourceName: string): InteractiveToolNestedAcceptCancelAPI;
	static Find(Outer: UObject, ResourceName: string): InteractiveToolNestedAcceptCancelAPI;
	static GetDefaultObject(): InteractiveToolNestedAcceptCancelAPI;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveToolNestedAcceptCancelAPI;
	static C(Other: UObject | any): InteractiveToolNestedAcceptCancelAPI;
}

declare class InteractiveToolExclusiveToolAPI extends Interface { 
	static Load(ResourceName: string): InteractiveToolExclusiveToolAPI;
	static Find(Outer: UObject, ResourceName: string): InteractiveToolExclusiveToolAPI;
	static GetDefaultObject(): InteractiveToolExclusiveToolAPI;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveToolExclusiveToolAPI;
	static C(Other: UObject | any): InteractiveToolExclusiveToolAPI;
}

declare class MaterialProvider extends Interface { 
	static Load(ResourceName: string): MaterialProvider;
	static Find(Outer: UObject, ResourceName: string): MaterialProvider;
	static GetDefaultObject(): MaterialProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialProvider;
	static C(Other: UObject | any): MaterialProvider;
}

declare class MeshDescriptionCommitter extends Interface { 
	static Load(ResourceName: string): MeshDescriptionCommitter;
	static Find(Outer: UObject, ResourceName: string): MeshDescriptionCommitter;
	static GetDefaultObject(): MeshDescriptionCommitter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshDescriptionCommitter;
	static C(Other: UObject | any): MeshDescriptionCommitter;
}

declare class MeshDescriptionProvider extends Interface { 
	static Load(ResourceName: string): MeshDescriptionProvider;
	static Find(Outer: UObject, ResourceName: string): MeshDescriptionProvider;
	static GetDefaultObject(): MeshDescriptionProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshDescriptionProvider;
	static C(Other: UObject | any): MeshDescriptionProvider;
}

declare class GizmoBaseVec2ParameterSource extends UObject { 
	static Load(ResourceName: string): GizmoBaseVec2ParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoBaseVec2ParameterSource;
	static GetDefaultObject(): GizmoBaseVec2ParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoBaseVec2ParameterSource;
	static C(Other: UObject | any): GizmoBaseVec2ParameterSource;
}

declare class GizmoVec2ParameterChange { 
	InitialValue: Vector2D;
	CurrentValue: Vector2D;
	clone() : GizmoVec2ParameterChange;
	static C(Other: UObject | any): GizmoVec2ParameterChange;
}

declare class GizmoLocalVec2ParameterSource extends GizmoBaseVec2ParameterSource { 
	Value: Vector2D;
	LastChange: GizmoVec2ParameterChange;
	static Load(ResourceName: string): GizmoLocalVec2ParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoLocalVec2ParameterSource;
	static GetDefaultObject(): GizmoLocalVec2ParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoLocalVec2ParameterSource;
	static C(Other: UObject | any): GizmoLocalVec2ParameterSource;
}

declare class GizmoBaseFloatParameterSource extends UObject { 
	static Load(ResourceName: string): GizmoBaseFloatParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoBaseFloatParameterSource;
	static GetDefaultObject(): GizmoBaseFloatParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoBaseFloatParameterSource;
	static C(Other: UObject | any): GizmoBaseFloatParameterSource;
}

declare class GizmoAxisSource extends Interface { 
	static Load(ResourceName: string): GizmoAxisSource;
	static Find(Outer: UObject, ResourceName: string): GizmoAxisSource;
	static GetDefaultObject(): GizmoAxisSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoAxisSource;
	HasTangentVectors(): boolean;
	GetTangentVectors(TangentXOut?: Vector,TangentYOut?: Vector): {TangentXOut: Vector, TangentYOut: Vector};
	GetOrigin(): Vector;
	GetDirection(): Vector;
	static C(Other: UObject | any): GizmoAxisSource;
}

declare class GizmoTransformSource extends Interface { 
	static Load(ResourceName: string): GizmoTransformSource;
	static Find(Outer: UObject, ResourceName: string): GizmoTransformSource;
	static GetDefaultObject(): GizmoTransformSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoTransformSource;
	SetTransform(NewTransform: Transform): void;
	GetTransform(): Transform;
	static C(Other: UObject | any): GizmoTransformSource;
}

declare class GizmoFloatParameterChange { 
	InitialValue: number;
	CurrentValue: number;
	clone() : GizmoFloatParameterChange;
	static C(Other: UObject | any): GizmoFloatParameterChange;
}

declare class GizmoAxisTranslationParameterSource extends GizmoBaseFloatParameterSource { 
	AxisSource: GizmoAxisSource;
	TransformSource: GizmoTransformSource;
	Parameter: number;
	LastChange: GizmoFloatParameterChange;
	CurTranslationAxis: Vector;
	CurTranslationOrigin: Vector;
	InitialTransform: Transform;
	static Load(ResourceName: string): GizmoAxisTranslationParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoAxisTranslationParameterSource;
	static GetDefaultObject(): GizmoAxisTranslationParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoAxisTranslationParameterSource;
	static C(Other: UObject | any): GizmoAxisTranslationParameterSource;
}

declare class GizmoPlaneTranslationParameterSource extends GizmoBaseVec2ParameterSource { 
	AxisSource: GizmoAxisSource;
	TransformSource: GizmoTransformSource;
	Parameter: Vector2D;
	LastChange: GizmoVec2ParameterChange;
	CurTranslationOrigin: Vector;
	CurTranslationNormal: Vector;
	CurTranslationAxisX: Vector;
	CurTranslationAxisY: Vector;
	InitialTransform: Transform;
	static Load(ResourceName: string): GizmoPlaneTranslationParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoPlaneTranslationParameterSource;
	static GetDefaultObject(): GizmoPlaneTranslationParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoPlaneTranslationParameterSource;
	static C(Other: UObject | any): GizmoPlaneTranslationParameterSource;
}

declare class GizmoAxisRotationParameterSource extends GizmoBaseFloatParameterSource { 
	AxisSource: GizmoAxisSource;
	TransformSource: GizmoTransformSource;
	Angle: number;
	LastChange: GizmoFloatParameterChange;
	CurRotationAxis: Vector;
	CurRotationOrigin: Vector;
	InitialTransform: Transform;
	static Load(ResourceName: string): GizmoAxisRotationParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoAxisRotationParameterSource;
	static GetDefaultObject(): GizmoAxisRotationParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoAxisRotationParameterSource;
	static C(Other: UObject | any): GizmoAxisRotationParameterSource;
}

declare class GizmoUniformScaleParameterSource extends GizmoBaseVec2ParameterSource { 
	AxisSource: GizmoAxisSource;
	TransformSource: GizmoTransformSource;
	ScaleMultiplier: number;
	Parameter: Vector2D;
	LastChange: GizmoVec2ParameterChange;
	CurScaleOrigin: Vector;
	CurScaleNormal: Vector;
	CurScaleAxisX: Vector;
	CurScaleAxisY: Vector;
	InitialTransform: Transform;
	static Load(ResourceName: string): GizmoUniformScaleParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoUniformScaleParameterSource;
	static GetDefaultObject(): GizmoUniformScaleParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoUniformScaleParameterSource;
	static C(Other: UObject | any): GizmoUniformScaleParameterSource;
}

declare class GizmoAxisScaleParameterSource extends GizmoBaseFloatParameterSource { 
	AxisSource: GizmoAxisSource;
	TransformSource: GizmoTransformSource;
	ScaleMultiplier: number;
	bClampToZero: boolean;
	Parameter: number;
	LastChange: GizmoFloatParameterChange;
	CurScaleAxis: Vector;
	CurScaleOrigin: Vector;
	InitialTransform: Transform;
	static Load(ResourceName: string): GizmoAxisScaleParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoAxisScaleParameterSource;
	static GetDefaultObject(): GizmoAxisScaleParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoAxisScaleParameterSource;
	static C(Other: UObject | any): GizmoAxisScaleParameterSource;
}

declare class GizmoPlaneScaleParameterSource extends GizmoBaseVec2ParameterSource { 
	AxisSource: GizmoAxisSource;
	TransformSource: GizmoTransformSource;
	ScaleMultiplier: number;
	bUseEqualScaling: boolean;
	bClampToZero: boolean;
	Parameter: Vector2D;
	LastChange: GizmoVec2ParameterChange;
	CurScaleOrigin: Vector;
	CurScaleNormal: Vector;
	CurScaleAxisX: Vector;
	CurScaleAxisY: Vector;
	InitialTransform: Transform;
	static Load(ResourceName: string): GizmoPlaneScaleParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoPlaneScaleParameterSource;
	static GetDefaultObject(): GizmoPlaneScaleParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoPlaneScaleParameterSource;
	static C(Other: UObject | any): GizmoPlaneScaleParameterSource;
}

declare class PhysicsDataSource extends Interface { 
	static Load(ResourceName: string): PhysicsDataSource;
	static Find(Outer: UObject, ResourceName: string): PhysicsDataSource;
	static GetDefaultObject(): PhysicsDataSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsDataSource;
	static C(Other: UObject | any): PhysicsDataSource;
}

declare class PrimitiveComponentBackedTarget extends Interface { 
	static Load(ResourceName: string): PrimitiveComponentBackedTarget;
	static Find(Outer: UObject, ResourceName: string): PrimitiveComponentBackedTarget;
	static GetDefaultObject(): PrimitiveComponentBackedTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrimitiveComponentBackedTarget;
	static C(Other: UObject | any): PrimitiveComponentBackedTarget;
}

declare class SkeletalMeshBackedTarget extends AssetBackedTarget { 
	static Load(ResourceName: string): SkeletalMeshBackedTarget;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshBackedTarget;
	static GetDefaultObject(): SkeletalMeshBackedTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshBackedTarget;
	static C(Other: UObject | any): SkeletalMeshBackedTarget;
}

declare class StaticMeshBackedTarget extends AssetBackedTarget { 
	static Load(ResourceName: string): StaticMeshBackedTarget;
	static Find(Outer: UObject, ResourceName: string): StaticMeshBackedTarget;
	static GetDefaultObject(): StaticMeshBackedTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshBackedTarget;
	static C(Other: UObject | any): StaticMeshBackedTarget;
}

declare class LocalClickDragInputBehavior extends ClickDragInputBehavior { 
	static Load(ResourceName: string): LocalClickDragInputBehavior;
	static Find(Outer: UObject, ResourceName: string): LocalClickDragInputBehavior;
	static GetDefaultObject(): LocalClickDragInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalClickDragInputBehavior;
	static C(Other: UObject | any): LocalClickDragInputBehavior;
}

declare class KeyAsModifierInputBehavior extends InputBehavior { 
	static Load(ResourceName: string): KeyAsModifierInputBehavior;
	static Find(Outer: UObject, ResourceName: string): KeyAsModifierInputBehavior;
	static GetDefaultObject(): KeyAsModifierInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KeyAsModifierInputBehavior;
	static C(Other: UObject | any): KeyAsModifierInputBehavior;
}

declare class MouseHoverBehavior extends InputBehavior { 
	static Load(ResourceName: string): MouseHoverBehavior;
	static Find(Outer: UObject, ResourceName: string): MouseHoverBehavior;
	static GetDefaultObject(): MouseHoverBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MouseHoverBehavior;
	static C(Other: UObject | any): MouseHoverBehavior;
}

declare class LocalMouseHoverBehavior extends MouseHoverBehavior { 
	static Load(ResourceName: string): LocalMouseHoverBehavior;
	static Find(Outer: UObject, ResourceName: string): LocalMouseHoverBehavior;
	static GetDefaultObject(): LocalMouseHoverBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalMouseHoverBehavior;
	static C(Other: UObject | any): LocalMouseHoverBehavior;
}

declare class MouseWheelInputBehavior extends AnyButtonInputBehavior { 
	static Load(ResourceName: string): MouseWheelInputBehavior;
	static Find(Outer: UObject, ResourceName: string): MouseWheelInputBehavior;
	static GetDefaultObject(): MouseWheelInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MouseWheelInputBehavior;
	static C(Other: UObject | any): MouseWheelInputBehavior;
}

declare class MultiClickSequenceInputBehavior extends AnyButtonInputBehavior { 
	static Load(ResourceName: string): MultiClickSequenceInputBehavior;
	static Find(Outer: UObject, ResourceName: string): MultiClickSequenceInputBehavior;
	static GetDefaultObject(): MultiClickSequenceInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiClickSequenceInputBehavior;
	static C(Other: UObject | any): MultiClickSequenceInputBehavior;
}

declare class SingleClickInputBehavior extends AnyButtonInputBehavior { 
	HitTestOnRelease: boolean;
	static Load(ResourceName: string): SingleClickInputBehavior;
	static Find(Outer: UObject, ResourceName: string): SingleClickInputBehavior;
	static GetDefaultObject(): SingleClickInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleClickInputBehavior;
	static C(Other: UObject | any): SingleClickInputBehavior;
}

declare class LocalSingleClickInputBehavior extends SingleClickInputBehavior { 
	static Load(ResourceName: string): LocalSingleClickInputBehavior;
	static Find(Outer: UObject, ResourceName: string): LocalSingleClickInputBehavior;
	static GetDefaultObject(): LocalSingleClickInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalSingleClickInputBehavior;
	static C(Other: UObject | any): LocalSingleClickInputBehavior;
}

declare class SingleClickOrDragInputBehavior extends AnyButtonInputBehavior { 
	bBeginDragIfClickTargetNotHit: boolean;
	ClickDistanceThreshold: number;
	static Load(ResourceName: string): SingleClickOrDragInputBehavior;
	static Find(Outer: UObject, ResourceName: string): SingleClickOrDragInputBehavior;
	static GetDefaultObject(): SingleClickOrDragInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleClickOrDragInputBehavior;
	static C(Other: UObject | any): SingleClickOrDragInputBehavior;
}

declare class SingleKeyCaptureBehavior extends InputBehavior { 
	static Load(ResourceName: string): SingleKeyCaptureBehavior;
	static Find(Outer: UObject, ResourceName: string): SingleKeyCaptureBehavior;
	static GetDefaultObject(): SingleKeyCaptureBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleKeyCaptureBehavior;
	static C(Other: UObject | any): SingleKeyCaptureBehavior;
}

declare class WidgetBaseBehavior extends Interface { 
	static Load(ResourceName: string): WidgetBaseBehavior;
	static Find(Outer: UObject, ResourceName: string): WidgetBaseBehavior;
	static GetDefaultObject(): WidgetBaseBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBaseBehavior;
	static C(Other: UObject | any): WidgetBaseBehavior;
}

declare class AxisAngleGizmoBuilder extends InteractiveGizmoBuilder { 
	static Load(ResourceName: string): AxisAngleGizmoBuilder;
	static Find(Outer: UObject, ResourceName: string): AxisAngleGizmoBuilder;
	static GetDefaultObject(): AxisAngleGizmoBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AxisAngleGizmoBuilder;
	static C(Other: UObject | any): AxisAngleGizmoBuilder;
}

declare class GizmoFloatParameterSource extends Interface { 
	static Load(ResourceName: string): GizmoFloatParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoFloatParameterSource;
	static GetDefaultObject(): GizmoFloatParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoFloatParameterSource;
	SetParameter(NewValue: number): void;
	GetParameter(): number;
	EndModify(): void;
	BeginModify(): void;
	static C(Other: UObject | any): GizmoFloatParameterSource;
}

declare class GizmoClickTarget extends Interface { 
	static Load(ResourceName: string): GizmoClickTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoClickTarget;
	static GetDefaultObject(): GizmoClickTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoClickTarget;
	UpdateInteractingState(bInteracting: boolean): void;
	UpdateHoverState(bHovering: boolean): void;
	static C(Other: UObject | any): GizmoClickTarget;
}

declare class GizmoStateTarget extends Interface { 
	static Load(ResourceName: string): GizmoStateTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoStateTarget;
	static GetDefaultObject(): GizmoStateTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoStateTarget;
	EndUpdate(): void;
	BeginUpdate(): void;
	static C(Other: UObject | any): GizmoStateTarget;
}

declare class AxisAngleGizmo extends InteractiveGizmo { 
	AxisSource: GizmoAxisSource;
	AngleSource: GizmoFloatParameterSource;
	HitTarget: GizmoClickTarget;
	StateTarget: GizmoStateTarget;
	MouseBehavior: ClickDragInputBehavior;
	bInInteraction: boolean;
	RotationOrigin: Vector;
	RotationAxis: Vector;
	RotationPlaneX: Vector;
	RotationPlaneY: Vector;
	InteractionStartPoint: Vector;
	InteractionCurPoint: Vector;
	InteractionStartAngle: number;
	InteractionCurAngle: number;
	static Load(ResourceName: string): AxisAngleGizmo;
	static Find(Outer: UObject, ResourceName: string): AxisAngleGizmo;
	static GetDefaultObject(): AxisAngleGizmo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AxisAngleGizmo;
	static C(Other: UObject | any): AxisAngleGizmo;
}

declare class AxisPositionGizmoBuilder extends InteractiveGizmoBuilder { 
	static Load(ResourceName: string): AxisPositionGizmoBuilder;
	static Find(Outer: UObject, ResourceName: string): AxisPositionGizmoBuilder;
	static GetDefaultObject(): AxisPositionGizmoBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AxisPositionGizmoBuilder;
	static C(Other: UObject | any): AxisPositionGizmoBuilder;
}

declare class AxisPositionGizmo extends InteractiveGizmo { 
	AxisSource: GizmoAxisSource;
	ParameterSource: GizmoFloatParameterSource;
	GizmoViewContext: GizmoViewContext;
	HitTarget: GizmoClickTarget;
	StateTarget: GizmoStateTarget;
	MouseBehavior: ClickDragInputBehavior;
	bEnableSignedAxis: boolean;
	bInInteraction: boolean;
	InteractionOrigin: Vector;
	InteractionAxis: Vector;
	InteractionStartPoint: Vector;
	InteractionCurPoint: Vector;
	InteractionStartParameter: number;
	InteractionCurParameter: number;
	ParameterSign: number;
	static Load(ResourceName: string): AxisPositionGizmo;
	static Find(Outer: UObject, ResourceName: string): AxisPositionGizmo;
	static GetDefaultObject(): AxisPositionGizmo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AxisPositionGizmo;
	static C(Other: UObject | any): AxisPositionGizmo;
}

declare class GizmoConstantAxisSource extends UObject { 
	Origin: Vector;
	Direction: Vector;
	static Load(ResourceName: string): GizmoConstantAxisSource;
	static Find(Outer: UObject, ResourceName: string): GizmoConstantAxisSource;
	static GetDefaultObject(): GizmoConstantAxisSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoConstantAxisSource;
	static C(Other: UObject | any): GizmoConstantAxisSource;
}

declare class GizmoWorldAxisSource extends UObject { 
	Origin: Vector;
	AxisIndex: number;
	static Load(ResourceName: string): GizmoWorldAxisSource;
	static Find(Outer: UObject, ResourceName: string): GizmoWorldAxisSource;
	static GetDefaultObject(): GizmoWorldAxisSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoWorldAxisSource;
	static C(Other: UObject | any): GizmoWorldAxisSource;
}

declare class GizmoComponentAxisSource extends UObject { 
	Component: SceneComponent;
	AxisIndex: number;
	bLocalAxes: boolean;
	static Load(ResourceName: string): GizmoComponentAxisSource;
	static Find(Outer: UObject, ResourceName: string): GizmoComponentAxisSource;
	static GetDefaultObject(): GizmoComponentAxisSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoComponentAxisSource;
	static C(Other: UObject | any): GizmoComponentAxisSource;
}

declare class BrushStampIndicatorBuilder extends InteractiveGizmoBuilder { 
	static Load(ResourceName: string): BrushStampIndicatorBuilder;
	static Find(Outer: UObject, ResourceName: string): BrushStampIndicatorBuilder;
	static GetDefaultObject(): BrushStampIndicatorBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrushStampIndicatorBuilder;
	static C(Other: UObject | any): BrushStampIndicatorBuilder;
}

declare class BrushStampIndicator extends InteractiveGizmo { 
	bVisible: boolean;
	BrushRadius: number;
	BrushFalloff: number;
	BrushPosition: Vector;
	BrushNormal: Vector;
	bDrawIndicatorLines: boolean;
	bDrawRadiusCircle: boolean;
	SampleStepCount: number;
	LineColor: LinearColor;
	LineThickness: number;
	bDepthTested: boolean;
	bDrawSecondaryLines: boolean;
	SecondaryLineThickness: number;
	SecondaryLineColor: LinearColor;
	AttachedComponent: PrimitiveComponent;
	static Load(ResourceName: string): BrushStampIndicator;
	static Find(Outer: UObject, ResourceName: string): BrushStampIndicator;
	static GetDefaultObject(): BrushStampIndicator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrushStampIndicator;
	static C(Other: UObject | any): BrushStampIndicator;
}

declare class GizmoActor extends InternalToolFrameworkActor { 
	static GetDefaultObject(): GizmoActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoActor;
	static C(Other: UObject | any): GizmoActor;
}

declare class CombinedTransformGizmoActor extends GizmoActor { 
	TranslateX: PrimitiveComponent;
	TranslateY: PrimitiveComponent;
	TranslateZ: PrimitiveComponent;
	TranslateYZ: PrimitiveComponent;
	TranslateXZ: PrimitiveComponent;
	TranslateXY: PrimitiveComponent;
	RotateX: PrimitiveComponent;
	RotateY: PrimitiveComponent;
	RotateZ: PrimitiveComponent;
	UniformScale: PrimitiveComponent;
	AxisScaleX: PrimitiveComponent;
	AxisScaleY: PrimitiveComponent;
	AxisScaleZ: PrimitiveComponent;
	PlaneScaleYZ: PrimitiveComponent;
	PlaneScaleXZ: PrimitiveComponent;
	PlaneScaleXY: PrimitiveComponent;
	static GetDefaultObject(): CombinedTransformGizmoActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CombinedTransformGizmoActor;
	static C(Other: UObject | any): CombinedTransformGizmoActor;
}

declare class CombinedTransformGizmoBuilder extends InteractiveGizmoBuilder { 
	static Load(ResourceName: string): CombinedTransformGizmoBuilder;
	static Find(Outer: UObject, ResourceName: string): CombinedTransformGizmoBuilder;
	static GetDefaultObject(): CombinedTransformGizmoBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CombinedTransformGizmoBuilder;
	static C(Other: UObject | any): CombinedTransformGizmoBuilder;
}

declare type EToolContextCoordinateSystem = 'World' | 'Local' | 'EToolContextCoordinateSystem_MAX';
declare var EToolContextCoordinateSystem : { World:'World',Local:'Local',EToolContextCoordinateSystem_MAX:'EToolContextCoordinateSystem_MAX', };
declare class GizmoTransformChangeStateTarget extends UObject { 
	TransactionManager: ToolContextTransactionProvider;
	static Load(ResourceName: string): GizmoTransformChangeStateTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoTransformChangeStateTarget;
	static GetDefaultObject(): GizmoTransformChangeStateTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoTransformChangeStateTarget;
	static C(Other: UObject | any): GizmoTransformChangeStateTarget;
}

declare class CombinedTransformGizmo extends InteractiveGizmo { 
	ActiveTarget: TransformProxy;
	bSnapToWorldGrid: boolean;
	bGridSizeIsExplicit: boolean;
	ExplicitGridSize: Vector;
	bRotationGridSizeIsExplicit: boolean;
	ExplicitRotationGridSize: Rotator;
	bSnapToWorldRotGrid: boolean;
	bUseContextCoordinateSystem: boolean;
	CurrentCoordinateSystem: EToolContextCoordinateSystem;
	ActiveComponents: PrimitiveComponent[];
	NonuniformScaleComponents: PrimitiveComponent[];
	ActiveGizmos: InteractiveGizmo[];
	CameraAxisSource: GizmoConstantFrameAxisSource;
	AxisXSource: GizmoComponentAxisSource;
	AxisYSource: GizmoComponentAxisSource;
	AxisZSource: GizmoComponentAxisSource;
	UnitAxisXSource: GizmoComponentAxisSource;
	UnitAxisYSource: GizmoComponentAxisSource;
	UnitAxisZSource: GizmoComponentAxisSource;
	StateTarget: GizmoTransformChangeStateTarget;
	static Load(ResourceName: string): CombinedTransformGizmo;
	static Find(Outer: UObject, ResourceName: string): CombinedTransformGizmo;
	static GetDefaultObject(): CombinedTransformGizmo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CombinedTransformGizmo;
	static C(Other: UObject | any): CombinedTransformGizmo;
}

declare class GizmoArrowComponent extends GizmoBaseComponent { 
	Direction: Vector;
	Gap: number;
	Length: number;
	Thickness: number;
	static Load(ResourceName: string): GizmoArrowComponent;
	static Find(Outer: UObject, ResourceName: string): GizmoArrowComponent;
	static GetDefaultObject(): GizmoArrowComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoArrowComponent;
	static C(Other: UObject | any): GizmoArrowComponent;
}

declare class GizmoBoxComponent extends GizmoBaseComponent { 
	Origin: Vector;
	Rotation: Quat;
	Dimensions: Vector;
	LineThickness: number;
	bRemoveHiddenLines: boolean;
	bEnableAxisFlip: boolean;
	static Load(ResourceName: string): GizmoBoxComponent;
	static Find(Outer: UObject, ResourceName: string): GizmoBoxComponent;
	static GetDefaultObject(): GizmoBoxComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoBoxComponent;
	static C(Other: UObject | any): GizmoBoxComponent;
}

declare class GizmoCircleComponent extends GizmoBaseComponent { 
	Normal: Vector;
	Radius: number;
	Thickness: number;
	NumSides: number;
	bViewAligned: boolean;
	bDrawFullCircle: boolean;
	bOnlyAllowFrontFacingHits: boolean;
	static Load(ResourceName: string): GizmoCircleComponent;
	static Find(Outer: UObject, ResourceName: string): GizmoCircleComponent;
	static GetDefaultObject(): GizmoCircleComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoCircleComponent;
	static C(Other: UObject | any): GizmoCircleComponent;
}

declare class GizmoElementHitTarget extends UObject { 
	GizmoElement: GizmoElementBase;
	GizmoViewContext: GizmoViewContext;
	GizmoTransformProxy: TransformProxy;
	static Load(ResourceName: string): GizmoElementHitTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoElementHitTarget;
	static GetDefaultObject(): GizmoElementHitTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoElementHitTarget;
	static C(Other: UObject | any): GizmoElementHitTarget;
}

declare class GizmoClickMultiTarget extends Interface { 
	static Load(ResourceName: string): GizmoClickMultiTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoClickMultiTarget;
	static GetDefaultObject(): GizmoClickMultiTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoClickMultiTarget;
	UpdateInteractingState(bInteracting: boolean,InPartIdentifier: number): void;
	UpdateHoverState(bHovering: boolean,InPartIdentifier: number): void;
	UpdateHittableState(bHittable: boolean,InPartIdentifier: number): void;
	static C(Other: UObject | any): GizmoClickMultiTarget;
}

declare class GizmoRenderTarget extends Interface { 
	static Load(ResourceName: string): GizmoRenderTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoRenderTarget;
	static GetDefaultObject(): GizmoRenderTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoRenderTarget;
	static C(Other: UObject | any): GizmoRenderTarget;
}

declare class GizmoRenderMultiTarget extends Interface { 
	static Load(ResourceName: string): GizmoRenderMultiTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoRenderMultiTarget;
	static GetDefaultObject(): GizmoRenderMultiTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoRenderMultiTarget;
	UpdateVisibilityState(bVisible: boolean,InPartIdentifier: number): void;
	static C(Other: UObject | any): GizmoRenderMultiTarget;
}

declare class GizmoVec2ParameterSource extends Interface { 
	static Load(ResourceName: string): GizmoVec2ParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoVec2ParameterSource;
	static GetDefaultObject(): GizmoVec2ParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoVec2ParameterSource;
	SetParameter(NewValue: Vector2D): void;
	GetParameter(): Vector2D;
	EndModify(): void;
	BeginModify(): void;
	static C(Other: UObject | any): GizmoVec2ParameterSource;
}

declare class GizmoLineHandleComponent extends GizmoBaseComponent { 
	Normal: Vector;
	HandleSize: number;
	Thickness: number;
	Direction: Vector;
	Length: number;
	bImageScale: boolean;
	static Load(ResourceName: string): GizmoLineHandleComponent;
	static Find(Outer: UObject, ResourceName: string): GizmoLineHandleComponent;
	static GetDefaultObject(): GizmoLineHandleComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoLineHandleComponent;
	static C(Other: UObject | any): GizmoLineHandleComponent;
}

declare class GizmoRectangleComponent extends GizmoBaseComponent { 
	DirectionX: Vector;
	DirectionY: Vector;
	bOrientYAccordingToCamera: boolean;
	OffsetX: number;
	OffsetY: number;
	LengthX: number;
	LengthY: number;
	Thickness: number;
	SegmentFlags: number;
	static Load(ResourceName: string): GizmoRectangleComponent;
	static Find(Outer: UObject, ResourceName: string): GizmoRectangleComponent;
	static GetDefaultObject(): GizmoRectangleComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoRectangleComponent;
	static C(Other: UObject | any): GizmoRectangleComponent;
}

declare class GizmoLambdaHitTarget extends UObject { 
	static Load(ResourceName: string): GizmoLambdaHitTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoLambdaHitTarget;
	static GetDefaultObject(): GizmoLambdaHitTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoLambdaHitTarget;
	static C(Other: UObject | any): GizmoLambdaHitTarget;
}

declare class GizmoComponentHitTarget extends UObject { 
	Component: PrimitiveComponent;
	static Load(ResourceName: string): GizmoComponentHitTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoComponentHitTarget;
	static GetDefaultObject(): GizmoComponentHitTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoComponentHitTarget;
	static C(Other: UObject | any): GizmoComponentHitTarget;
}

declare class IntervalGizmoActor extends GizmoActor { 
	UpIntervalComponent: GizmoLineHandleComponent;
	DownIntervalComponent: GizmoLineHandleComponent;
	ForwardIntervalComponent: GizmoLineHandleComponent;
	static GetDefaultObject(): IntervalGizmoActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IntervalGizmoActor;
	static C(Other: UObject | any): IntervalGizmoActor;
}

declare class IntervalGizmoBuilder extends InteractiveGizmoBuilder { 
	static Load(ResourceName: string): IntervalGizmoBuilder;
	static Find(Outer: UObject, ResourceName: string): IntervalGizmoBuilder;
	static GetDefaultObject(): IntervalGizmoBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IntervalGizmoBuilder;
	static C(Other: UObject | any): IntervalGizmoBuilder;
}

declare class IntervalGizmo extends InteractiveGizmo { 
	StateTarget: GizmoTransformChangeStateTarget;
	TransformProxy: TransformProxy;
	ActiveComponents: PrimitiveComponent[];
	ActiveGizmos: InteractiveGizmo[];
	AxisYSource: GizmoComponentAxisSource;
	AxisZSource: GizmoComponentAxisSource;
	static Load(ResourceName: string): IntervalGizmo;
	static Find(Outer: UObject, ResourceName: string): IntervalGizmo;
	static GetDefaultObject(): IntervalGizmo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IntervalGizmo;
	static C(Other: UObject | any): IntervalGizmo;
}

declare class GizmoAxisIntervalParameterSource extends GizmoBaseFloatParameterSource { 
	FloatParameterSource: GizmoFloatParameterSource;
	MinParameter: number;
	MaxParameter: number;
	static Load(ResourceName: string): GizmoAxisIntervalParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoAxisIntervalParameterSource;
	static GetDefaultObject(): GizmoAxisIntervalParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoAxisIntervalParameterSource;
	static C(Other: UObject | any): GizmoAxisIntervalParameterSource;
}

declare class GizmoLocalFloatParameterSource extends GizmoBaseFloatParameterSource { 
	Value: number;
	LastChange: GizmoFloatParameterChange;
	static Load(ResourceName: string): GizmoLocalFloatParameterSource;
	static Find(Outer: UObject, ResourceName: string): GizmoLocalFloatParameterSource;
	static GetDefaultObject(): GizmoLocalFloatParameterSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoLocalFloatParameterSource;
	static C(Other: UObject | any): GizmoLocalFloatParameterSource;
}

declare class PlanePositionGizmoBuilder extends InteractiveGizmoBuilder { 
	static Load(ResourceName: string): PlanePositionGizmoBuilder;
	static Find(Outer: UObject, ResourceName: string): PlanePositionGizmoBuilder;
	static GetDefaultObject(): PlanePositionGizmoBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlanePositionGizmoBuilder;
	static C(Other: UObject | any): PlanePositionGizmoBuilder;
}

declare class PlanePositionGizmo extends InteractiveGizmo { 
	AxisSource: GizmoAxisSource;
	ParameterSource: GizmoVec2ParameterSource;
	HitTarget: GizmoClickTarget;
	StateTarget: GizmoStateTarget;
	MouseBehavior: ClickDragInputBehavior;
	bEnableSignedAxis: boolean;
	bFlipX: boolean;
	bFlipY: boolean;
	bInInteraction: boolean;
	InteractionOrigin: Vector;
	InteractionNormal: Vector;
	InteractionAxisX: Vector;
	InteractionAxisY: Vector;
	InteractionStartPoint: Vector;
	InteractionCurPoint: Vector;
	InteractionStartParameter: Vector2D;
	InteractionCurParameter: Vector2D;
	ParameterSigns: Vector2D;
	static Load(ResourceName: string): PlanePositionGizmo;
	static Find(Outer: UObject, ResourceName: string): PlanePositionGizmo;
	static GetDefaultObject(): PlanePositionGizmo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlanePositionGizmo;
	static C(Other: UObject | any): PlanePositionGizmo;
}

declare class RepositionableTransformGizmoBuilder extends CombinedTransformGizmoBuilder { 
	static Load(ResourceName: string): RepositionableTransformGizmoBuilder;
	static Find(Outer: UObject, ResourceName: string): RepositionableTransformGizmoBuilder;
	static GetDefaultObject(): RepositionableTransformGizmoBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RepositionableTransformGizmoBuilder;
	static C(Other: UObject | any): RepositionableTransformGizmoBuilder;
}

declare class RepositionableTransformGizmo extends CombinedTransformGizmo { 
	RepositionStateTarget: GizmoTransformChangeStateTarget;
	static Load(ResourceName: string): RepositionableTransformGizmo;
	static Find(Outer: UObject, ResourceName: string): RepositionableTransformGizmo;
	static GetDefaultObject(): RepositionableTransformGizmo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RepositionableTransformGizmo;
	static C(Other: UObject | any): RepositionableTransformGizmo;
}

declare class ScalableSphereGizmoBuilder extends InteractiveGizmoBuilder { 
	static Load(ResourceName: string): ScalableSphereGizmoBuilder;
	static Find(Outer: UObject, ResourceName: string): ScalableSphereGizmoBuilder;
	static GetDefaultObject(): ScalableSphereGizmoBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScalableSphereGizmoBuilder;
	static C(Other: UObject | any): ScalableSphereGizmoBuilder;
}

declare class ScalableSphereGizmo extends InteractiveGizmo { 
	HitErrorThreshold: number;
	TransactionDescription: string;
	Radius: number;
	bIsHovering: boolean;
	bIsDragging: boolean;
	ActiveTarget: TransformProxy;
	ActiveAxis: Vector;
	DragStartWorldPosition: Vector;
	DragCurrentPositionProjected: Vector;
	InteractionStartParameter: number;
	static Load(ResourceName: string): ScalableSphereGizmo;
	static Find(Outer: UObject, ResourceName: string): ScalableSphereGizmo;
	static GetDefaultObject(): ScalableSphereGizmo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScalableSphereGizmo;
	static C(Other: UObject | any): ScalableSphereGizmo;
}

declare class ScalableSphereGizmoInputBehavior extends AnyButtonInputBehavior { 
	static Load(ResourceName: string): ScalableSphereGizmoInputBehavior;
	static Find(Outer: UObject, ResourceName: string): ScalableSphereGizmoInputBehavior;
	static GetDefaultObject(): ScalableSphereGizmoInputBehavior;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScalableSphereGizmoInputBehavior;
	static C(Other: UObject | any): ScalableSphereGizmoInputBehavior;
}

declare class GizmoNilStateTarget extends UObject { 
	static Load(ResourceName: string): GizmoNilStateTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoNilStateTarget;
	static GetDefaultObject(): GizmoNilStateTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoNilStateTarget;
	static C(Other: UObject | any): GizmoNilStateTarget;
}

declare class GizmoLambdaStateTarget extends UObject { 
	static Load(ResourceName: string): GizmoLambdaStateTarget;
	static Find(Outer: UObject, ResourceName: string): GizmoLambdaStateTarget;
	static GetDefaultObject(): GizmoLambdaStateTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoLambdaStateTarget;
	static C(Other: UObject | any): GizmoLambdaStateTarget;
}

declare class CombinedTransformGizmoContextObject extends UObject { 
	static Load(ResourceName: string): CombinedTransformGizmoContextObject;
	static Find(Outer: UObject, ResourceName: string): CombinedTransformGizmoContextObject;
	static GetDefaultObject(): CombinedTransformGizmoContextObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CombinedTransformGizmoContextObject;
	static C(Other: UObject | any): CombinedTransformGizmoContextObject;
}

declare class GizmoBaseTransformSource extends UObject { 
	static Load(ResourceName: string): GizmoBaseTransformSource;
	static Find(Outer: UObject, ResourceName: string): GizmoBaseTransformSource;
	static GetDefaultObject(): GizmoBaseTransformSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoBaseTransformSource;
	static C(Other: UObject | any): GizmoBaseTransformSource;
}

declare class GizmoComponentWorldTransformSource extends GizmoBaseTransformSource { 
	Component: SceneComponent;
	bModifyComponentOnTransform: boolean;
	static Load(ResourceName: string): GizmoComponentWorldTransformSource;
	static Find(Outer: UObject, ResourceName: string): GizmoComponentWorldTransformSource;
	static GetDefaultObject(): GizmoComponentWorldTransformSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoComponentWorldTransformSource;
	static C(Other: UObject | any): GizmoComponentWorldTransformSource;
}

declare class GizmoScaledTransformSource extends GizmoBaseTransformSource { 
	ChildTransformSource: GizmoTransformSource;
	static Load(ResourceName: string): GizmoScaledTransformSource;
	static Find(Outer: UObject, ResourceName: string): GizmoScaledTransformSource;
	static GetDefaultObject(): GizmoScaledTransformSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoScaledTransformSource;
	static C(Other: UObject | any): GizmoScaledTransformSource;
}

declare class GizmoTransformProxyTransformSource extends GizmoBaseTransformSource { 
	Proxy: TransformProxy;
	static Load(ResourceName: string): GizmoTransformProxyTransformSource;
	static Find(Outer: UObject, ResourceName: string): GizmoTransformProxyTransformSource;
	static GetDefaultObject(): GizmoTransformProxyTransformSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoTransformProxyTransformSource;
	static C(Other: UObject | any): GizmoTransformProxyTransformSource;
}

declare class GizmoScaledAndUnscaledTransformSources extends GizmoBaseTransformSource { 
	ScaledTransformSource: GizmoTransformSource;
	UnscaledTransformSource: GizmoTransformSource;
	static Load(ResourceName: string): GizmoScaledAndUnscaledTransformSources;
	static Find(Outer: UObject, ResourceName: string): GizmoScaledAndUnscaledTransformSources;
	static GetDefaultObject(): GizmoScaledAndUnscaledTransformSources;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoScaledAndUnscaledTransformSources;
	static C(Other: UObject | any): GizmoScaledAndUnscaledTransformSources;
}

declare class InteractiveToolPropertySet extends UObject { 
	CachedPropertiesMap: Map<string, InteractiveToolPropertySet>;
	bIsPropertySetEnabled: boolean;
	static Load(ResourceName: string): InteractiveToolPropertySet;
	static Find(Outer: UObject, ResourceName: string): InteractiveToolPropertySet;
	static GetDefaultObject(): InteractiveToolPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveToolPropertySet;
	static C(Other: UObject | any): InteractiveToolPropertySet;
}

declare class BrushBaseProperties extends InteractiveToolPropertySet { 
	BrushSize: number;
	bSpecifyRadius: boolean;
	BrushRadius: number;
	BrushStrength: number;
	BrushFalloffAmount: number;
	bShowStrength: boolean;
	bShowFalloff: boolean;
	static Load(ResourceName: string): BrushBaseProperties;
	static Find(Outer: UObject, ResourceName: string): BrushBaseProperties;
	static GetDefaultObject(): BrushBaseProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrushBaseProperties;
	static C(Other: UObject | any): BrushBaseProperties;
}

declare class ToolTarget extends UObject { 
	static Load(ResourceName: string): ToolTarget;
	static Find(Outer: UObject, ResourceName: string): ToolTarget;
	static GetDefaultObject(): ToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ToolTarget;
	static C(Other: UObject | any): ToolTarget;
}

declare class SingleSelectionTool extends InteractiveTool { 
	Target: ToolTarget;
	static Load(ResourceName: string): SingleSelectionTool;
	static Find(Outer: UObject, ResourceName: string): SingleSelectionTool;
	static GetDefaultObject(): SingleSelectionTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleSelectionTool;
	static C(Other: UObject | any): SingleSelectionTool;
}

declare class MeshSurfacePointTool extends SingleSelectionTool { 
	TargetWorld: World;
	static Load(ResourceName: string): MeshSurfacePointTool;
	static Find(Outer: UObject, ResourceName: string): MeshSurfacePointTool;
	static GetDefaultObject(): MeshSurfacePointTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSurfacePointTool;
	static C(Other: UObject | any): MeshSurfacePointTool;
}

declare class BrushStampData { 
	clone() : BrushStampData;
	static C(Other: UObject | any): BrushStampData;
}

declare class BaseBrushTool extends MeshSurfacePointTool { 
	BrushProperties: BrushBaseProperties;
	bInBrushStroke: boolean;
	WorldToLocalScale: number;
	LastBrushStamp: BrushStampData;
	PropertyClass: Class;
	BrushStampIndicator: BrushStampIndicator;
	static Load(ResourceName: string): BaseBrushTool;
	static Find(Outer: UObject, ResourceName: string): BaseBrushTool;
	static GetDefaultObject(): BaseBrushTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseBrushTool;
	static C(Other: UObject | any): BaseBrushTool;
}

declare class ClickDragToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): ClickDragToolBuilder;
	static Find(Outer: UObject, ResourceName: string): ClickDragToolBuilder;
	static GetDefaultObject(): ClickDragToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClickDragToolBuilder;
	static C(Other: UObject | any): ClickDragToolBuilder;
}

declare class ClickDragTool extends InteractiveTool { 
	static Load(ResourceName: string): ClickDragTool;
	static Find(Outer: UObject, ResourceName: string): ClickDragTool;
	static GetDefaultObject(): ClickDragTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClickDragTool;
	static C(Other: UObject | any): ClickDragTool;
}

declare class InteractiveToolWithToolTargetsBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): InteractiveToolWithToolTargetsBuilder;
	static Find(Outer: UObject, ResourceName: string): InteractiveToolWithToolTargetsBuilder;
	static GetDefaultObject(): InteractiveToolWithToolTargetsBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveToolWithToolTargetsBuilder;
	static C(Other: UObject | any): InteractiveToolWithToolTargetsBuilder;
}

declare class MeshSurfacePointToolBuilder extends InteractiveToolWithToolTargetsBuilder { 
	static Load(ResourceName: string): MeshSurfacePointToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshSurfacePointToolBuilder;
	static GetDefaultObject(): MeshSurfacePointToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSurfacePointToolBuilder;
	static C(Other: UObject | any): MeshSurfacePointToolBuilder;
}

declare class SingleClickToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): SingleClickToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SingleClickToolBuilder;
	static GetDefaultObject(): SingleClickToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleClickToolBuilder;
	static C(Other: UObject | any): SingleClickToolBuilder;
}

declare class SingleClickTool extends InteractiveTool { 
	static Load(ResourceName: string): SingleClickTool;
	static Find(Outer: UObject, ResourceName: string): SingleClickTool;
	static GetDefaultObject(): SingleClickTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleClickTool;
	static C(Other: UObject | any): SingleClickTool;
}

declare class InputBehaviorSource extends Interface { 
	static Load(ResourceName: string): InputBehaviorSource;
	static Find(Outer: UObject, ResourceName: string): InputBehaviorSource;
	static GetDefaultObject(): InputBehaviorSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InputBehaviorSource;
	static C(Other: UObject | any): InputBehaviorSource;
}

declare class LocalInputBehaviorSource extends UObject { 
	static Load(ResourceName: string): LocalInputBehaviorSource;
	static Find(Outer: UObject, ResourceName: string): LocalInputBehaviorSource;
	static GetDefaultObject(): LocalInputBehaviorSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalInputBehaviorSource;
	static C(Other: UObject | any): LocalInputBehaviorSource;
}

declare class InteractionMechanic extends UObject { 
	static Load(ResourceName: string): InteractionMechanic;
	static Find(Outer: UObject, ResourceName: string): InteractionMechanic;
	static GetDefaultObject(): InteractionMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractionMechanic;
	static C(Other: UObject | any): InteractionMechanic;
}

declare class MultiSelectionTool extends InteractiveTool { 
	Targets: ToolTarget[];
	static Load(ResourceName: string): MultiSelectionTool;
	static Find(Outer: UObject, ResourceName: string): MultiSelectionTool;
	static GetDefaultObject(): MultiSelectionTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiSelectionTool;
	static C(Other: UObject | any): MultiSelectionTool;
}

declare class SceneSnappingManager extends UObject { 
	static Load(ResourceName: string): SceneSnappingManager;
	static Find(Outer: UObject, ResourceName: string): SceneSnappingManager;
	static GetDefaultObject(): SceneSnappingManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneSnappingManager;
	static C(Other: UObject | any): SceneSnappingManager;
}

declare class SelectionSet extends UObject { 
	static Load(ResourceName: string): SelectionSet;
	static Find(Outer: UObject, ResourceName: string): SelectionSet;
	static GetDefaultObject(): SelectionSet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelectionSet;
	static C(Other: UObject | any): SelectionSet;
}

declare class MeshSelectionSet extends SelectionSet { 
	Vertices: number[];
	Edges: number[];
	Faces: number[];
	Groups: number[];
	static Load(ResourceName: string): MeshSelectionSet;
	static Find(Outer: UObject, ResourceName: string): MeshSelectionSet;
	static GetDefaultObject(): MeshSelectionSet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSelectionSet;
	static C(Other: UObject | any): MeshSelectionSet;
}

declare class PrimitiveComponentToolTarget extends ToolTarget { 
	static Load(ResourceName: string): PrimitiveComponentToolTarget;
	static Find(Outer: UObject, ResourceName: string): PrimitiveComponentToolTarget;
	static GetDefaultObject(): PrimitiveComponentToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrimitiveComponentToolTarget;
	static C(Other: UObject | any): PrimitiveComponentToolTarget;
}

declare class PrimitiveComponentToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): PrimitiveComponentToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): PrimitiveComponentToolTargetFactory;
	static GetDefaultObject(): PrimitiveComponentToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrimitiveComponentToolTargetFactory;
	static C(Other: UObject | any): PrimitiveComponentToolTargetFactory;
}

declare class AnimationEditContext extends Interface { 
	static Load(ResourceName: string): AnimationEditContext;
	static Find(Outer: UObject, ResourceName: string): AnimationEditContext;
	static GetDefaultObject(): AnimationEditContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationEditContext;
	static C(Other: UObject | any): AnimationEditContext;
}

declare class AnimationEditModeContext extends UObject { 
	static Load(ResourceName: string): AnimationEditModeContext;
	static Find(Outer: UObject, ResourceName: string): AnimationEditModeContext;
	static GetDefaultObject(): AnimationEditModeContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationEditModeContext;
	static C(Other: UObject | any): AnimationEditModeContext;
}

declare class SourceControlMenuContext extends UObject { 
	SelectedFiles: string[];
	static Load(ResourceName: string): SourceControlMenuContext;
	static Find(Outer: UObject, ResourceName: string): SourceControlMenuContext;
	static GetDefaultObject(): SourceControlMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceControlMenuContext;
	static C(Other: UObject | any): SourceControlMenuContext;
}

declare class SourceControlSettings extends UObject { 
	bShowAssetTypeColumn: boolean;
	bShowAssetLastModifiedTimeColumn: boolean;
	bShowAssetCheckedOutByColumn: boolean;
	bEnableSubmitContentMenuAction: boolean;
	static Load(ResourceName: string): SourceControlSettings;
	static Find(Outer: UObject, ResourceName: string): SourceControlSettings;
	static GetDefaultObject(): SourceControlSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceControlSettings;
	static C(Other: UObject | any): SourceControlSettings;
}

declare class SourceControlState { 
	Filename: string;
	bIsValid: boolean;
	bIsUnknown: boolean;
	bCanCheckIn: boolean;
	bCanCheckOut: boolean;
	bIsCheckedOut: boolean;
	bIsCurrent: boolean;
	bIsSourceControlled: boolean;
	bIsAdded: boolean;
	bIsDeleted: boolean;
	bIsIgnored: boolean;
	bCanEdit: boolean;
	bCanDelete: boolean;
	bIsModified: boolean;
	bCanAdd: boolean;
	bIsConflicted: boolean;
	bCanRevert: boolean;
	bIsCheckedOutOther: boolean;
	CheckedOutOther: string;
	clone() : SourceControlState;
	static C(Other: UObject | any): SourceControlState;
}

declare class SourceControlHelpers extends UObject { 
	static Load(ResourceName: string): SourceControlHelpers;
	static Find(Outer: UObject, ResourceName: string): SourceControlHelpers;
	static GetDefaultObject(): SourceControlHelpers;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceControlHelpers;
	static SyncFiles(InFiles: string[],bSilent: boolean): boolean;
	static SyncFile(InFile: string,bSilent: boolean): boolean;
	static RevertUnchangedFiles(InFiles: string[],bSilent: boolean): boolean;
	static RevertUnchangedFile(InFile: string,bSilent: boolean): boolean;
	static RevertFiles(InFiles: string[],bSilent: boolean): boolean;
	static RevertFile(InFile: string,bSilent: boolean): boolean;
	static RevertAndReloadPackages(InFilenames: string[]): boolean;
	static QueryFileState(InFile: string,bSilent: boolean): SourceControlState;
	static MarkFilesForDelete(InFiles: string[],bSilent: boolean): boolean;
	static MarkFilesForAdd(InFiles: string[],bSilent: boolean): boolean;
	static MarkFileForDelete(InFile: string,bSilent: boolean): boolean;
	static MarkFileForAdd(InFile: string,bSilent: boolean): boolean;
	static LastErrorMsg(): string;
	static IsEnabled(): boolean;
	static IsAvailable(): boolean;
	static CurrentProvider(): string;
	static CopyFile(InSourceFile: string,InDestFile: string,bSilent: boolean): boolean;
	static CheckOutOrAddFiles(InFiles: string[],bSilent: boolean): boolean;
	static CheckOutOrAddFile(InFile: string,bSilent: boolean): boolean;
	static CheckOutFiles(InFiles: string[],bSilent: boolean): boolean;
	static CheckOutFile(InFile: string,bSilent: boolean): boolean;
	static CheckInFiles(InFiles: string[],InDescription: string,bSilent: boolean,bKeepCheckedOut: boolean): boolean;
	static CheckInFile(InFile: string,InDescription: string,bSilent: boolean,bKeepCheckedOut: boolean): boolean;
	static C(Other: UObject | any): SourceControlHelpers;
}

declare class SourceControlPreferences extends DeveloperSettings { 
	bEnableValidationTag: boolean;
	bShouldDeleteNewFilesOnRevert: boolean;
	bEnableUncontrolledChangelists: boolean;
	CollectionChangelistTags: string[];
	SpecificCollectionChangelistTags: Map<string, string>;
	static Load(ResourceName: string): SourceControlPreferences;
	static Find(Outer: UObject, ResourceName: string): SourceControlPreferences;
	static GetDefaultObject(): SourceControlPreferences;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceControlPreferences;
	static C(Other: UObject | any): SourceControlPreferences;
}

declare class EditorConfigBase extends UObject { 
	static Load(ResourceName: string): EditorConfigBase;
	static Find(Outer: UObject, ResourceName: string): EditorConfigBase;
	static GetDefaultObject(): EditorConfigBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorConfigBase;
	static C(Other: UObject | any): EditorConfigBase;
}

declare class ActorBrowsingModeConfig { 
	bHideTemporaryActors: boolean;
	bShowOnlyActorsInCurrentLevel: boolean;
	bShowOnlySelectedActors: boolean;
	bHideActorComponents: boolean;
	bHideLevelInstanceHierarchy: boolean;
	bHideUnloadedActors: boolean;
	bHideEmptyFolders: boolean;
	bAlwaysFrameSelection: boolean;
	clone() : ActorBrowsingModeConfig;
	static C(Other: UObject | any): ActorBrowsingModeConfig;
}

declare class ActorBrowserConfig extends EditorConfigBase { 
	ActorBrowsers: Map<string, ActorBrowsingModeConfig>;
	static Load(ResourceName: string): ActorBrowserConfig;
	static Find(Outer: UObject, ResourceName: string): ActorBrowserConfig;
	static GetDefaultObject(): ActorBrowserConfig;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorBrowserConfig;
	static C(Other: UObject | any): ActorBrowserConfig;
}

declare class SceneOutlinerConfig { 
	ColumnVisibilities: Map<string, boolean>;
	bShouldStackHierarchyHeaders: boolean;
	clone() : SceneOutlinerConfig;
	static C(Other: UObject | any): SceneOutlinerConfig;
}

declare class OutlinerConfig extends EditorConfigBase { 
	Outliners: Map<string, SceneOutlinerConfig>;
	static Load(ResourceName: string): OutlinerConfig;
	static Find(Outer: UObject, ResourceName: string): OutlinerConfig;
	static GetDefaultObject(): OutlinerConfig;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OutlinerConfig;
	static C(Other: UObject | any): OutlinerConfig;
}

declare class SceneOutlinerMenuContext extends UObject { 
	static Load(ResourceName: string): SceneOutlinerMenuContext;
	static Find(Outer: UObject, ResourceName: string): SceneOutlinerMenuContext;
	static GetDefaultObject(): SceneOutlinerMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneOutlinerMenuContext;
	static C(Other: UObject | any): SceneOutlinerMenuContext;
}

declare class DetailsSectionSelection { 
	SectionNames: Set<string>;
	clone() : DetailsSectionSelection;
	static C(Other: UObject | any): DetailsSectionSelection;
}

declare class DetailsViewConfig { 
	bShowFavoritesCategory: boolean;
	bShowAllAdvanced: boolean;
	bShowHiddenPropertiesWhilePlaying: boolean;
	bShowAllChildrenIfCategoryMatches: boolean;
	bShowOnlyKeyable: boolean;
	bShowOnlyAnimated: boolean;
	bShowOnlyModified: boolean;
	bShowSections: boolean;
	ValueColumnWidth: number;
	SelectedSections: Map<string, DetailsSectionSelection>;
	clone() : DetailsViewConfig;
	static C(Other: UObject | any): DetailsViewConfig;
}

declare class DetailsConfig extends EditorConfigBase { 
	Views: Map<string, DetailsViewConfig>;
	static Load(ResourceName: string): DetailsConfig;
	static Find(Outer: UObject, ResourceName: string): DetailsConfig;
	static GetDefaultObject(): DetailsConfig;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DetailsConfig;
	static C(Other: UObject | any): DetailsConfig;
}

declare type EditConditionTestEnum = 'First' | 'Second' | 'EditConditionTestEnum_MAX';
declare var EditConditionTestEnum : { First:'First',Second:'Second',EditConditionTestEnum_MAX:'EditConditionTestEnum_MAX', };
declare type EditConditionByteEnum = 'First' | 'Second' | 'EditConditionByteEnum_MAX';
declare var EditConditionByteEnum : { First:'First',Second:'Second',EditConditionByteEnum_MAX:'EditConditionByteEnum_MAX', };
declare class EditConditionTestObject extends UObject { 
	BoolProperty: boolean;
	EnumProperty: EditConditionTestEnum;
	ByteEnumProperty: EditConditionByteEnum;
	DoubleProperty: number;
	IntegerProperty: number;
	UintBitfieldProperty: boolean;
	UObjectPtr: UObject;
	SoftClassPtr: Class;
	WeakObjectPtr: UObject;
	static Load(ResourceName: string): EditConditionTestObject;
	static Find(Outer: UObject, ResourceName: string): EditConditionTestObject;
	static GetDefaultObject(): EditConditionTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditConditionTestObject;
	static C(Other: UObject | any): EditConditionTestObject;
}

declare class AnimNodeFunctionRef { 
	ClassName: string;
	FunctionName: string;
	Class: UnrealEngineClass;
	UFunction: UFunction;
	clone() : AnimNodeFunctionRef;
	static C(Other: UObject | any): AnimNodeFunctionRef;
}

declare class AnimNode_Base { 
	InitialUpdateFunction: AnimNodeFunctionRef;
	BecomeRelevantFunction: AnimNodeFunctionRef;
	UpdateFunction: AnimNodeFunctionRef;
	clone() : AnimNode_Base;
	static C(Other: UObject | any): AnimNode_Base;
}

declare class PoseLinkBase { 
	LinkID: number;
	SourceLinkID: number;
	clone() : PoseLinkBase;
	static C(Other: UObject | any): PoseLinkBase;
}

declare class PoseLink extends PoseLinkBase { 
	clone() : PoseLink;
	static C(Other: UObject | any): PoseLink;
}

declare class AnimNode_Root extends AnimNode_Base { 
	Result: PoseLink;
	Name: string;
	Group: string;
	clone() : AnimNode_Root;
	static C(Other: UObject | any): AnimNode_Root;
}

declare class AnimNode_BlendSpaceSampleResult extends AnimNode_Root { 
	clone() : AnimNode_BlendSpaceSampleResult;
	static C(Other: UObject | any): AnimNode_BlendSpaceSampleResult;
}

declare class AnimGraphNode_BlendSpaceSampleResult extends AnimGraphNode_Base { 
	UNode: AnimNode_BlendSpaceSampleResult;
	static Load(ResourceName: string): AnimGraphNode_BlendSpaceSampleResult;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceSampleResult;
	static GetDefaultObject(): AnimGraphNode_BlendSpaceSampleResult;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceSampleResult;
	static C(Other: UObject | any): AnimGraphNode_BlendSpaceSampleResult;
}

declare class AnimationBlendSpaceSampleGraph extends AnimationGraph { 
	ResultNode: AnimGraphNode_BlendSpaceSampleResult;
	static Load(ResourceName: string): AnimationBlendSpaceSampleGraph;
	static Find(Outer: UObject, ResourceName: string): AnimationBlendSpaceSampleGraph;
	static GetDefaultObject(): AnimationBlendSpaceSampleGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationBlendSpaceSampleGraph;
	static C(Other: UObject | any): AnimationBlendSpaceSampleGraph;
}

declare class BlueprintCallableFunctionRedirect { 
	ClassName: string;
	OldFunctionName: string;
	NewFunctionName: string;
	BlueprintParamName: string;
	ClassParamName: string;
	clone() : BlueprintCallableFunctionRedirect;
	static C(Other: UObject | any): BlueprintCallableFunctionRedirect;
}

declare class EdGraphSchema_K2 extends EdGraphSchema { 
	EditoronlyBPFunctionRedirects: BlueprintCallableFunctionRedirect[];
	static Load(ResourceName: string): EdGraphSchema_K2;
	static Find(Outer: UObject, ResourceName: string): EdGraphSchema_K2;
	static GetDefaultObject(): EdGraphSchema_K2;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdGraphSchema_K2;
	static C(Other: UObject | any): EdGraphSchema_K2;
}

declare class AnimationConduitGraphSchema extends EdGraphSchema_K2 { 
	static Load(ResourceName: string): AnimationConduitGraphSchema;
	static Find(Outer: UObject, ResourceName: string): AnimationConduitGraphSchema;
	static GetDefaultObject(): AnimationConduitGraphSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationConduitGraphSchema;
	static C(Other: UObject | any): AnimationConduitGraphSchema;
}

declare class AnimNode_StateResult extends AnimNode_Root { 
	StateIndex: number;
	clone() : AnimNode_StateResult;
	static C(Other: UObject | any): AnimNode_StateResult;
}

declare class AnimGraphNode_StateResult extends AnimGraphNode_Base { 
	UNode: AnimNode_StateResult;
	static Load(ResourceName: string): AnimGraphNode_StateResult;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateResult;
	static GetDefaultObject(): AnimGraphNode_StateResult;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateResult;
	static C(Other: UObject | any): AnimGraphNode_StateResult;
}

declare class AnimGraphNode_CustomTransitionResult extends AnimGraphNode_StateResult { 
	static Load(ResourceName: string): AnimGraphNode_CustomTransitionResult;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CustomTransitionResult;
	static GetDefaultObject(): AnimGraphNode_CustomTransitionResult;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CustomTransitionResult;
	static C(Other: UObject | any): AnimGraphNode_CustomTransitionResult;
}

declare class AnimationCustomTransitionGraph extends AnimationGraph { 
	MyResultNode: AnimGraphNode_CustomTransitionResult;
	static Load(ResourceName: string): AnimationCustomTransitionGraph;
	static Find(Outer: UObject, ResourceName: string): AnimationCustomTransitionGraph;
	static GetDefaultObject(): AnimationCustomTransitionGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationCustomTransitionGraph;
	static C(Other: UObject | any): AnimationCustomTransitionGraph;
}

declare class AnimationGraphSchema extends EdGraphSchema_K2 { 
	PN_SequenceName: string;
	NAME_NeverAsPin: string;
	NAME_PinHiddenByDefault: string;
	NAME_PinShownByDefault: string;
	NAME_AlwaysAsPin: string;
	NAME_CustomizeProperty: string;
	NAME_OnEvaluate: string;
	DefaultEvaluationHandlerName: string;
	static Load(ResourceName: string): AnimationGraphSchema;
	static Find(Outer: UObject, ResourceName: string): AnimationGraphSchema;
	static GetDefaultObject(): AnimationGraphSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationGraphSchema;
	static C(Other: UObject | any): AnimationGraphSchema;
}

declare class AnimationCustomTransitionSchema extends AnimationGraphSchema { 
	static Load(ResourceName: string): AnimationCustomTransitionSchema;
	static Find(Outer: UObject, ResourceName: string): AnimationCustomTransitionSchema;
	static GetDefaultObject(): AnimationCustomTransitionSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationCustomTransitionSchema;
	static C(Other: UObject | any): AnimationCustomTransitionSchema;
}

declare class AnimationStateGraph extends AnimationGraph { 
	MyResultNode: AnimGraphNode_StateResult;
	static Load(ResourceName: string): AnimationStateGraph;
	static Find(Outer: UObject, ResourceName: string): AnimationStateGraph;
	static GetDefaultObject(): AnimationStateGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateGraph;
	static C(Other: UObject | any): AnimationStateGraph;
}

declare class AnimationStateGraphSchema extends AnimationGraphSchema { 
	static Load(ResourceName: string): AnimationStateGraphSchema;
	static Find(Outer: UObject, ResourceName: string): AnimationStateGraphSchema;
	static GetDefaultObject(): AnimationStateGraphSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateGraphSchema;
	static C(Other: UObject | any): AnimationStateGraphSchema;
}

declare class AnimStateEntryNode extends EdGraphNode { 
	static Load(ResourceName: string): AnimStateEntryNode;
	static Find(Outer: UObject, ResourceName: string): AnimStateEntryNode;
	static GetDefaultObject(): AnimStateEntryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateEntryNode;
	static C(Other: UObject | any): AnimStateEntryNode;
}

declare class AnimGraphNode_StateMachineBase extends AnimGraphNode_Base { 
	EditorStateMachineGraph: AnimationStateMachineGraph;
	static Load(ResourceName: string): AnimGraphNode_StateMachineBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateMachineBase;
	static GetDefaultObject(): AnimGraphNode_StateMachineBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateMachineBase;
	static C(Other: UObject | any): AnimGraphNode_StateMachineBase;
}

declare class AnimationStateMachineGraph extends EdGraph { 
	EntryNode: AnimStateEntryNode;
	OwnerAnimGraphNode: AnimGraphNode_StateMachineBase;
	static Load(ResourceName: string): AnimationStateMachineGraph;
	static Find(Outer: UObject, ResourceName: string): AnimationStateMachineGraph;
	static GetDefaultObject(): AnimationStateMachineGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateMachineGraph;
	static C(Other: UObject | any): AnimationStateMachineGraph;
}

declare class AnimationStateMachineSchema extends EdGraphSchema { 
	static Load(ResourceName: string): AnimationStateMachineSchema;
	static Find(Outer: UObject, ResourceName: string): AnimationStateMachineSchema;
	static GetDefaultObject(): AnimationStateMachineSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateMachineSchema;
	static C(Other: UObject | any): AnimationStateMachineSchema;
}

declare class AnimNode_TransitionResult extends AnimNode_Base { 
	bCanEnterTransition: boolean;
	clone() : AnimNode_TransitionResult;
	static C(Other: UObject | any): AnimNode_TransitionResult;
}

declare class AnimGraphNode_TransitionResult extends AnimGraphNode_Base { 
	UNode: AnimNode_TransitionResult;
	static Load(ResourceName: string): AnimGraphNode_TransitionResult;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TransitionResult;
	static GetDefaultObject(): AnimGraphNode_TransitionResult;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TransitionResult;
	static C(Other: UObject | any): AnimGraphNode_TransitionResult;
}

declare class AnimationTransitionGraph extends AnimationGraph { 
	MyResultNode: AnimGraphNode_TransitionResult;
	static Load(ResourceName: string): AnimationTransitionGraph;
	static Find(Outer: UObject, ResourceName: string): AnimationTransitionGraph;
	static GetDefaultObject(): AnimationTransitionGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationTransitionGraph;
	static C(Other: UObject | any): AnimationTransitionGraph;
}

declare class AnimationTransitionSchema extends EdGraphSchema_K2 { 
	static Load(ResourceName: string): AnimationTransitionSchema;
	static Find(Outer: UObject, ResourceName: string): AnimationTransitionSchema;
	static GetDefaultObject(): AnimationTransitionSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationTransitionSchema;
	static C(Other: UObject | any): AnimationTransitionSchema;
}

declare class AnimBlueprintExtension extends BlueprintExtension { 
	static Load(ResourceName: string): AnimBlueprintExtension;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension;
	static GetDefaultObject(): AnimBlueprintExtension;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension;
	static C(Other: UObject | any): AnimBlueprintExtension;
}

declare class AnimBlueprintExtension_Attributes extends AnimBlueprintExtension { 
	static Load(ResourceName: string): AnimBlueprintExtension_Attributes;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_Attributes;
	static GetDefaultObject(): AnimBlueprintExtension_Attributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_Attributes;
	static C(Other: UObject | any): AnimBlueprintExtension_Attributes;
}

declare class AnimSubsystem { 
	clone() : AnimSubsystem;
	static C(Other: UObject | any): AnimSubsystem;
}

declare type EPostCopyOperation = 'None' | 'LogicalNegateBool' | 'EPostCopyOperation_MAX';
declare var EPostCopyOperation : { None:'None',LogicalNegateBool:'LogicalNegateBool',EPostCopyOperation_MAX:'EPostCopyOperation_MAX', };
declare class ExposedValueCopyRecord { 
	CopyIndex: number;
	PostCopyOperation: EPostCopyOperation;
	clone() : ExposedValueCopyRecord;
	static C(Other: UObject | any): ExposedValueCopyRecord;
}

declare class ExposedValueHandler { 
	CopyRecords: ExposedValueCopyRecord[];
	UFunction: UFunction;
	BoundFunction: string;
	clone() : ExposedValueHandler;
	static C(Other: UObject | any): ExposedValueHandler;
}

declare class AnimSubsystem_Base extends AnimSubsystem { 
	ExposedValueHandlers: ExposedValueHandler[];
	clone() : AnimSubsystem_Base;
	static C(Other: UObject | any): AnimSubsystem_Base;
}

declare class AnimBlueprintExtension_Base extends AnimBlueprintExtension { 
	Subsystem: AnimSubsystem_Base;
	static Load(ResourceName: string): AnimBlueprintExtension_Base;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_Base;
	static GetDefaultObject(): AnimBlueprintExtension_Base;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_Base;
	static C(Other: UObject | any): AnimBlueprintExtension_Base;
}

declare class AnimSubsystem_BlendSpaceGraph extends AnimSubsystem { 
	BlendSpaces: BlendSpace[];
	clone() : AnimSubsystem_BlendSpaceGraph;
	static C(Other: UObject | any): AnimSubsystem_BlendSpaceGraph;
}

declare class AnimBlueprintExtension_BlendSpaceGraph extends AnimBlueprintExtension { 
	Class: UnrealEngineClass;
	Subsystem: AnimSubsystem_BlendSpaceGraph;
	static Load(ResourceName: string): AnimBlueprintExtension_BlendSpaceGraph;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_BlendSpaceGraph;
	static GetDefaultObject(): AnimBlueprintExtension_BlendSpaceGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_BlendSpaceGraph;
	static C(Other: UObject | any): AnimBlueprintExtension_BlendSpaceGraph;
}

declare class AnimBlueprintExtension_CachedPose extends AnimBlueprintExtension { 
	static Load(ResourceName: string): AnimBlueprintExtension_CachedPose;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_CachedPose;
	static GetDefaultObject(): AnimBlueprintExtension_CachedPose;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_CachedPose;
	static C(Other: UObject | any): AnimBlueprintExtension_CachedPose;
}

declare class AnimBlueprintExtension_CallFunction extends AnimBlueprintExtension { 
	static Load(ResourceName: string): AnimBlueprintExtension_CallFunction;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_CallFunction;
	static GetDefaultObject(): AnimBlueprintExtension_CallFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_CallFunction;
	static C(Other: UObject | any): AnimBlueprintExtension_CallFunction;
}

declare class AnimBlueprintExtension_LinkedAnimGraph extends AnimBlueprintExtension { 
	static Load(ResourceName: string): AnimBlueprintExtension_LinkedAnimGraph;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_LinkedAnimGraph;
	static GetDefaultObject(): AnimBlueprintExtension_LinkedAnimGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_LinkedAnimGraph;
	static C(Other: UObject | any): AnimBlueprintExtension_LinkedAnimGraph;
}

declare class AnimSubsystemInstance { 
	clone() : AnimSubsystemInstance;
	static C(Other: UObject | any): AnimSubsystemInstance;
}

declare class AnimSubsystemInstance_NodeRelevancy extends AnimSubsystemInstance { 
	clone() : AnimSubsystemInstance_NodeRelevancy;
	static C(Other: UObject | any): AnimSubsystemInstance_NodeRelevancy;
}

declare class AnimBlueprintExtension_NodeRelevancy extends AnimBlueprintExtension { 
	Subsystem: AnimSubsystemInstance_NodeRelevancy;
	static Load(ResourceName: string): AnimBlueprintExtension_NodeRelevancy;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_NodeRelevancy;
	static GetDefaultObject(): AnimBlueprintExtension_NodeRelevancy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_NodeRelevancy;
	static C(Other: UObject | any): AnimBlueprintExtension_NodeRelevancy;
}

declare class PropertyAccessSegment { 
	Name: string;
	struct: Struct;
	Property: any;
	UFunction: UFunction;
	ArrayIndex: number;
	Flags: number;
	clone() : PropertyAccessSegment;
	static C(Other: UObject | any): PropertyAccessSegment;
}

declare class PropertyAccessPath { 
	PathSegmentStartIndex: number;
	PathSegmentCount: number;
	clone() : PropertyAccessPath;
	static C(Other: UObject | any): PropertyAccessPath;
}

declare type EPropertyAccessCopyType = 'None' | 'Plain' | 'Complex' | 'Bool' | 'Struct' | 'Object' | 'Name' | 'Array' | 'PromoteBoolToByte' | 'PromoteBoolToInt32' | 'PromoteBoolToInt64' | 'PromoteBoolToFloat' | 'PromoteBoolToDouble' | 'PromoteByteToInt32' | 'PromoteByteToInt64' | 'PromoteByteToFloat' | 'PromoteByteToDouble' | 'PromoteInt32ToInt64' | 'PromoteInt32ToFloat' | 'PromoteInt32ToDouble' | 'PromoteFloatToDouble' | 'DemoteDoubleToFloat' | 'PromoteArrayFloatToDouble' | 'DemoteArrayDoubleToFloat' | 'PromoteMapValueFloatToDouble' | 'DemoteMapValueDoubleToFloat' | 'EPropertyAccessCopyType_MAX';
declare var EPropertyAccessCopyType : { None:'None',Plain:'Plain',Complex:'Complex',Bool:'Bool',Struct:'Struct',Object:'Object',Name:'Name',Array:'Array',PromoteBoolToByte:'PromoteBoolToByte',PromoteBoolToInt32:'PromoteBoolToInt32',PromoteBoolToInt64:'PromoteBoolToInt64',PromoteBoolToFloat:'PromoteBoolToFloat',PromoteBoolToDouble:'PromoteBoolToDouble',PromoteByteToInt32:'PromoteByteToInt32',PromoteByteToInt64:'PromoteByteToInt64',PromoteByteToFloat:'PromoteByteToFloat',PromoteByteToDouble:'PromoteByteToDouble',PromoteInt32ToInt64:'PromoteInt32ToInt64',PromoteInt32ToFloat:'PromoteInt32ToFloat',PromoteInt32ToDouble:'PromoteInt32ToDouble',PromoteFloatToDouble:'PromoteFloatToDouble',DemoteDoubleToFloat:'DemoteDoubleToFloat',PromoteArrayFloatToDouble:'PromoteArrayFloatToDouble',DemoteArrayDoubleToFloat:'DemoteArrayDoubleToFloat',PromoteMapValueFloatToDouble:'PromoteMapValueFloatToDouble',DemoteMapValueDoubleToFloat:'DemoteMapValueDoubleToFloat',EPropertyAccessCopyType_MAX:'EPropertyAccessCopyType_MAX', };
declare class PropertyAccessCopy { 
	AccessIndex: number;
	DestAccessStartIndex: number;
	DestAccessEndIndex: number;
	Type: EPropertyAccessCopyType;
	clone() : PropertyAccessCopy;
	static C(Other: UObject | any): PropertyAccessCopy;
}

declare class PropertyAccessCopyBatch { 
	Copies: PropertyAccessCopy[];
	clone() : PropertyAccessCopyBatch;
	static C(Other: UObject | any): PropertyAccessCopyBatch;
}

declare class PropertyAccessLibrary { 
	PathSegments: PropertyAccessSegment[];
	SrcPaths: PropertyAccessPath[];
	DestPaths: PropertyAccessPath[];
	CopyBatches: PropertyAccessCopyBatch;
	CopyBatchArray: PropertyAccessCopyBatch[];
	clone() : PropertyAccessLibrary;
	static C(Other: UObject | any): PropertyAccessLibrary;
}

declare class AnimSubsystem_PropertyAccess extends AnimSubsystem { 
	Library: PropertyAccessLibrary;
	clone() : AnimSubsystem_PropertyAccess;
	static C(Other: UObject | any): AnimSubsystem_PropertyAccess;
}

declare class AnimBlueprintExtension_PropertyAccess extends AnimBlueprintExtension { 
	Subsystem: AnimSubsystem_PropertyAccess;
	static Load(ResourceName: string): AnimBlueprintExtension_PropertyAccess;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_PropertyAccess;
	static GetDefaultObject(): AnimBlueprintExtension_PropertyAccess;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_PropertyAccess;
	static C(Other: UObject | any): AnimBlueprintExtension_PropertyAccess;
}

declare class AnimBlueprintExtension_StateMachine extends AnimBlueprintExtension { 
	static Load(ResourceName: string): AnimBlueprintExtension_StateMachine;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_StateMachine;
	static GetDefaultObject(): AnimBlueprintExtension_StateMachine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_StateMachine;
	static C(Other: UObject | any): AnimBlueprintExtension_StateMachine;
}

declare class AnimSubsystem_Tag extends AnimSubsystem { 
	NodeIndices: Map<string, number>;
	clone() : AnimSubsystem_Tag;
	static C(Other: UObject | any): AnimSubsystem_Tag;
}

declare class AnimBlueprintExtension_Tag extends AnimBlueprintExtension { 
	Subsystem: AnimSubsystem_Tag;
	static Load(ResourceName: string): AnimBlueprintExtension_Tag;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintExtension_Tag;
	static GetDefaultObject(): AnimBlueprintExtension_Tag;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintExtension_Tag;
	static C(Other: UObject | any): AnimBlueprintExtension_Tag;
}

declare class AnimBlueprintPostCompileValidation extends UObject { 
	static Load(ResourceName: string): AnimBlueprintPostCompileValidation;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintPostCompileValidation;
	static GetDefaultObject(): AnimBlueprintPostCompileValidation;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintPostCompileValidation;
	static C(Other: UObject | any): AnimBlueprintPostCompileValidation;
}

declare type EAnimGraphAttributesDisplayMode = 'HideOnPins' | 'ShowOnPins' | 'Automatic' | 'EAnimGraphAttributesDisplayMode_MAX';
declare var EAnimGraphAttributesDisplayMode : { HideOnPins:'HideOnPins',ShowOnPins:'ShowOnPins',Automatic:'Automatic',EAnimGraphAttributesDisplayMode_MAX:'EAnimGraphAttributesDisplayMode_MAX', };
declare type EAnimGraphAttributeBlend = 'Blendable' | 'NonBlendable' | 'EAnimGraphAttributeBlend_MAX';
declare var EAnimGraphAttributeBlend : { Blendable:'Blendable',NonBlendable:'NonBlendable',EAnimGraphAttributeBlend_MAX:'EAnimGraphAttributeBlend_MAX', };
declare class AnimGraphAttributeDesc { 
	Name: string;
	Icon: SlateBrush;
	DisplayName: string;
	ToolTipText: string;
	Color: SlateColor;
	DisplayMode: EAnimGraphAttributesDisplayMode;
	Blend: EAnimGraphAttributeBlend;
	SortOrder: number;
	clone() : AnimGraphAttributeDesc;
	static C(Other: UObject | any): AnimGraphAttributeDesc;
}

declare class AnimGraphAttributes extends UObject { 
	Attributes: AnimGraphAttributeDesc[];
	static Load(ResourceName: string): AnimGraphAttributes;
	static Find(Outer: UObject, ResourceName: string): AnimGraphAttributes;
	static GetDefaultObject(): AnimGraphAttributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphAttributes;
	static C(Other: UObject | any): AnimGraphAttributes;
}

declare class AnimGraphNodeCustomizationInterface extends Interface { 
	static Load(ResourceName: string): AnimGraphNodeCustomizationInterface;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNodeCustomizationInterface;
	static GetDefaultObject(): AnimGraphNodeCustomizationInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNodeCustomizationInterface;
	GetTitleColor(): LinearColor;
	static C(Other: UObject | any): AnimGraphNodeCustomizationInterface;
}

declare type EAnimSyncMethod = 'DoNotSync' | 'SyncGroup' | 'Graph' | 'EAnimSyncMethod_MAX';
declare var EAnimSyncMethod : { DoNotSync:'DoNotSync',SyncGroup:'SyncGroup',Graph:'Graph',EAnimSyncMethod_MAX:'EAnimSyncMethod_MAX', };
declare type EAnimGroupRole = 'CanBeLeader' | 'AlwaysFollower' | 'AlwaysLeader' | 'TransitionLeader' | 'TransitionFollower' | 'EAnimGroupRole_MAX';
declare var EAnimGroupRole : { CanBeLeader:'CanBeLeader',AlwaysFollower:'AlwaysFollower',AlwaysLeader:'AlwaysLeader',TransitionLeader:'TransitionLeader',TransitionFollower:'TransitionFollower',EAnimGroupRole_MAX:'EAnimGroupRole_MAX', };
declare class AnimationGroupReference { 
	Method: EAnimSyncMethod;
	GroupName: string;
	GroupRole: EAnimGroupRole;
	clone() : AnimationGroupReference;
	static C(Other: UObject | any): AnimationGroupReference;
}

declare class AnimGraphNode_AssetPlayerBase extends AnimGraphNode_Base { 
	SyncGroup: AnimationGroupReference;
	static Load(ResourceName: string): AnimGraphNode_AssetPlayerBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AssetPlayerBase;
	static GetDefaultObject(): AnimGraphNode_AssetPlayerBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AssetPlayerBase;
	static C(Other: UObject | any): AnimGraphNode_AssetPlayerBase;
}

declare class AnimGraphNode_BlendSpaceBase extends AnimGraphNode_AssetPlayerBase { 
	static Load(ResourceName: string): AnimGraphNode_BlendSpaceBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceBase;
	static GetDefaultObject(): AnimGraphNode_BlendSpaceBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceBase;
	static C(Other: UObject | any): AnimGraphNode_BlendSpaceBase;
}

declare class AnimNode_AssetPlayerRelevancyBase extends AnimNode_Base { 
	clone() : AnimNode_AssetPlayerRelevancyBase;
	static C(Other: UObject | any): AnimNode_AssetPlayerRelevancyBase;
}

declare type EAnimSyncGroupScope = 'Local' | 'Component' | 'EAnimSyncGroupScope_MAX';
declare var EAnimSyncGroupScope : { Local:'Local',Component:'Component',EAnimSyncGroupScope_MAX:'EAnimSyncGroupScope_MAX', };
declare class AnimNode_AssetPlayerBase extends AnimNode_AssetPlayerRelevancyBase { 
	GroupIndex: number;
	GroupScope: EAnimSyncGroupScope;
	BlendWeight: number;
	InternalTimeAccumulator: number;
	clone() : AnimNode_AssetPlayerBase;
	static C(Other: UObject | any): AnimNode_AssetPlayerBase;
}

declare class AnimNode_BlendSpacePlayerBase extends AnimNode_AssetPlayerBase { 
	PreviousBlendSpace: BlendSpace;
	clone() : AnimNode_BlendSpacePlayerBase;
	static C(Other: UObject | any): AnimNode_BlendSpacePlayerBase;
}

declare class AnimNode_BlendSpacePlayer extends AnimNode_BlendSpacePlayerBase { 
	GroupName: string;
	GroupRole: EAnimGroupRole;
	Method: EAnimSyncMethod;
	bIgnoreForRelevancyTest: boolean;
	X: number;
	Y: number;
	PlayRate: number;
	bLoop: boolean;
	bResetPlayTimeWhenBlendSpaceChanges: boolean;
	StartPosition: number;
	BlendSpace: BlendSpace;
	clone() : AnimNode_BlendSpacePlayer;
	static C(Other: UObject | any): AnimNode_BlendSpacePlayer;
}

declare class AnimNode_AimOffsetLookAt extends AnimNode_BlendSpacePlayer { 
	BasePose: PoseLink;
	LODThreshold: number;
	SourceSocketName: string;
	PivotSocketName: string;
	LookAtLocation: Vector;
	SocketAxis: Vector;
	Alpha: number;
	clone() : AnimNode_AimOffsetLookAt;
	static C(Other: UObject | any): AnimNode_AimOffsetLookAt;
}

declare class AnimGraphNode_AimOffsetLookAt extends AnimGraphNode_BlendSpaceBase { 
	UNode: AnimNode_AimOffsetLookAt;
	static Load(ResourceName: string): AnimGraphNode_AimOffsetLookAt;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AimOffsetLookAt;
	static GetDefaultObject(): AnimGraphNode_AimOffsetLookAt;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AimOffsetLookAt;
	static C(Other: UObject | any): AnimGraphNode_AimOffsetLookAt;
}

declare class AnimGraphNode_SkeletalControlBase extends AnimGraphNode_Base { 
	static Load(ResourceName: string): AnimGraphNode_SkeletalControlBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SkeletalControlBase;
	static GetDefaultObject(): AnimGraphNode_SkeletalControlBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SkeletalControlBase;
	static C(Other: UObject | any): AnimGraphNode_SkeletalControlBase;
}

declare class ComponentSpacePoseLink extends PoseLinkBase { 
	clone() : ComponentSpacePoseLink;
	static C(Other: UObject | any): ComponentSpacePoseLink;
}

declare type EAnimAlphaInputType = 'Float' | 'Bool' | 'Curve' | 'EAnimAlphaInputType_MAX';
declare var EAnimAlphaInputType : { Float:'Float',Bool:'Bool',Curve:'Curve',EAnimAlphaInputType_MAX:'EAnimAlphaInputType_MAX', };
declare class InputScaleBias { 
	Scale: number;
	Bias: number;
	clone() : InputScaleBias;
	static C(Other: UObject | any): InputScaleBias;
}

declare class InputAlphaBoolBlend { 
	BlendInTime: number;
	BlendOutTime: number;
	BlendOption: EAlphaBlendOption;
	bInitialized: boolean;
	CustomCurve: CurveFloat;
	AlphaBlend: AlphaBlend;
	clone() : InputAlphaBoolBlend;
	static C(Other: UObject | any): InputAlphaBoolBlend;
}

declare class InputRange { 
	Min: number;
	Max: number;
	clone() : InputRange;
	static C(Other: UObject | any): InputRange;
}

declare class InputScaleBiasClamp { 
	bMapRange: boolean;
	bClampResult: boolean;
	bInterpResult: boolean;
	InRange: InputRange;
	OutRange: InputRange;
	Scale: number;
	Bias: number;
	ClampMin: number;
	ClampMax: number;
	InterpSpeedIncreasing: number;
	InterpSpeedDecreasing: number;
	clone() : InputScaleBiasClamp;
	static C(Other: UObject | any): InputScaleBiasClamp;
}

declare class AnimNode_SkeletalControlBase extends AnimNode_Base { 
	ComponentPose: ComponentSpacePoseLink;
	LODThreshold: number;
	ActualAlpha: number;
	AlphaInputType: EAnimAlphaInputType;
	bAlphaBoolEnabled: boolean;
	Alpha: number;
	AlphaScaleBias: InputScaleBias;
	AlphaBoolBlend: InputAlphaBoolBlend;
	AlphaCurveName: string;
	AlphaScaleBiasClamp: InputScaleBiasClamp;
	clone() : AnimNode_SkeletalControlBase;
	static C(Other: UObject | any): AnimNode_SkeletalControlBase;
}

declare type AnimPhysLinearConstraintType = 'Free' | 'Limited' | 'AnimPhysLinearConstraintType_MAX';
declare var AnimPhysLinearConstraintType : { Free:'Free',Limited:'Limited',AnimPhysLinearConstraintType_MAX:'AnimPhysLinearConstraintType_MAX', };
declare type AnimPhysAngularConstraintType = 'Angular' | 'Cone' | 'AnimPhysAngularConstraintType_MAX';
declare var AnimPhysAngularConstraintType : { Angular:'Angular',Cone:'Cone',AnimPhysAngularConstraintType_MAX:'AnimPhysAngularConstraintType_MAX', };
declare type AnimPhysTwistAxis = 'AxisX' | 'AxisY' | 'AxisZ' | 'AnimPhysTwistAxis_MAX';
declare var AnimPhysTwistAxis : { AxisX:'AxisX',AxisY:'AxisY',AxisZ:'AxisZ',AnimPhysTwistAxis_MAX:'AnimPhysTwistAxis_MAX', };
declare class AnimPhysConstraintSetup { 
	LinearXLimitType: AnimPhysLinearConstraintType;
	LinearYLimitType: AnimPhysLinearConstraintType;
	LinearZLimitType: AnimPhysLinearConstraintType;
	LinearAxesMin: Vector;
	LinearAxesMax: Vector;
	AngularConstraintType: AnimPhysAngularConstraintType;
	TwistAxis: AnimPhysTwistAxis;
	AngularTargetAxis: AnimPhysTwistAxis;
	ConeAngle: number;
	AngularXAngle: number;
	AngularYAngle: number;
	AngularZAngle: number;
	AngularLimitsMin: Vector;
	AngularLimitsMax: Vector;
	AngularTarget: Vector;
	clone() : AnimPhysConstraintSetup;
	static C(Other: UObject | any): AnimPhysConstraintSetup;
}

declare type AnimPhysCollisionType = 'CoM' | 'CustomSphere' | 'InnerSphere' | 'OuterSphere' | 'AnimPhysCollisionType_MAX';
declare var AnimPhysCollisionType : { CoM:'CoM',CustomSphere:'CustomSphere',InnerSphere:'InnerSphere',OuterSphere:'OuterSphere',AnimPhysCollisionType_MAX:'AnimPhysCollisionType_MAX', };
declare class AnimPhysBodyDefinition { 
	BoundBone: BoneReference;
	BoxExtents: Vector;
	LocalJointOffset: Vector;
	ConstraintSetup: AnimPhysConstraintSetup;
	CollisionType: AnimPhysCollisionType;
	SphereCollisionRadius: number;
	clone() : AnimPhysBodyDefinition;
	static C(Other: UObject | any): AnimPhysBodyDefinition;
}

declare type ESphericalLimitType = 'Inner' | 'Outer' | 'ESphericalLimitType_MAX';
declare var ESphericalLimitType : { Inner:'Inner',Outer:'Outer',ESphericalLimitType_MAX:'ESphericalLimitType_MAX', };
declare class AnimPhysSphericalLimit { 
	DrivingBone: BoneReference;
	SphereLocalOffset: Vector;
	LimitRadius: number;
	LimitType: ESphericalLimitType;
	clone() : AnimPhysSphericalLimit;
	static C(Other: UObject | any): AnimPhysSphericalLimit;
}

declare class AnimPhysPlanarLimit { 
	DrivingBone: BoneReference;
	PlaneTransform: Transform;
	clone() : AnimPhysPlanarLimit;
	static C(Other: UObject | any): AnimPhysPlanarLimit;
}

declare type AnimPhysSimSpaceType = 'Component' | 'Actor' | 'World' | 'RootRelative' | 'BoneRelative' | 'AnimPhysSimSpaceType_MAX';
declare var AnimPhysSimSpaceType : { Component:'Component',Actor:'Actor',World:'World',RootRelative:'RootRelative',BoneRelative:'BoneRelative',AnimPhysSimSpaceType_MAX:'AnimPhysSimSpaceType_MAX', };
declare type ERotationComponent = 'EulerX' | 'EulerY' | 'EulerZ' | 'QuaternionAngle' | 'SwingAngle' | 'TwistAngle' | 'ERotationComponent_MAX';
declare var ERotationComponent : { EulerX:'EulerX',EulerY:'EulerY',EulerZ:'EulerZ',QuaternionAngle:'QuaternionAngle',SwingAngle:'SwingAngle',TwistAngle:'TwistAngle',ERotationComponent_MAX:'ERotationComponent_MAX', };
declare type EEasingFuncType = 'Linear' | 'Sinusoidal' | 'Cubic' | 'QuadraticInOut' | 'CubicInOut' | 'HermiteCubic' | 'QuarticInOut' | 'QuinticInOut' | 'CircularIn' | 'CircularOut' | 'CircularInOut' | 'ExpIn' | 'ExpOut' | 'ExpInOut' | 'CustomCurve' | 'EEasingFuncType_MAX';
declare var EEasingFuncType : { Linear:'Linear',Sinusoidal:'Sinusoidal',Cubic:'Cubic',QuadraticInOut:'QuadraticInOut',CubicInOut:'CubicInOut',HermiteCubic:'HermiteCubic',QuarticInOut:'QuarticInOut',QuinticInOut:'QuinticInOut',CircularIn:'CircularIn',CircularOut:'CircularOut',CircularInOut:'CircularInOut',ExpIn:'ExpIn',ExpOut:'ExpOut',ExpInOut:'ExpInOut',CustomCurve:'CustomCurve',EEasingFuncType_MAX:'EEasingFuncType_MAX', };
declare class RotationRetargetingInfo { 
	bEnabled: boolean;
	Source: Transform;
	Target: Transform;
	RotationComponent: ERotationComponent;
	TwistAxis: Vector;
	bUseAbsoluteAngle: boolean;
	SourceMinimum: number;
	SourceMaximum: number;
	TargetMinimum: number;
	TargetMaximum: number;
	EasingType: EEasingFuncType;
	CustomCurve: RuntimeFloatCurve;
	bFlipEasing: boolean;
	EasingWeight: number;
	bClamp: boolean;
	clone() : RotationRetargetingInfo;
	static C(Other: UObject | any): RotationRetargetingInfo;
}

declare class AnimNode_AnimDynamics extends AnimNode_SkeletalControlBase { 
	LinearDampingOverride: number;
	AngularDampingOverride: number;
	RelativeSpaceBone: BoneReference;
	BoundBone: BoneReference;
	ChainEnd: BoneReference;
	PhysicsBodyDefinitions: AnimPhysBodyDefinition[];
	GravityScale: number;
	GravityOverride: Vector;
	LinearSpringConstant: number;
	AngularSpringConstant: number;
	WindScale: number;
	ComponentLinearAccScale: Vector;
	ComponentLinearVelScale: Vector;
	ComponentAppliedLinearAccClamp: Vector;
	AngularBiasOverride: number;
	NumSolverIterationsPreUpdate: number;
	NumSolverIterationsPostUpdate: number;
	SphericalLimits: AnimPhysSphericalLimit[];
	ExternalForce: Vector;
	PlanarLimits: AnimPhysPlanarLimit[];
	SimulationSpace: AnimPhysSimSpaceType;
	bUseSphericalLimits: boolean;
	bUsePlanarLimit: boolean;
	bDoUpdate: boolean;
	bDoEval: boolean;
	bOverrideLinearDamping: boolean;
	bOverrideAngularBias: boolean;
	bOverrideAngularDamping: boolean;
	bEnableWind: boolean;
	bUseGravityOverride: boolean;
	bGravityOverrideInSimSpace: boolean;
	bLinearSpring: boolean;
	bAngularSpring: boolean;
	bChain: boolean;
	RetargetingSettings: RotationRetargetingInfo;
	BoxExtents: Vector;
	LocalJointOffset: Vector;
	ConstraintSetup: AnimPhysConstraintSetup;
	CollisionType: AnimPhysCollisionType;
	SphereCollisionRadius: number;
	clone() : AnimNode_AnimDynamics;
	static C(Other: UObject | any): AnimNode_AnimDynamics;
}

declare class AnimGraphNode_AnimDynamics extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_AnimDynamics;
	bPreviewLive: boolean;
	bShowLinearLimits: boolean;
	bShowAngularLimits: boolean;
	bShowPlanarLimit: boolean;
	bShowSphericalLimit: boolean;
	bShowCollisionSpheres: boolean;
	static Load(ResourceName: string): AnimGraphNode_AnimDynamics;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AnimDynamics;
	static GetDefaultObject(): AnimGraphNode_AnimDynamics;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AnimDynamics;
	static C(Other: UObject | any): AnimGraphNode_AnimDynamics;
}

declare class AnimNode_ApplyAdditive extends AnimNode_Base { 
	Base: PoseLink;
	Additive: PoseLink;
	Alpha: number;
	AlphaScaleBias: InputScaleBias;
	LODThreshold: number;
	AlphaBoolBlend: InputAlphaBoolBlend;
	AlphaCurveName: string;
	AlphaScaleBiasClamp: InputScaleBiasClamp;
	AlphaInputType: EAnimAlphaInputType;
	bAlphaBoolEnabled: boolean;
	clone() : AnimNode_ApplyAdditive;
	static C(Other: UObject | any): AnimNode_ApplyAdditive;
}

declare class AnimGraphNode_ApplyAdditive extends AnimGraphNode_Base { 
	UNode: AnimNode_ApplyAdditive;
	static Load(ResourceName: string): AnimGraphNode_ApplyAdditive;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyAdditive;
	static GetDefaultObject(): AnimGraphNode_ApplyAdditive;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyAdditive;
	static C(Other: UObject | any): AnimGraphNode_ApplyAdditive;
}

declare class AngularRangeLimit { 
	LimitMin: Vector;
	LimitMax: Vector;
	bone: BoneReference;
	clone() : AngularRangeLimit;
	static C(Other: UObject | any): AngularRangeLimit;
}

declare class AnimNode_ApplyLimits extends AnimNode_SkeletalControlBase { 
	AngularRangeLimits: AngularRangeLimit[];
	AngularOffsets: Vector[];
	clone() : AnimNode_ApplyLimits;
	static C(Other: UObject | any): AnimNode_ApplyLimits;
}

declare class AnimGraphNode_ApplyLimits extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_ApplyLimits;
	static Load(ResourceName: string): AnimGraphNode_ApplyLimits;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyLimits;
	static GetDefaultObject(): AnimGraphNode_ApplyLimits;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyLimits;
	static C(Other: UObject | any): AnimGraphNode_ApplyLimits;
}

declare class AnimNode_ApplyMeshSpaceAdditive extends AnimNode_Base { 
	Base: PoseLink;
	Additive: PoseLink;
	AlphaInputType: EAnimAlphaInputType;
	Alpha: number;
	bAlphaBoolEnabled: boolean;
	AlphaBoolBlend: InputAlphaBoolBlend;
	AlphaCurveName: string;
	AlphaScaleBias: InputScaleBias;
	AlphaScaleBiasClamp: InputScaleBiasClamp;
	LODThreshold: number;
	clone() : AnimNode_ApplyMeshSpaceAdditive;
	static C(Other: UObject | any): AnimNode_ApplyMeshSpaceAdditive;
}

declare class AnimGraphNode_ApplyMeshSpaceAdditive extends AnimGraphNode_Base { 
	UNode: AnimNode_ApplyMeshSpaceAdditive;
	static Load(ResourceName: string): AnimGraphNode_ApplyMeshSpaceAdditive;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyMeshSpaceAdditive;
	static GetDefaultObject(): AnimGraphNode_ApplyMeshSpaceAdditive;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyMeshSpaceAdditive;
	static C(Other: UObject | any): AnimGraphNode_ApplyMeshSpaceAdditive;
}

declare class BlendBoneByChannelEntry { 
	SourceBone: BoneReference;
	TargetBone: BoneReference;
	bBlendTranslation: boolean;
	bBlendRotation: boolean;
	bBlendScale: boolean;
	clone() : BlendBoneByChannelEntry;
	static C(Other: UObject | any): BlendBoneByChannelEntry;
}

declare type EBoneControlSpace = 'BCS_WorldSpace' | 'BCS_ComponentSpace' | 'BCS_ParentBoneSpace' | 'BCS_BoneSpace' | 'BCS_MAX';
declare var EBoneControlSpace : { BCS_WorldSpace:'BCS_WorldSpace',BCS_ComponentSpace:'BCS_ComponentSpace',BCS_ParentBoneSpace:'BCS_ParentBoneSpace',BCS_BoneSpace:'BCS_BoneSpace',BCS_MAX:'BCS_MAX', };
declare class AnimNode_BlendBoneByChannel extends AnimNode_Base { 
	A: PoseLink;
	B: PoseLink;
	BoneDefinitions: BlendBoneByChannelEntry[];
	Alpha: number;
	AlphaScaleBias: InputScaleBias;
	TransformsSpace: EBoneControlSpace;
	clone() : AnimNode_BlendBoneByChannel;
	static C(Other: UObject | any): AnimNode_BlendBoneByChannel;
}

declare class AnimGraphNode_BlendBoneByChannel extends AnimGraphNode_Base { 
	BlendNode: AnimNode_BlendBoneByChannel;
	static Load(ResourceName: string): AnimGraphNode_BlendBoneByChannel;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendBoneByChannel;
	static GetDefaultObject(): AnimGraphNode_BlendBoneByChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendBoneByChannel;
	static C(Other: UObject | any): AnimGraphNode_BlendBoneByChannel;
}

declare class AnimGraphNode_BlendListBase extends AnimGraphNode_Base { 
	static Load(ResourceName: string): AnimGraphNode_BlendListBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListBase;
	static GetDefaultObject(): AnimGraphNode_BlendListBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListBase;
	static C(Other: UObject | any): AnimGraphNode_BlendListBase;
}

declare type EBlendListTransitionType = 'StandardBlend' | 'Inertialization' | 'EBlendListTransitionType_MAX';
declare var EBlendListTransitionType : { StandardBlend:'StandardBlend',Inertialization:'Inertialization',EBlendListTransitionType_MAX:'EBlendListTransitionType_MAX', };
declare class AnimNode_BlendListBase extends AnimNode_Base { 
	BlendPose: PoseLink[];
	BlendTime: number[];
	TransitionType: EBlendListTransitionType;
	BlendType: EAlphaBlendOption;
	bResetChildOnActivation: boolean;
	CustomBlendCurve: CurveFloat;
	BlendProfile: BlendProfile;
	clone() : AnimNode_BlendListBase;
	static C(Other: UObject | any): AnimNode_BlendListBase;
}

declare class AnimNode_BlendListByBool extends AnimNode_BlendListBase { 
	bActiveValue: boolean;
	clone() : AnimNode_BlendListByBool;
	static C(Other: UObject | any): AnimNode_BlendListByBool;
}

declare class AnimGraphNode_BlendListByBool extends AnimGraphNode_BlendListBase { 
	UNode: AnimNode_BlendListByBool;
	static Load(ResourceName: string): AnimGraphNode_BlendListByBool;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByBool;
	static GetDefaultObject(): AnimGraphNode_BlendListByBool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByBool;
	static C(Other: UObject | any): AnimGraphNode_BlendListByBool;
}

declare class AnimNode_BlendListByEnum extends AnimNode_BlendListBase { 
	EnumToPoseIndex: number[];
	ActiveEnumValue: number;
	clone() : AnimNode_BlendListByEnum;
	static C(Other: UObject | any): AnimNode_BlendListByEnum;
}

declare class AnimGraphNode_BlendListByEnum extends AnimGraphNode_BlendListBase { 
	UNode: AnimNode_BlendListByEnum;
	BoundEnum: Enum;
	VisibleEnumEntries: string[];
	static Load(ResourceName: string): AnimGraphNode_BlendListByEnum;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByEnum;
	static GetDefaultObject(): AnimGraphNode_BlendListByEnum;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByEnum;
	static C(Other: UObject | any): AnimGraphNode_BlendListByEnum;
}

declare class AnimNode_BlendListByInt extends AnimNode_BlendListBase { 
	ActiveChildIndex: number;
	clone() : AnimNode_BlendListByInt;
	static C(Other: UObject | any): AnimNode_BlendListByInt;
}

declare class AnimGraphNode_BlendListByInt extends AnimGraphNode_BlendListBase { 
	UNode: AnimNode_BlendListByInt;
	static Load(ResourceName: string): AnimGraphNode_BlendListByInt;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByInt;
	static GetDefaultObject(): AnimGraphNode_BlendListByInt;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByInt;
	static C(Other: UObject | any): AnimGraphNode_BlendListByInt;
}

declare class AnimNode_BlendSpaceEvaluator extends AnimNode_BlendSpacePlayer { 
	NormalizedTime: number;
	bTeleportToNormalizedTime: boolean;
	clone() : AnimNode_BlendSpaceEvaluator;
	static C(Other: UObject | any): AnimNode_BlendSpaceEvaluator;
}

declare class AnimGraphNode_BlendSpaceEvaluator extends AnimGraphNode_BlendSpaceBase { 
	UNode: AnimNode_BlendSpaceEvaluator;
	static Load(ResourceName: string): AnimGraphNode_BlendSpaceEvaluator;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceEvaluator;
	static GetDefaultObject(): AnimGraphNode_BlendSpaceEvaluator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceEvaluator;
	static C(Other: UObject | any): AnimGraphNode_BlendSpaceEvaluator;
}

declare class BlendSpaceGraph extends EdGraph { 
	BlendSpace: BlendSpace;
	static Load(ResourceName: string): BlendSpaceGraph;
	static Find(Outer: UObject, ResourceName: string): BlendSpaceGraph;
	static GetDefaultObject(): BlendSpaceGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendSpaceGraph;
	static C(Other: UObject | any): BlendSpaceGraph;
}

declare class AnimGraphNode_BlendSpaceGraphBase extends AnimGraphNode_Base { 
	BlendSpace: BlendSpace;
	BlendSpaceClass: UnrealEngineClass;
	BlendSpaceGraph: BlendSpaceGraph;
	Graphs: EdGraph[];
	static Load(ResourceName: string): AnimGraphNode_BlendSpaceGraphBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceGraphBase;
	static GetDefaultObject(): AnimGraphNode_BlendSpaceGraphBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceGraphBase;
	static C(Other: UObject | any): AnimGraphNode_BlendSpaceGraphBase;
}

declare class AnimNode_BlendSpaceGraphBase extends AnimNode_Base { 
	X: number;
	Y: number;
	GroupName: string;
	GroupRole: EAnimGroupRole;
	BlendSpace: BlendSpace;
	SamplePoseLinks: PoseLink[];
	clone() : AnimNode_BlendSpaceGraphBase;
	static C(Other: UObject | any): AnimNode_BlendSpaceGraphBase;
}

declare class AnimNode_BlendSpaceGraph extends AnimNode_BlendSpaceGraphBase { 
	clone() : AnimNode_BlendSpaceGraph;
	static C(Other: UObject | any): AnimNode_BlendSpaceGraph;
}

declare class AnimGraphNode_BlendSpaceGraph extends AnimGraphNode_BlendSpaceGraphBase { 
	UNode: AnimNode_BlendSpaceGraph;
	static Load(ResourceName: string): AnimGraphNode_BlendSpaceGraph;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceGraph;
	static GetDefaultObject(): AnimGraphNode_BlendSpaceGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceGraph;
	static C(Other: UObject | any): AnimGraphNode_BlendSpaceGraph;
}

declare class AnimGraphNode_BlendSpacePlayer extends AnimGraphNode_BlendSpaceBase { 
	UNode: AnimNode_BlendSpacePlayer;
	static Load(ResourceName: string): AnimGraphNode_BlendSpacePlayer;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpacePlayer;
	static GetDefaultObject(): AnimGraphNode_BlendSpacePlayer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpacePlayer;
	static C(Other: UObject | any): AnimGraphNode_BlendSpacePlayer;
}

declare type EComponentType = 'None' | 'TranslationX' | 'TranslationY' | 'TranslationZ' | 'RotationX' | 'RotationY' | 'RotationZ' | 'Scale' | 'ScaleX' | 'ScaleY' | 'ScaleZ' | 'EComponentType_MAX';
declare var EComponentType : { None:'None',TranslationX:'TranslationX',TranslationY:'TranslationY',TranslationZ:'TranslationZ',RotationX:'RotationX',RotationY:'RotationY',RotationZ:'RotationZ',Scale:'Scale',ScaleX:'ScaleX',ScaleY:'ScaleY',ScaleZ:'ScaleZ',EComponentType_MAX:'EComponentType_MAX', };
declare type EDrivenDestinationMode = 'Bone' | 'MorphTarget' | 'MaterialParameter' | 'EDrivenDestinationMode_MAX';
declare var EDrivenDestinationMode : { Bone:'Bone',MorphTarget:'MorphTarget',MaterialParameter:'MaterialParameter',EDrivenDestinationMode_MAX:'EDrivenDestinationMode_MAX', };
declare type EDrivenBoneModificationMode = 'AddToInput' | 'ReplaceComponent' | 'AddToRefPose' | 'EDrivenBoneModificationMode_MAX';
declare var EDrivenBoneModificationMode : { AddToInput:'AddToInput',ReplaceComponent:'ReplaceComponent',AddToRefPose:'AddToRefPose',EDrivenBoneModificationMode_MAX:'EDrivenBoneModificationMode_MAX', };
declare class AnimNode_BoneDrivenController extends AnimNode_SkeletalControlBase { 
	SourceBone: BoneReference;
	DrivingCurve: CurveFloat;
	Multiplier: number;
	RangeMin: number;
	RangeMax: number;
	RemappedMin: number;
	RemappedMax: number;
	ParameterName: string;
	TargetBone: BoneReference;
	TargetComponent: EComponentType;
	DestinationMode: EDrivenDestinationMode;
	ModificationMode: EDrivenBoneModificationMode;
	SourceComponent: EComponentType;
	bUseRange: boolean;
	bAffectTargetTranslationX: boolean;
	bAffectTargetTranslationY: boolean;
	bAffectTargetTranslationZ: boolean;
	bAffectTargetRotationX: boolean;
	bAffectTargetRotationY: boolean;
	bAffectTargetRotationZ: boolean;
	bAffectTargetScaleX: boolean;
	bAffectTargetScaleY: boolean;
	bAffectTargetScaleZ: boolean;
	clone() : AnimNode_BoneDrivenController;
	static C(Other: UObject | any): AnimNode_BoneDrivenController;
}

declare class AnimGraphNode_BoneDrivenController extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_BoneDrivenController;
	static Load(ResourceName: string): AnimGraphNode_BoneDrivenController;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BoneDrivenController;
	static GetDefaultObject(): AnimGraphNode_BoneDrivenController;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BoneDrivenController;
	static C(Other: UObject | any): AnimGraphNode_BoneDrivenController;
}

declare class K2Node_CallFunction extends K2Node { 
	bIsPureFunc: boolean;
	bIsConstFunc: boolean;
	bWantsEnumToExecExpansion: boolean;
	bIsInterfaceCall: boolean;
	bIsFinalFunction: boolean;
	bIsBeadFunction: boolean;
	FunctionReference: MemberReference;
	CallFunctionName: string;
	CallFunctionClass: UnrealEngineClass;
	static Load(ResourceName: string): K2Node_CallFunction;
	static Find(Outer: UObject, ResourceName: string): K2Node_CallFunction;
	static GetDefaultObject(): K2Node_CallFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallFunction;
	static C(Other: UObject | any): K2Node_CallFunction;
}

declare type EAnimFunctionCallSite = 'OnInitialize' | 'OnUpdate' | 'OnBecomeRelevant' | 'OnEvaluate' | 'OnInitializePostRecursion' | 'OnUpdatePostRecursion' | 'OnBecomeRelevantPostRecursion' | 'OnEvaluatePostRecursion' | 'OnStartedBlendingOut' | 'OnStartedBlendingIn' | 'OnFinishedBlendingOut' | 'OnFinishedBlendingIn' | 'EAnimFunctionCallSite_MAX';
declare var EAnimFunctionCallSite : { OnInitialize:'OnInitialize',OnUpdate:'OnUpdate',OnBecomeRelevant:'OnBecomeRelevant',OnEvaluate:'OnEvaluate',OnInitializePostRecursion:'OnInitializePostRecursion',OnUpdatePostRecursion:'OnUpdatePostRecursion',OnBecomeRelevantPostRecursion:'OnBecomeRelevantPostRecursion',OnEvaluatePostRecursion:'OnEvaluatePostRecursion',OnStartedBlendingOut:'OnStartedBlendingOut',OnStartedBlendingIn:'OnStartedBlendingIn',OnFinishedBlendingOut:'OnFinishedBlendingOut',OnFinishedBlendingIn:'OnFinishedBlendingIn',EAnimFunctionCallSite_MAX:'EAnimFunctionCallSite_MAX', };
declare class AnimNode_CallFunction extends AnimNode_Base { 
	Source: PoseLink;
	UFunction: AnimNodeFunctionRef;
	CallSite: EAnimFunctionCallSite;
	clone() : AnimNode_CallFunction;
	static C(Other: UObject | any): AnimNode_CallFunction;
}

declare class AnimGraphNode_CallFunction extends AnimGraphNode_Base { 
	InnerGraph: EdGraph;
	CallFunctionPrototype: K2Node_CallFunction;
	UNode: AnimNode_CallFunction;
	static Load(ResourceName: string): AnimGraphNode_CallFunction;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CallFunction;
	static GetDefaultObject(): AnimGraphNode_CallFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CallFunction;
	static C(Other: UObject | any): AnimGraphNode_CallFunction;
}

declare class SocketReference { 
	SocketName: string;
	clone() : SocketReference;
	static C(Other: UObject | any): SocketReference;
}

declare class BoneSocketTarget { 
	bUseSocket: boolean;
	BoneReference: BoneReference;
	SocketReference: SocketReference;
	clone() : BoneSocketTarget;
	static C(Other: UObject | any): BoneSocketTarget;
}

declare class AnimNode_CCDIK extends AnimNode_SkeletalControlBase { 
	EffectorLocation: Vector;
	EffectorLocationSpace: EBoneControlSpace;
	EffectorTarget: BoneSocketTarget;
	TipBone: BoneReference;
	RootBone: BoneReference;
	Precision: number;
	MaxIterations: number;
	bStartFromTail: boolean;
	bEnableRotationLimit: boolean;
	RotationLimitPerJoints: number[];
	clone() : AnimNode_CCDIK;
	static C(Other: UObject | any): AnimNode_CCDIK;
}

declare class AnimGraphNode_CCDIK extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_CCDIK;
	static Load(ResourceName: string): AnimGraphNode_CCDIK;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CCDIK;
	static GetDefaultObject(): AnimGraphNode_CCDIK;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CCDIK;
	static C(Other: UObject | any): AnimGraphNode_CCDIK;
}

declare class AnimNode_ConvertComponentToLocalSpace extends AnimNode_Base { 
	ComponentPose: ComponentSpacePoseLink;
	clone() : AnimNode_ConvertComponentToLocalSpace;
	static C(Other: UObject | any): AnimNode_ConvertComponentToLocalSpace;
}

declare class AnimGraphNode_ComponentToLocalSpace extends AnimGraphNode_Base { 
	UNode: AnimNode_ConvertComponentToLocalSpace;
	static Load(ResourceName: string): AnimGraphNode_ComponentToLocalSpace;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ComponentToLocalSpace;
	static GetDefaultObject(): AnimGraphNode_ComponentToLocalSpace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ComponentToLocalSpace;
	static C(Other: UObject | any): AnimGraphNode_ComponentToLocalSpace;
}

declare type EConstraintOffsetOption = 'None' | 'Offset_RefPose' | 'EConstraintOffsetOption_MAX';
declare var EConstraintOffsetOption : { None:'None',Offset_RefPose:'Offset_RefPose',EConstraintOffsetOption_MAX:'EConstraintOffsetOption_MAX', };
declare class FilterOptionPerAxis { 
	bX: boolean;
	bY: boolean;
	bZ: boolean;
	clone() : FilterOptionPerAxis;
	static C(Other: UObject | any): FilterOptionPerAxis;
}

declare class Constraint { 
	TargetBone: BoneReference;
	OffsetOption: EConstraintOffsetOption;
	TransformType: ETransformConstraintType;
	PerAxis: FilterOptionPerAxis;
	clone() : Constraint;
	static C(Other: UObject | any): Constraint;
}

declare class AnimNode_Constraint extends AnimNode_SkeletalControlBase { 
	BoneToModify: BoneReference;
	ConstraintSetup: Constraint[];
	ConstraintWeights: number[];
	clone() : AnimNode_Constraint;
	static C(Other: UObject | any): AnimNode_Constraint;
}

declare class AnimGraphNode_Constraint extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_Constraint;
	static Load(ResourceName: string): AnimGraphNode_Constraint;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Constraint;
	static GetDefaultObject(): AnimGraphNode_Constraint;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Constraint;
	static C(Other: UObject | any): AnimGraphNode_Constraint;
}

declare class AnimNode_CopyBone extends AnimNode_SkeletalControlBase { 
	SourceBone: BoneReference;
	TargetBone: BoneReference;
	bCopyTranslation: boolean;
	bCopyRotation: boolean;
	bCopyScale: boolean;
	ControlSpace: EBoneControlSpace;
	clone() : AnimNode_CopyBone;
	static C(Other: UObject | any): AnimNode_CopyBone;
}

declare class AnimGraphNode_CopyBone extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_CopyBone;
	static Load(ResourceName: string): AnimGraphNode_CopyBone;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyBone;
	static GetDefaultObject(): AnimGraphNode_CopyBone;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyBone;
	static C(Other: UObject | any): AnimGraphNode_CopyBone;
}

declare type CopyBoneDeltaMode = 'Accumulate' | 'Copy' | 'CopyBoneDeltaMode_MAX';
declare var CopyBoneDeltaMode : { Accumulate:'Accumulate',Copy:'Copy',CopyBoneDeltaMode_MAX:'CopyBoneDeltaMode_MAX', };
declare class AnimNode_CopyBoneDelta extends AnimNode_SkeletalControlBase { 
	SourceBone: BoneReference;
	TargetBone: BoneReference;
	bCopyTranslation: boolean;
	bCopyRotation: boolean;
	bCopyScale: boolean;
	CopyMode: CopyBoneDeltaMode;
	TranslationMultiplier: number;
	RotationMultiplier: number;
	ScaleMultiplier: number;
	clone() : AnimNode_CopyBoneDelta;
	static C(Other: UObject | any): AnimNode_CopyBoneDelta;
}

declare class AnimGraphNode_CopyBoneDelta extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_CopyBoneDelta;
	static Load(ResourceName: string): AnimGraphNode_CopyBoneDelta;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyBoneDelta;
	static GetDefaultObject(): AnimGraphNode_CopyBoneDelta;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyBoneDelta;
	static C(Other: UObject | any): AnimGraphNode_CopyBoneDelta;
}

declare class AnimNode_CopyPoseFromMesh extends AnimNode_Base { 
	SourceMeshComponent: SkeletalMeshComponent;
	bUseAttachedParent: boolean;
	bCopyCurves: boolean;
	bCopyCustomAttributes: boolean;
	bUseMeshPose: boolean;
	RootBoneToCopy: string;
	clone() : AnimNode_CopyPoseFromMesh;
	static C(Other: UObject | any): AnimNode_CopyPoseFromMesh;
}

declare class AnimGraphNode_CopyPoseFromMesh extends AnimGraphNode_Base { 
	UNode: AnimNode_CopyPoseFromMesh;
	static Load(ResourceName: string): AnimGraphNode_CopyPoseFromMesh;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyPoseFromMesh;
	static GetDefaultObject(): AnimGraphNode_CopyPoseFromMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyPoseFromMesh;
	static C(Other: UObject | any): AnimGraphNode_CopyPoseFromMesh;
}

declare class NamedCurveValue { 
	Name: string;
	Value: number;
	clone() : NamedCurveValue;
	static C(Other: UObject | any): NamedCurveValue;
}

declare class CurveSourceInterface extends Interface { 
	static Load(ResourceName: string): CurveSourceInterface;
	static Find(Outer: UObject, ResourceName: string): CurveSourceInterface;
	static GetDefaultObject(): CurveSourceInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveSourceInterface;
	GetCurveValue(CurveName: string): number;
	GetCurves(OutValues?: NamedCurveValue[]): {OutValues: NamedCurveValue[]};
	GetBindingName(): string;
	static C(Other: UObject | any): CurveSourceInterface;
}

declare class AnimNode_CurveSource extends AnimNode_Base { 
	SourcePose: PoseLink;
	SourceBinding: string;
	Alpha: number;
	CurveSource: CurveSourceInterface;
	clone() : AnimNode_CurveSource;
	static C(Other: UObject | any): AnimNode_CurveSource;
}

declare class AnimGraphNode_CurveSource extends AnimGraphNode_Base { 
	UNode: AnimNode_CurveSource;
	static Load(ResourceName: string): AnimGraphNode_CurveSource;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CurveSource;
	static GetDefaultObject(): AnimGraphNode_CurveSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CurveSource;
	static C(Other: UObject | any): AnimGraphNode_CurveSource;
}

declare class AnimGraphNode_CustomProperty extends AnimGraphNode_Base { 
	KnownExposableProperties: string[];
	ExposedPropertyNames: string[];
	CustomPinProperties: OptionalPinFromProperty[];
	static Load(ResourceName: string): AnimGraphNode_CustomProperty;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CustomProperty;
	static GetDefaultObject(): AnimGraphNode_CustomProperty;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CustomProperty;
	static C(Other: UObject | any): AnimGraphNode_CustomProperty;
}

declare type EBoneRotationSource = 'BRS_KeepComponentSpaceRotation' | 'BRS_KeepLocalSpaceRotation' | 'BRS_CopyFromTarget' | 'BRS_MAX';
declare var EBoneRotationSource : { BRS_KeepComponentSpaceRotation:'BRS_KeepComponentSpaceRotation',BRS_KeepLocalSpaceRotation:'BRS_KeepLocalSpaceRotation',BRS_CopyFromTarget:'BRS_CopyFromTarget',BRS_MAX:'BRS_MAX', };
declare class AnimNode_Fabrik extends AnimNode_SkeletalControlBase { 
	EffectorTransform: Transform;
	EffectorTarget: BoneSocketTarget;
	TipBone: BoneReference;
	RootBone: BoneReference;
	Precision: number;
	MaxIterations: number;
	EffectorTransformSpace: EBoneControlSpace;
	EffectorRotationSource: EBoneRotationSource;
	bEnableDebugDraw: boolean;
	EffectorTransformBone: BoneReference;
	clone() : AnimNode_Fabrik;
	static C(Other: UObject | any): AnimNode_Fabrik;
}

declare class AnimGraphNode_Fabrik extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_Fabrik;
	static Load(ResourceName: string): AnimGraphNode_Fabrik;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Fabrik;
	static GetDefaultObject(): AnimGraphNode_Fabrik;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Fabrik;
	static C(Other: UObject | any): AnimGraphNode_Fabrik;
}

declare class AnimNode_HandIKRetargeting extends AnimNode_SkeletalControlBase { 
	RightHandFK: BoneReference;
	LeftHandFK: BoneReference;
	RightHandIK: BoneReference;
	LeftHandIK: BoneReference;
	IKBonesToMove: BoneReference[];
	HandFKWeight: number;
	clone() : AnimNode_HandIKRetargeting;
	static C(Other: UObject | any): AnimNode_HandIKRetargeting;
}

declare class AnimGraphNode_HandIKRetargeting extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_HandIKRetargeting;
	static Load(ResourceName: string): AnimGraphNode_HandIKRetargeting;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_HandIKRetargeting;
	static GetDefaultObject(): AnimGraphNode_HandIKRetargeting;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_HandIKRetargeting;
	static C(Other: UObject | any): AnimGraphNode_HandIKRetargeting;
}

declare type ERefPoseType = 'EIT_LocalSpace' | 'EIT_Additive' | 'EIT_MAX';
declare var ERefPoseType : { EIT_LocalSpace:'EIT_LocalSpace',EIT_Additive:'EIT_Additive',EIT_MAX:'EIT_MAX', };
declare class AnimNode_RefPose extends AnimNode_Base { 
	RefPoseType: ERefPoseType;
	clone() : AnimNode_RefPose;
	static C(Other: UObject | any): AnimNode_RefPose;
}

declare class AnimGraphNode_RefPoseBase extends AnimGraphNode_Base { 
	UNode: AnimNode_RefPose;
	static Load(ResourceName: string): AnimGraphNode_RefPoseBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RefPoseBase;
	static GetDefaultObject(): AnimGraphNode_RefPoseBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RefPoseBase;
	static C(Other: UObject | any): AnimGraphNode_RefPoseBase;
}

declare class AnimGraphNode_IdentityPose extends AnimGraphNode_RefPoseBase { 
	static Load(ResourceName: string): AnimGraphNode_IdentityPose;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_IdentityPose;
	static GetDefaultObject(): AnimGraphNode_IdentityPose;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_IdentityPose;
	static C(Other: UObject | any): AnimGraphNode_IdentityPose;
}

declare class InertializationRequest { 
	Duration: number;
	BlendProfile: BlendProfile;
	clone() : InertializationRequest;
	static C(Other: UObject | any): InertializationRequest;
}

declare class AnimNode_Inertialization extends AnimNode_Base { 
	Source: PoseLink;
	DefaultBlendProfile: BlendProfile;
	FilteredCurves: string[];
	RequestQueue: InertializationRequest[];
	clone() : AnimNode_Inertialization;
	static C(Other: UObject | any): AnimNode_Inertialization;
}

declare class AnimGraphNode_Inertialization extends AnimGraphNode_Base { 
	UNode: AnimNode_Inertialization;
	static Load(ResourceName: string): AnimGraphNode_Inertialization;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Inertialization;
	static GetDefaultObject(): AnimGraphNode_Inertialization;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Inertialization;
	static C(Other: UObject | any): AnimGraphNode_Inertialization;
}

declare type ELayeredBoneBlendMode = 'BranchFilter' | 'BlendMask' | 'ELayeredBoneBlendMode_MAX';
declare var ELayeredBoneBlendMode : { BranchFilter:'BranchFilter',BlendMask:'BlendMask',ELayeredBoneBlendMode_MAX:'ELayeredBoneBlendMode_MAX', };
declare class BranchFilter { 
	BoneName: string;
	BlendDepth: number;
	clone() : BranchFilter;
	static C(Other: UObject | any): BranchFilter;
}

declare class InputBlendPose { 
	BranchFilters: BranchFilter[];
	clone() : InputBlendPose;
	static C(Other: UObject | any): InputBlendPose;
}

declare type ECurveBlendOption = 'Override' | 'DoNotOverride' | 'NormalizeByWeight' | 'BlendByWeight' | 'UseBasePose' | 'UseMaxValue' | 'UseMinValue' | 'ECurveBlendOption_MAX';
declare var ECurveBlendOption : { Override:'Override',DoNotOverride:'DoNotOverride',NormalizeByWeight:'NormalizeByWeight',BlendByWeight:'BlendByWeight',UseBasePose:'UseBasePose',UseMaxValue:'UseMaxValue',UseMinValue:'UseMinValue',ECurveBlendOption_MAX:'ECurveBlendOption_MAX', };
declare class PerBoneBlendWeight { 
	SourceIndex: number;
	BlendWeight: number;
	clone() : PerBoneBlendWeight;
	static C(Other: UObject | any): PerBoneBlendWeight;
}

declare class AnimNode_LayeredBoneBlend extends AnimNode_Base { 
	BasePose: PoseLink;
	BlendPoses: PoseLink[];
	BlendMode: ELayeredBoneBlendMode;
	BlendMasks: BlendProfile[];
	LayerSetup: InputBlendPose[];
	BlendWeights: number[];
	bMeshSpaceRotationBlend: boolean;
	bMeshSpaceScaleBlend: boolean;
	CurveBlendOption: ECurveBlendOption;
	bBlendRootMotionBasedOnRootBone: boolean;
	LODThreshold: number;
	PerBoneBlendWeights: PerBoneBlendWeight[];
	SkeletonGuid: Guid;
	VirtualBoneGuid: Guid;
	clone() : AnimNode_LayeredBoneBlend;
	static C(Other: UObject | any): AnimNode_LayeredBoneBlend;
}

declare class AnimGraphNode_LayeredBoneBlend extends AnimGraphNode_BlendListBase { 
	UNode: AnimNode_LayeredBoneBlend;
	static Load(ResourceName: string): AnimGraphNode_LayeredBoneBlend;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LayeredBoneBlend;
	static GetDefaultObject(): AnimGraphNode_LayeredBoneBlend;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LayeredBoneBlend;
	static C(Other: UObject | any): AnimGraphNode_LayeredBoneBlend;
}

declare class AnimLegIKDefinition { 
	IKFootBone: BoneReference;
	FKFootBone: BoneReference;
	NumBonesInLimb: number;
	MinRotationAngle: number;
	FootBoneForwardAxis: EAxis;
	HingeRotationAxis: EAxis;
	bEnableRotationLimit: boolean;
	bEnableKneeTwistCorrection: boolean;
	clone() : AnimLegIKDefinition;
	static C(Other: UObject | any): AnimLegIKDefinition;
}

declare class AnimNode_LegIK extends AnimNode_SkeletalControlBase { 
	ReachPrecision: number;
	MaxIterations: number;
	LegsDefinition: AnimLegIKDefinition[];
	clone() : AnimNode_LegIK;
	static C(Other: UObject | any): AnimNode_LegIK;
}

declare class AnimGraphNode_LegIK extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_LegIK;
	static Load(ResourceName: string): AnimGraphNode_LegIK;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LegIK;
	static GetDefaultObject(): AnimGraphNode_LegIK;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LegIK;
	static C(Other: UObject | any): AnimGraphNode_LegIK;
}

declare class AnimGraphNode_LinkedAnimGraphBase extends AnimGraphNode_CustomProperty { 
	FunctionReference: MemberReference;
	static Load(ResourceName: string): AnimGraphNode_LinkedAnimGraphBase;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LinkedAnimGraphBase;
	static GetDefaultObject(): AnimGraphNode_LinkedAnimGraphBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LinkedAnimGraphBase;
	static C(Other: UObject | any): AnimGraphNode_LinkedAnimGraphBase;
}

declare class AnimNode_CustomProperty extends AnimNode_Base { 
	SourcePropertyNames: string[];
	DestPropertyNames: string[];
	TargetInstance: UObject;
	SourceInstance: UObject;
	clone() : AnimNode_CustomProperty;
	static C(Other: UObject | any): AnimNode_CustomProperty;
}

declare class AnimNode_LinkedAnimGraph extends AnimNode_CustomProperty { 
	InputPoses: PoseLink[];
	InputPoseNames: string[];
	InstanceClass: UnrealEngineClass;
	Tag: string;
	PendingBlendOutProfile: BlendProfile;
	PendingBlendInProfile: BlendProfile;
	bReceiveNotifiesFromLinkedInstances: boolean;
	bPropagateNotifiesToLinkedInstances: boolean;
	clone() : AnimNode_LinkedAnimGraph;
	static C(Other: UObject | any): AnimNode_LinkedAnimGraph;
}

declare class AnimGraphNode_LinkedAnimGraph extends AnimGraphNode_LinkedAnimGraphBase { 
	UNode: AnimNode_LinkedAnimGraph;
	static Load(ResourceName: string): AnimGraphNode_LinkedAnimGraph;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LinkedAnimGraph;
	static GetDefaultObject(): AnimGraphNode_LinkedAnimGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LinkedAnimGraph;
	static C(Other: UObject | any): AnimGraphNode_LinkedAnimGraph;
}

declare class AnimLayerInterface extends Interface { 
	static Load(ResourceName: string): AnimLayerInterface;
	static Find(Outer: UObject, ResourceName: string): AnimLayerInterface;
	static GetDefaultObject(): AnimLayerInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimLayerInterface;
	static C(Other: UObject | any): AnimLayerInterface;
}

declare class AnimNode_LinkedAnimLayer extends AnimNode_LinkedAnimGraph { 
	Interface: UnrealEngineClass;
	Layer: string;
	clone() : AnimNode_LinkedAnimLayer;
	static C(Other: UObject | any): AnimNode_LinkedAnimLayer;
}

declare class AnimGraphNode_LinkedAnimLayer extends AnimGraphNode_LinkedAnimGraphBase { 
	UNode: AnimNode_LinkedAnimLayer;
	InterfaceGuid: Guid;
	static Load(ResourceName: string): AnimGraphNode_LinkedAnimLayer;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LinkedAnimLayer;
	static GetDefaultObject(): AnimGraphNode_LinkedAnimLayer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LinkedAnimLayer;
	static C(Other: UObject | any): AnimGraphNode_LinkedAnimLayer;
}

declare class AnimNode_LinkedInputPose extends AnimNode_Base { 
	Name: string;
	Graph: string;
	InputPose: PoseLink;
	clone() : AnimNode_LinkedInputPose;
	static C(Other: UObject | any): AnimNode_LinkedInputPose;
}

declare class AnimBlueprintFunctionPinInfo { 
	Name: string;
	Type: EdGraphPinType;
	clone() : AnimBlueprintFunctionPinInfo;
	static C(Other: UObject | any): AnimBlueprintFunctionPinInfo;
}

declare class AnimGraphNode_LinkedInputPose extends AnimGraphNode_Base { 
	UNode: AnimNode_LinkedInputPose;
	Inputs: AnimBlueprintFunctionPinInfo[];
	FunctionReference: MemberReference;
	InputPoseIndex: number;
	static Load(ResourceName: string): AnimGraphNode_LinkedInputPose;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LinkedInputPose;
	static GetDefaultObject(): AnimGraphNode_LinkedInputPose;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LinkedInputPose;
	static C(Other: UObject | any): AnimGraphNode_LinkedInputPose;
}

declare class AnimGraphNode_LocalRefPose extends AnimGraphNode_RefPoseBase { 
	static Load(ResourceName: string): AnimGraphNode_LocalRefPose;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LocalRefPose;
	static GetDefaultObject(): AnimGraphNode_LocalRefPose;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LocalRefPose;
	static C(Other: UObject | any): AnimGraphNode_LocalRefPose;
}

declare class AnimNode_ConvertLocalToComponentSpace extends AnimNode_Base { 
	LocalPose: PoseLink;
	clone() : AnimNode_ConvertLocalToComponentSpace;
	static C(Other: UObject | any): AnimNode_ConvertLocalToComponentSpace;
}

declare class AnimGraphNode_LocalToComponentSpace extends AnimGraphNode_Base { 
	UNode: AnimNode_ConvertLocalToComponentSpace;
	static Load(ResourceName: string): AnimGraphNode_LocalToComponentSpace;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LocalToComponentSpace;
	static GetDefaultObject(): AnimGraphNode_LocalToComponentSpace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LocalToComponentSpace;
	static C(Other: UObject | any): AnimGraphNode_LocalToComponentSpace;
}

declare class Axis { 
	Axis: Vector;
	bInLocalSpace: boolean;
	clone() : Axis;
	static C(Other: UObject | any): Axis;
}

declare type EInterpolationBlend = 'Linear' | 'Cubic' | 'Sinusoidal' | 'EaseInOutExponent2' | 'EaseInOutExponent3' | 'EaseInOutExponent4' | 'EaseInOutExponent5' | 'MAX';
declare var EInterpolationBlend : { Linear:'Linear',Cubic:'Cubic',Sinusoidal:'Sinusoidal',EaseInOutExponent2:'EaseInOutExponent2',EaseInOutExponent3:'EaseInOutExponent3',EaseInOutExponent4:'EaseInOutExponent4',EaseInOutExponent5:'EaseInOutExponent5',MAX:'MAX', };
declare type EAxisOption = 'X' | 'Y' | 'Z' | 'X_Neg' | 'Y_Neg' | 'Z_Neg' | 'Custom' | 'EAxisOption_MAX';
declare var EAxisOption : { X:'X',Y:'Y',Z:'Z',X_Neg:'X_Neg',Y_Neg:'Y_Neg',Z_Neg:'Z_Neg',Custom:'Custom',EAxisOption_MAX:'EAxisOption_MAX', };
declare class AnimNode_LookAt extends AnimNode_SkeletalControlBase { 
	BoneToModify: BoneReference;
	LookAtTarget: BoneSocketTarget;
	LookAtLocation: Vector;
	LookAt_Axis: Axis;
	bUseLookUpAxis: boolean;
	InterpolationType: EInterpolationBlend;
	LookUp_Axis: Axis;
	LookAtClamp: number;
	InterpolationTime: number;
	InterpolationTriggerThreashold: number;
	LookAtBone: BoneReference;
	LookAtSocket: string;
	LookAtAxis: EAxisOption;
	CustomLookAtAxis: Vector;
	LookUpAxis: EAxisOption;
	CustomLookUpAxis: Vector;
	clone() : AnimNode_LookAt;
	static C(Other: UObject | any): AnimNode_LookAt;
}

declare class AnimGraphNode_LookAt extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_LookAt;
	static Load(ResourceName: string): AnimGraphNode_LookAt;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LookAt;
	static GetDefaultObject(): AnimGraphNode_LookAt;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LookAt;
	static C(Other: UObject | any): AnimGraphNode_LookAt;
}

declare class AnimNode_MakeDynamicAdditive extends AnimNode_Base { 
	Base: PoseLink;
	Additive: PoseLink;
	bMeshSpaceAdditive: boolean;
	clone() : AnimNode_MakeDynamicAdditive;
	static C(Other: UObject | any): AnimNode_MakeDynamicAdditive;
}

declare class AnimGraphNode_MakeDynamicAdditive extends AnimGraphNode_Base { 
	UNode: AnimNode_MakeDynamicAdditive;
	static Load(ResourceName: string): AnimGraphNode_MakeDynamicAdditive;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MakeDynamicAdditive;
	static GetDefaultObject(): AnimGraphNode_MakeDynamicAdditive;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MakeDynamicAdditive;
	static C(Other: UObject | any): AnimGraphNode_MakeDynamicAdditive;
}

declare class AnimNode_MeshSpaceRefPose extends AnimNode_Base { 
	clone() : AnimNode_MeshSpaceRefPose;
	static C(Other: UObject | any): AnimNode_MeshSpaceRefPose;
}

declare class AnimGraphNode_MeshRefPose extends AnimGraphNode_Base { 
	UNode: AnimNode_MeshSpaceRefPose;
	static Load(ResourceName: string): AnimGraphNode_MeshRefPose;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MeshRefPose;
	static GetDefaultObject(): AnimGraphNode_MeshRefPose;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MeshRefPose;
	static C(Other: UObject | any): AnimGraphNode_MeshRefPose;
}

declare class AnimNode_MirrorBase extends AnimNode_Base { 
	Source: PoseLink;
	clone() : AnimNode_MirrorBase;
	static C(Other: UObject | any): AnimNode_MirrorBase;
}

declare class AnimNode_Mirror extends AnimNode_MirrorBase { 
	bMirror: boolean;
	MirrorDataTable: MirrorDataTable;
	BlendTime: number;
	bResetChild: boolean;
	bBoneMirroring: boolean;
	bCurveMirroring: boolean;
	bAttributeMirroring: boolean;
	clone() : AnimNode_Mirror;
	static C(Other: UObject | any): AnimNode_Mirror;
}

declare class AnimGraphNode_Mirror extends AnimGraphNode_Base { 
	UNode: AnimNode_Mirror;
	static Load(ResourceName: string): AnimGraphNode_Mirror;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Mirror;
	static GetDefaultObject(): AnimGraphNode_Mirror;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Mirror;
	static C(Other: UObject | any): AnimGraphNode_Mirror;
}

declare type EBoneModificationMode = 'BMM_Ignore' | 'BMM_Replace' | 'BMM_Additive' | 'BMM_MAX';
declare var EBoneModificationMode : { BMM_Ignore:'BMM_Ignore',BMM_Replace:'BMM_Replace',BMM_Additive:'BMM_Additive',BMM_MAX:'BMM_MAX', };
declare class AnimNode_ModifyBone extends AnimNode_SkeletalControlBase { 
	BoneToModify: BoneReference;
	Translation: Vector;
	Rotation: Rotator;
	Scale: Vector;
	TranslationMode: EBoneModificationMode;
	RotationMode: EBoneModificationMode;
	ScaleMode: EBoneModificationMode;
	TranslationSpace: EBoneControlSpace;
	RotationSpace: EBoneControlSpace;
	ScaleSpace: EBoneControlSpace;
	clone() : AnimNode_ModifyBone;
	static C(Other: UObject | any): AnimNode_ModifyBone;
}

declare class AnimGraphNode_ModifyBone extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_ModifyBone;
	static Load(ResourceName: string): AnimGraphNode_ModifyBone;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ModifyBone;
	static GetDefaultObject(): AnimGraphNode_ModifyBone;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ModifyBone;
	static C(Other: UObject | any): AnimGraphNode_ModifyBone;
}

declare type EModifyCurveApplyMode = 'Add' | 'Scale' | 'Blend' | 'WeightedMovingAverage' | 'RemapCurve' | 'EModifyCurveApplyMode_MAX';
declare var EModifyCurveApplyMode : { Add:'Add',Scale:'Scale',Blend:'Blend',WeightedMovingAverage:'WeightedMovingAverage',RemapCurve:'RemapCurve',EModifyCurveApplyMode_MAX:'EModifyCurveApplyMode_MAX', };
declare class AnimNode_ModifyCurve extends AnimNode_Base { 
	SourcePose: PoseLink;
	CurveMap: Map<string, number>;
	CurveValues: number[];
	CurveNames: string[];
	Alpha: number;
	ApplyMode: EModifyCurveApplyMode;
	clone() : AnimNode_ModifyCurve;
	static C(Other: UObject | any): AnimNode_ModifyCurve;
}

declare class AnimGraphNode_ModifyCurve extends AnimGraphNode_Base { 
	UNode: AnimNode_ModifyCurve;
	static Load(ResourceName: string): AnimGraphNode_ModifyCurve;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ModifyCurve;
	static GetDefaultObject(): AnimGraphNode_ModifyCurve;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ModifyCurve;
	static C(Other: UObject | any): AnimGraphNode_ModifyCurve;
}

declare class AnimNode_MultiWayBlend extends AnimNode_Base { 
	Poses: PoseLink[];
	DesiredAlphas: number[];
	AlphaScaleBias: InputScaleBias;
	bAdditiveNode: boolean;
	bNormalizeAlpha: boolean;
	clone() : AnimNode_MultiWayBlend;
	static C(Other: UObject | any): AnimNode_MultiWayBlend;
}

declare class AnimGraphNode_MultiWayBlend extends AnimGraphNode_Base { 
	UNode: AnimNode_MultiWayBlend;
	static Load(ResourceName: string): AnimGraphNode_MultiWayBlend;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MultiWayBlend;
	static GetDefaultObject(): AnimGraphNode_MultiWayBlend;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MultiWayBlend;
	static C(Other: UObject | any): AnimGraphNode_MultiWayBlend;
}

declare class AnimNode_ObserveBone extends AnimNode_SkeletalControlBase { 
	BoneToObserve: BoneReference;
	DisplaySpace: EBoneControlSpace;
	bRelativeToRefPose: boolean;
	Translation: Vector;
	Rotation: Rotator;
	Scale: Vector;
	clone() : AnimNode_ObserveBone;
	static C(Other: UObject | any): AnimNode_ObserveBone;
}

declare class AnimGraphNode_ObserveBone extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_ObserveBone;
	static Load(ResourceName: string): AnimGraphNode_ObserveBone;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ObserveBone;
	static GetDefaultObject(): AnimGraphNode_ObserveBone;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ObserveBone;
	static C(Other: UObject | any): AnimGraphNode_ObserveBone;
}

declare class AnimGraphNode_PoseHandler extends AnimGraphNode_AssetPlayerBase { 
	static Load(ResourceName: string): AnimGraphNode_PoseHandler;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseHandler;
	static GetDefaultObject(): AnimGraphNode_PoseHandler;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseHandler;
	static C(Other: UObject | any): AnimGraphNode_PoseHandler;
}

declare class AnimNode_PoseHandler extends AnimNode_AssetPlayerBase { 
	PoseAsset: PoseAsset;
	clone() : AnimNode_PoseHandler;
	static C(Other: UObject | any): AnimNode_PoseHandler;
}

declare class AnimNode_PoseBlendNode extends AnimNode_PoseHandler { 
	SourcePose: PoseLink;
	BlendOption: EAlphaBlendOption;
	CustomCurve: CurveFloat;
	clone() : AnimNode_PoseBlendNode;
	static C(Other: UObject | any): AnimNode_PoseBlendNode;
}

declare class AnimGraphNode_PoseBlendNode extends AnimGraphNode_PoseHandler { 
	UNode: AnimNode_PoseBlendNode;
	static Load(ResourceName: string): AnimGraphNode_PoseBlendNode;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseBlendNode;
	static GetDefaultObject(): AnimGraphNode_PoseBlendNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseBlendNode;
	static C(Other: UObject | any): AnimGraphNode_PoseBlendNode;
}

declare class AnimNode_PoseByName extends AnimNode_PoseHandler { 
	PoseName: string;
	PoseWeight: number;
	clone() : AnimNode_PoseByName;
	static C(Other: UObject | any): AnimNode_PoseByName;
}

declare class AnimGraphNode_PoseByName extends AnimGraphNode_AssetPlayerBase { 
	UNode: AnimNode_PoseByName;
	static Load(ResourceName: string): AnimGraphNode_PoseByName;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseByName;
	static GetDefaultObject(): AnimGraphNode_PoseByName;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseByName;
	static C(Other: UObject | any): AnimGraphNode_PoseByName;
}

declare class PoseDriverTransform { 
	TargetTranslation: Vector;
	TargetRotation: Rotator;
	clone() : PoseDriverTransform;
	static C(Other: UObject | any): PoseDriverTransform;
}

declare type ERBFDistanceMethod = 'Euclidean' | 'Quaternion' | 'SwingAngle' | 'TwistAngle' | 'DefaultMethod' | 'ERBFDistanceMethod_MAX';
declare var ERBFDistanceMethod : { Euclidean:'Euclidean',Quaternion:'Quaternion',SwingAngle:'SwingAngle',TwistAngle:'TwistAngle',DefaultMethod:'DefaultMethod',ERBFDistanceMethod_MAX:'ERBFDistanceMethod_MAX', };
declare type ERBFFunctionType = 'Gaussian' | 'Exponential' | 'Linear' | 'Cubic' | 'Quintic' | 'DefaultFunction' | 'ERBFFunctionType_MAX';
declare var ERBFFunctionType : { Gaussian:'Gaussian',Exponential:'Exponential',Linear:'Linear',Cubic:'Cubic',Quintic:'Quintic',DefaultFunction:'DefaultFunction',ERBFFunctionType_MAX:'ERBFFunctionType_MAX', };
declare class PoseDriverTarget { 
	BoneTransforms: PoseDriverTransform[];
	TargetRotation: Rotator;
	TargetScale: number;
	DistanceMethod: ERBFDistanceMethod;
	FunctionType: ERBFFunctionType;
	bApplyCustomCurve: boolean;
	CustomCurve: RichCurve;
	DrivenName: string;
	bIsHidden: boolean;
	clone() : PoseDriverTarget;
	static C(Other: UObject | any): PoseDriverTarget;
}

declare type ERBFSolverType = 'Additive' | 'Interpolative' | 'ERBFSolverType_MAX';
declare var ERBFSolverType : { Additive:'Additive',Interpolative:'Interpolative',ERBFSolverType_MAX:'ERBFSolverType_MAX', };
declare type EBoneAxis = 'BA_X' | 'BA_Y' | 'BA_Z' | 'BA_MAX';
declare var EBoneAxis : { BA_X:'BA_X',BA_Y:'BA_Y',BA_Z:'BA_Z',BA_MAX:'BA_MAX', };
declare type ERBFNormalizeMethod = 'OnlyNormalizeAboveOne' | 'AlwaysNormalize' | 'NormalizeWithinMedian' | 'NoNormalization' | 'ERBFNormalizeMethod_MAX';
declare var ERBFNormalizeMethod : { OnlyNormalizeAboveOne:'OnlyNormalizeAboveOne',AlwaysNormalize:'AlwaysNormalize',NormalizeWithinMedian:'NormalizeWithinMedian',NoNormalization:'NoNormalization',ERBFNormalizeMethod_MAX:'ERBFNormalizeMethod_MAX', };
declare class RBFParams { 
	TargetDimensions: number;
	SolverType: ERBFSolverType;
	Radius: number;
	bAutomaticRadius: boolean;
	UFunction: ERBFFunctionType;
	DistanceMethod: ERBFDistanceMethod;
	TwistAxis: EBoneAxis;
	WeightThreshold: number;
	NormalizeMethod: ERBFNormalizeMethod;
	MedianReference: Vector;
	MedianMin: number;
	MedianMax: number;
	clone() : RBFParams;
	static C(Other: UObject | any): RBFParams;
}

declare type EPoseDriverType = 'SwingAndTwist' | 'SwingOnly' | 'Translation' | 'EPoseDriverType_MAX';
declare var EPoseDriverType : { SwingAndTwist:'SwingAndTwist',SwingOnly:'SwingOnly',Translation:'Translation',EPoseDriverType_MAX:'EPoseDriverType_MAX', };
declare type EPoseDriverSource = 'Rotation' | 'Translation' | 'EPoseDriverSource_MAX';
declare var EPoseDriverSource : { Rotation:'Rotation',Translation:'Translation',EPoseDriverSource_MAX:'EPoseDriverSource_MAX', };
declare type EPoseDriverOutput = 'DrivePoses' | 'DriveCurves' | 'EPoseDriverOutput_MAX';
declare var EPoseDriverOutput : { DrivePoses:'DrivePoses',DriveCurves:'DriveCurves',EPoseDriverOutput_MAX:'EPoseDriverOutput_MAX', };
declare class AnimNode_PoseDriver extends AnimNode_PoseHandler { 
	SourcePose: PoseLink;
	SourceBones: BoneReference[];
	OnlyDriveBones: BoneReference[];
	PoseTargets: PoseDriverTarget[];
	EvalSpaceBone: BoneReference;
	bEvalFromRefPose: boolean;
	RBFParams: RBFParams;
	SourceBone: BoneReference;
	TwistAxis: EBoneAxis;
	Type: EPoseDriverType;
	RadialScaling: number;
	DriveSource: EPoseDriverSource;
	DriveOutput: EPoseDriverOutput;
	bOnlyDriveSelectedBones: boolean;
	bSoloDrivenOnly: boolean;
	LODThreshold: number;
	clone() : AnimNode_PoseDriver;
	static C(Other: UObject | any): AnimNode_PoseDriver;
}

declare class AnimGraphNode_PoseDriver extends AnimGraphNode_PoseHandler { 
	UNode: AnimNode_PoseDriver;
	AxisLength: number;
	ConeSubdivision: number;
	bDrawDebugCones: boolean;
	LastPreviewComponent: SkeletalMeshComponent;
	static Load(ResourceName: string): AnimGraphNode_PoseDriver;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseDriver;
	static GetDefaultObject(): AnimGraphNode_PoseDriver;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseDriver;
	SetSourceBones(BoneNames: string[]): void;
	SetRBFParameters(Parameters: RBFParams): void;
	SetPoseDriverSource(DriverSource: EPoseDriverSource): void;
	SetPoseDriverOutput(DriverOutput: EPoseDriverOutput): void;
	SetOnlyDriveSelectedBones(bOnlyDriveSelectedBones: boolean): void;
	SetDrivingBones(BoneNames: string[]): void;
	GetSourceBoneNames(BoneNames?: string[]): {BoneNames: string[]};
	GetRBFParameters(): RBFParams;
	GetPoseDriverSource(): EPoseDriverSource;
	GetPoseDriverOutput(): EPoseDriverOutput;
	GetOnlyDriveSelectedBones(): boolean;
	GetDrivingBoneNames(BoneNames?: string[]): {BoneNames: string[]};
	CopyTargetsFromPoseAsset(): void;
	static C(Other: UObject | any): AnimGraphNode_PoseDriver;
}

declare type ESnapshotSourceMode = 'NamedSnapshot' | 'SnapshotPin' | 'ESnapshotSourceMode_MAX';
declare var ESnapshotSourceMode : { NamedSnapshot:'NamedSnapshot',SnapshotPin:'SnapshotPin',ESnapshotSourceMode_MAX:'ESnapshotSourceMode_MAX', };
declare class AnimNode_PoseSnapshot extends AnimNode_Base { 
	SnapshotName: string;
	Snapshot: PoseSnapshot;
	Mode: ESnapshotSourceMode;
	clone() : AnimNode_PoseSnapshot;
	static C(Other: UObject | any): AnimNode_PoseSnapshot;
}

declare class AnimGraphNode_PoseSnapshot extends AnimGraphNode_Base { 
	UNode: AnimNode_PoseSnapshot;
	static Load(ResourceName: string): AnimGraphNode_PoseSnapshot;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseSnapshot;
	static GetDefaultObject(): AnimGraphNode_PoseSnapshot;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseSnapshot;
	static C(Other: UObject | any): AnimGraphNode_PoseSnapshot;
}

declare class RandomPlayerSequenceEntry { 
	Sequence: AnimSequence;
	ChanceToPlay: number;
	MinLoopCount: number;
	MaxLoopCount: number;
	MinPlayRate: number;
	MaxPlayRate: number;
	BlendIn: AlphaBlend;
	clone() : RandomPlayerSequenceEntry;
	static C(Other: UObject | any): RandomPlayerSequenceEntry;
}

declare class AnimNode_RandomPlayer extends AnimNode_AssetPlayerRelevancyBase { 
	Entries: RandomPlayerSequenceEntry[];
	bIgnoreForRelevancyTest: boolean;
	BlendWeight: number;
	bShuffleMode: boolean;
	clone() : AnimNode_RandomPlayer;
	static C(Other: UObject | any): AnimNode_RandomPlayer;
}

declare class AnimGraphNode_RandomPlayer extends AnimGraphNode_Base { 
	UNode: AnimNode_RandomPlayer;
	static Load(ResourceName: string): AnimGraphNode_RandomPlayer;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RandomPlayer;
	static GetDefaultObject(): AnimGraphNode_RandomPlayer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RandomPlayer;
	static C(Other: UObject | any): AnimGraphNode_RandomPlayer;
}

declare class AnimNode_ResetRoot extends AnimNode_SkeletalControlBase { 
	clone() : AnimNode_ResetRoot;
	static C(Other: UObject | any): AnimNode_ResetRoot;
}

declare class AnimGraphNode_ResetRoot extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_ResetRoot;
	static Load(ResourceName: string): AnimGraphNode_ResetRoot;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ResetRoot;
	static GetDefaultObject(): AnimGraphNode_ResetRoot;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ResetRoot;
	static C(Other: UObject | any): AnimGraphNode_ResetRoot;
}

declare class SimSpaceSettings { 
	WorldAlpha: number;
	VelocityScaleZ: number;
	MaxLinearVelocity: number;
	MaxAngularVelocity: number;
	MaxLinearAcceleration: number;
	MaxAngularAcceleration: number;
	ExternalLinearDrag: number;
	ExternalLinearDragV: Vector;
	ExternalLinearVelocity: Vector;
	ExternalAngularVelocity: Vector;
	clone() : SimSpaceSettings;
	static C(Other: UObject | any): SimSpaceSettings;
}

declare type ESimulationSpace = 'ComponentSpace' | 'WorldSpace' | 'BaseBoneSpace' | 'ESimulationSpace_MAX';
declare var ESimulationSpace : { ComponentSpace:'ComponentSpace',WorldSpace:'WorldSpace',BaseBoneSpace:'BaseBoneSpace',ESimulationSpace_MAX:'ESimulationSpace_MAX', };
declare type ESimulationTiming = 'Default' | 'Synchronous' | 'Deferred' | 'ESimulationTiming_MAX';
declare var ESimulationTiming : { Default:'Default',Synchronous:'Synchronous',Deferred:'Deferred',ESimulationTiming_MAX:'ESimulationTiming_MAX', };
declare class AnimNode_RigidBody extends AnimNode_SkeletalControlBase { 
	OverridePhysicsAsset: PhysicsAsset;
	OverrideWorldGravity: Vector;
	ExternalForce: Vector;
	ComponentLinearAccScale: Vector;
	ComponentLinearVelScale: Vector;
	ComponentAppliedLinearAccClamp: Vector;
	SimSpaceSettings: SimSpaceSettings;
	CachedBoundsScale: number;
	BaseBoneRef: BoneReference;
	OverlapChannel: ECollisionChannel;
	SimulationSpace: ESimulationSpace;
	bForceDisableCollisionBetweenConstraintBodies: boolean;
	bUseExternalClothCollision: boolean;
	bEnableWorldGeometry: boolean;
	bOverrideWorldGravity: boolean;
	bTransferBoneVelocities: boolean;
	bFreezeIncomingPoseOnStart: boolean;
	bClampLinearTranslationLimitToRefPose: boolean;
	WorldSpaceMinimumScale: number;
	EvaluationResetTime: number;
	bComponentSpaceSimulation: boolean;
	SimulationTiming: ESimulationTiming;
	clone() : AnimNode_RigidBody;
	static C(Other: UObject | any): AnimNode_RigidBody;
}

declare class AnimGraphNode_RigidBody extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_RigidBody;
	static Load(ResourceName: string): AnimGraphNode_RigidBody;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RigidBody;
	static GetDefaultObject(): AnimGraphNode_RigidBody;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RigidBody;
	static C(Other: UObject | any): AnimGraphNode_RigidBody;
}

declare class AnimGraphNode_Root extends AnimGraphNode_Base { 
	UNode: AnimNode_Root;
	static Load(ResourceName: string): AnimGraphNode_Root;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Root;
	static GetDefaultObject(): AnimGraphNode_Root;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Root;
	static C(Other: UObject | any): AnimGraphNode_Root;
}

declare class AnimNode_RotateRootBone extends AnimNode_Base { 
	BasePose: PoseLink;
	Pitch: number;
	Yaw: number;
	PitchScaleBiasClamp: InputScaleBiasClamp;
	YawScaleBiasClamp: InputScaleBiasClamp;
	MeshToComponent: Rotator;
	clone() : AnimNode_RotateRootBone;
	static C(Other: UObject | any): AnimNode_RotateRootBone;
}

declare class AnimGraphNode_RotateRootBone extends AnimGraphNode_Base { 
	UNode: AnimNode_RotateRootBone;
	static Load(ResourceName: string): AnimGraphNode_RotateRootBone;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotateRootBone;
	static GetDefaultObject(): AnimGraphNode_RotateRootBone;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotateRootBone;
	static C(Other: UObject | any): AnimGraphNode_RotateRootBone;
}

declare class AnimNode_RotationMultiplier extends AnimNode_SkeletalControlBase { 
	TargetBone: BoneReference;
	SourceBone: BoneReference;
	Multiplier: number;
	RotationAxisToRefer: EBoneAxis;
	bIsAdditive: boolean;
	clone() : AnimNode_RotationMultiplier;
	static C(Other: UObject | any): AnimNode_RotationMultiplier;
}

declare class AnimGraphNode_RotationMultiplier extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_RotationMultiplier;
	static Load(ResourceName: string): AnimGraphNode_RotationMultiplier;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotationMultiplier;
	static GetDefaultObject(): AnimGraphNode_RotationMultiplier;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotationMultiplier;
	static C(Other: UObject | any): AnimGraphNode_RotationMultiplier;
}

declare class AnimNode_RotationOffsetBlendSpace extends AnimNode_BlendSpacePlayer { 
	BasePose: PoseLink;
	LODThreshold: number;
	Alpha: number;
	AlphaScaleBias: InputScaleBias;
	AlphaBoolBlend: InputAlphaBoolBlend;
	AlphaCurveName: string;
	AlphaScaleBiasClamp: InputScaleBiasClamp;
	AlphaInputType: EAnimAlphaInputType;
	bAlphaBoolEnabled: boolean;
	clone() : AnimNode_RotationOffsetBlendSpace;
	static C(Other: UObject | any): AnimNode_RotationOffsetBlendSpace;
}

declare class AnimGraphNode_RotationOffsetBlendSpace extends AnimGraphNode_BlendSpaceBase { 
	UNode: AnimNode_RotationOffsetBlendSpace;
	static Load(ResourceName: string): AnimGraphNode_RotationOffsetBlendSpace;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotationOffsetBlendSpace;
	static GetDefaultObject(): AnimGraphNode_RotationOffsetBlendSpace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotationOffsetBlendSpace;
	static C(Other: UObject | any): AnimGraphNode_RotationOffsetBlendSpace;
}

declare class AnimNode_RotationOffsetBlendSpaceGraph extends AnimNode_BlendSpaceGraphBase { 
	BasePose: PoseLink;
	LODThreshold: number;
	Alpha: number;
	AlphaScaleBias: InputScaleBias;
	AlphaBoolBlend: InputAlphaBoolBlend;
	AlphaCurveName: string;
	AlphaScaleBiasClamp: InputScaleBiasClamp;
	AlphaInputType: EAnimAlphaInputType;
	bAlphaBoolEnabled: boolean;
	clone() : AnimNode_RotationOffsetBlendSpaceGraph;
	static C(Other: UObject | any): AnimNode_RotationOffsetBlendSpaceGraph;
}

declare class AnimGraphNode_RotationOffsetBlendSpaceGraph extends AnimGraphNode_BlendSpaceGraphBase { 
	UNode: AnimNode_RotationOffsetBlendSpaceGraph;
	static Load(ResourceName: string): AnimGraphNode_RotationOffsetBlendSpaceGraph;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotationOffsetBlendSpaceGraph;
	static GetDefaultObject(): AnimGraphNode_RotationOffsetBlendSpaceGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotationOffsetBlendSpaceGraph;
	static C(Other: UObject | any): AnimGraphNode_RotationOffsetBlendSpaceGraph;
}

declare class AnimNode_SaveCachedPose extends AnimNode_Base { 
	Pose: PoseLink;
	CachePoseName: string;
	clone() : AnimNode_SaveCachedPose;
	static C(Other: UObject | any): AnimNode_SaveCachedPose;
}

declare class AnimGraphNode_SaveCachedPose extends AnimGraphNode_Base { 
	UNode: AnimNode_SaveCachedPose;
	CacheName: string;
	static Load(ResourceName: string): AnimGraphNode_SaveCachedPose;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SaveCachedPose;
	static GetDefaultObject(): AnimGraphNode_SaveCachedPose;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SaveCachedPose;
	static C(Other: UObject | any): AnimGraphNode_SaveCachedPose;
}

declare type EScaleChainInitialLength = 'FixedDefaultLengthValue' | 'Distance' | 'ChainLength' | 'EScaleChainInitialLength_MAX';
declare var EScaleChainInitialLength : { FixedDefaultLengthValue:'FixedDefaultLengthValue',Distance:'Distance',ChainLength:'ChainLength',EScaleChainInitialLength_MAX:'EScaleChainInitialLength_MAX', };
declare class AnimNode_ScaleChainLength extends AnimNode_Base { 
	InputPose: PoseLink;
	DefaultChainLength: number;
	ChainStartBone: BoneReference;
	ChainEndBone: BoneReference;
	TargetLocation: Vector;
	Alpha: number;
	AlphaScaleBias: InputScaleBias;
	ChainInitialLength: EScaleChainInitialLength;
	clone() : AnimNode_ScaleChainLength;
	static C(Other: UObject | any): AnimNode_ScaleChainLength;
}

declare class AnimGraphNode_ScaleChainLength extends AnimGraphNode_Base { 
	UNode: AnimNode_ScaleChainLength;
	static Load(ResourceName: string): AnimGraphNode_ScaleChainLength;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ScaleChainLength;
	static GetDefaultObject(): AnimGraphNode_ScaleChainLength;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ScaleChainLength;
	static C(Other: UObject | any): AnimGraphNode_ScaleChainLength;
}

declare class AnimNode_SequenceEvaluatorBase extends AnimNode_AssetPlayerBase { 
	clone() : AnimNode_SequenceEvaluatorBase;
	static C(Other: UObject | any): AnimNode_SequenceEvaluatorBase;
}

declare type ESequenceEvalReinit = 'NoReset' | 'StartPosition' | 'ExplicitTime' | 'ESequenceEvalReinit_MAX';
declare var ESequenceEvalReinit : { NoReset:'NoReset',StartPosition:'StartPosition',ExplicitTime:'ExplicitTime',ESequenceEvalReinit_MAX:'ESequenceEvalReinit_MAX', };
declare class AnimNode_SequenceEvaluator extends AnimNode_SequenceEvaluatorBase { 
	GroupName: string;
	GroupRole: EAnimGroupRole;
	Method: EAnimSyncMethod;
	bIgnoreForRelevancyTest: boolean;
	Sequence: AnimSequenceBase;
	ExplicitTime: number;
	bShouldLoop: boolean;
	bTeleportToExplicitTime: boolean;
	ReinitializationBehavior: ESequenceEvalReinit;
	StartPosition: number;
	clone() : AnimNode_SequenceEvaluator;
	static C(Other: UObject | any): AnimNode_SequenceEvaluator;
}

declare class AnimGraphNode_SequenceEvaluator extends AnimGraphNode_AssetPlayerBase { 
	UNode: AnimNode_SequenceEvaluator;
	static Load(ResourceName: string): AnimGraphNode_SequenceEvaluator;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SequenceEvaluator;
	static GetDefaultObject(): AnimGraphNode_SequenceEvaluator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SequenceEvaluator;
	static C(Other: UObject | any): AnimGraphNode_SequenceEvaluator;
}

declare class InputScaleBiasClampState { 
	clone() : InputScaleBiasClampState;
	static C(Other: UObject | any): InputScaleBiasClampState;
}

declare class AnimNode_SequencePlayerBase extends AnimNode_AssetPlayerBase { 
	PlayRateScaleBiasClampState: InputScaleBiasClampState;
	clone() : AnimNode_SequencePlayerBase;
	static C(Other: UObject | any): AnimNode_SequencePlayerBase;
}

declare class InputScaleBiasClampConstants { 
	bMapRange: boolean;
	bClampResult: boolean;
	bInterpResult: boolean;
	InRange: InputRange;
	OutRange: InputRange;
	Scale: number;
	Bias: number;
	ClampMin: number;
	ClampMax: number;
	InterpSpeedIncreasing: number;
	InterpSpeedDecreasing: number;
	clone() : InputScaleBiasClampConstants;
	static C(Other: UObject | any): InputScaleBiasClampConstants;
}

declare class AnimNode_SequencePlayer extends AnimNode_SequencePlayerBase { 
	GroupName: string;
	GroupRole: EAnimGroupRole;
	Method: EAnimSyncMethod;
	bIgnoreForRelevancyTest: boolean;
	Sequence: AnimSequenceBase;
	PlayRateBasis: number;
	PlayRate: number;
	PlayRateScaleBiasClampConstants: InputScaleBiasClampConstants;
	PlayRateScaleBiasClamp: InputScaleBiasClamp;
	StartPosition: number;
	bLoopAnimation: boolean;
	bStartFromMatchingPose: boolean;
	clone() : AnimNode_SequencePlayer;
	static C(Other: UObject | any): AnimNode_SequencePlayer;
}

declare class AnimGraphNode_SequencePlayer extends AnimGraphNode_AssetPlayerBase { 
	UNode: AnimNode_SequencePlayer;
	static Load(ResourceName: string): AnimGraphNode_SequencePlayer;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SequencePlayer;
	static GetDefaultObject(): AnimGraphNode_SequencePlayer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SequencePlayer;
	static C(Other: UObject | any): AnimGraphNode_SequencePlayer;
}

declare class AnimNode_Slot extends AnimNode_Base { 
	Source: PoseLink;
	SlotName: string;
	bAlwaysUpdateSourcePose: boolean;
	clone() : AnimNode_Slot;
	static C(Other: UObject | any): AnimNode_Slot;
}

declare class AnimGraphNode_Slot extends AnimGraphNode_Base { 
	UNode: AnimNode_Slot;
	static Load(ResourceName: string): AnimGraphNode_Slot;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Slot;
	static GetDefaultObject(): AnimGraphNode_Slot;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Slot;
	static C(Other: UObject | any): AnimGraphNode_Slot;
}

declare type ESplineBoneAxis = 'None' | 'X' | 'Y' | 'Z' | 'ESplineBoneAxis_MAX';
declare var ESplineBoneAxis : { None:'None',X:'X',Y:'Y',Z:'Z',ESplineBoneAxis_MAX:'ESplineBoneAxis_MAX', };
declare class AnimNode_SplineIK extends AnimNode_SkeletalControlBase { 
	StartBone: BoneReference;
	EndBone: BoneReference;
	BoneAxis: ESplineBoneAxis;
	bAutoCalculateSpline: boolean;
	PointCount: number;
	ControlPoints: Transform[];
	Roll: number;
	TwistStart: number;
	TwistEnd: number;
	TwistBlend: AlphaBlend;
	Stretch: number;
	Offset: number;
	clone() : AnimNode_SplineIK;
	static C(Other: UObject | any): AnimNode_SplineIK;
}

declare class AnimGraphNode_SplineIK extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_SplineIK;
	static Load(ResourceName: string): AnimGraphNode_SplineIK;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SplineIK;
	static GetDefaultObject(): AnimGraphNode_SplineIK;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SplineIK;
	static C(Other: UObject | any): AnimGraphNode_SplineIK;
}

declare class AnimNode_SpringBone extends AnimNode_SkeletalControlBase { 
	SpringBone: BoneReference;
	MaxDisplacement: number;
	SpringStiffness: number;
	SpringDamping: number;
	ErrorResetThresh: number;
	bNoZSpring: boolean;
	bLimitDisplacement: boolean;
	bTranslateX: boolean;
	bTranslateY: boolean;
	bTranslateZ: boolean;
	bRotateX: boolean;
	bRotateY: boolean;
	bRotateZ: boolean;
	clone() : AnimNode_SpringBone;
	static C(Other: UObject | any): AnimNode_SpringBone;
}

declare class AnimGraphNode_SpringBone extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_SpringBone;
	static Load(ResourceName: string): AnimGraphNode_SpringBone;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SpringBone;
	static GetDefaultObject(): AnimGraphNode_SpringBone;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SpringBone;
	static C(Other: UObject | any): AnimGraphNode_SpringBone;
}

declare class AnimNode_StateMachine extends AnimNode_Base { 
	StateMachineIndexInClass: number;
	MaxTransitionsPerFrame: number;
	MaxTransitionsRequests: number;
	bSkipFirstUpdateTransition: boolean;
	bReinitializeOnBecomingRelevant: boolean;
	bCreateNotifyMetaData: boolean;
	bAllowConduitEntryStates: boolean;
	clone() : AnimNode_StateMachine;
	static C(Other: UObject | any): AnimNode_StateMachine;
}

declare class AnimGraphNode_StateMachine extends AnimGraphNode_StateMachineBase { 
	UNode: AnimNode_StateMachine;
	static Load(ResourceName: string): AnimGraphNode_StateMachine;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateMachine;
	static GetDefaultObject(): AnimGraphNode_StateMachine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateMachine;
	static C(Other: UObject | any): AnimGraphNode_StateMachine;
}

declare class AnimNode_Sync extends AnimNode_Base { 
	Source: PoseLink;
	GroupName: string;
	GroupRole: EAnimGroupRole;
	clone() : AnimNode_Sync;
	static C(Other: UObject | any): AnimNode_Sync;
}

declare class AnimGraphNode_Sync extends AnimGraphNode_Base { 
	UNode: AnimNode_Sync;
	static Load(ResourceName: string): AnimGraphNode_Sync;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Sync;
	static GetDefaultObject(): AnimGraphNode_Sync;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Sync;
	static C(Other: UObject | any): AnimGraphNode_Sync;
}

declare class RotationLimit { 
	LimitMin: Vector;
	LimitMax: Vector;
	clone() : RotationLimit;
	static C(Other: UObject | any): RotationLimit;
}

declare class AnimNode_Trail extends AnimNode_SkeletalControlBase { 
	TrailBone: BoneReference;
	ChainLength: number;
	ChainBoneAxis: EAxis;
	bInvertChainBoneAxis: boolean;
	bLimitStretch: boolean;
	bLimitRotation: boolean;
	bUsePlanarLimit: boolean;
	bActorSpaceFakeVel: boolean;
	bReorientParentToChild: boolean;
	bEnableDebug: boolean;
	bShowBaseMotion: boolean;
	bShowTrailLocation: boolean;
	bShowLimit: boolean;
	DebugLifeTime: number;
	TrailRelaxation: number;
	MaxDeltaTime: number;
	RelaxationSpeedScale: number;
	TrailRelaxationSpeed: RuntimeFloatCurve;
	RelaxationSpeedScaleInputProcessor: InputScaleBiasClamp;
	RotationLimits: RotationLimit[];
	RotationOffsets: Vector[];
	PlanarLimits: AnimPhysPlanarLimit[];
	StretchLimit: number;
	FakeVelocity: Vector;
	BaseJoint: BoneReference;
	TrailBoneRotationBlendAlpha: number;
	LastBoneRotationAnimAlphaBlend: number;
	clone() : AnimNode_Trail;
	static C(Other: UObject | any): AnimNode_Trail;
}

declare class AnimGraphNode_Trail extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_Trail;
	static Load(ResourceName: string): AnimGraphNode_Trail;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Trail;
	static GetDefaultObject(): AnimGraphNode_Trail;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Trail;
	static C(Other: UObject | any): AnimGraphNode_Trail;
}

declare type EEvaluatorDataSource = 'EDS_SourcePose' | 'EDS_DestinationPose' | 'EDS_MAX';
declare var EEvaluatorDataSource : { EDS_SourcePose:'EDS_SourcePose',EDS_DestinationPose:'EDS_DestinationPose',EDS_MAX:'EDS_MAX', };
declare type EEvaluatorMode = 'EM_Standard' | 'EM_Freeze' | 'EM_DelayedFreeze' | 'EM_MAX';
declare var EEvaluatorMode : { EM_Standard:'EM_Standard',EM_Freeze:'EM_Freeze',EM_DelayedFreeze:'EM_DelayedFreeze',EM_MAX:'EM_MAX', };
declare class AnimNode_TransitionPoseEvaluator extends AnimNode_Base { 
	FramesToCachePose: number;
	DataSource: EEvaluatorDataSource;
	EvaluatorMode: EEvaluatorMode;
	clone() : AnimNode_TransitionPoseEvaluator;
	static C(Other: UObject | any): AnimNode_TransitionPoseEvaluator;
}

declare class AnimGraphNode_TransitionPoseEvaluator extends AnimGraphNode_Base { 
	UNode: AnimNode_TransitionPoseEvaluator;
	static Load(ResourceName: string): AnimGraphNode_TransitionPoseEvaluator;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TransitionPoseEvaluator;
	static GetDefaultObject(): AnimGraphNode_TransitionPoseEvaluator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TransitionPoseEvaluator;
	static C(Other: UObject | any): AnimGraphNode_TransitionPoseEvaluator;
}

declare class ReferenceBoneFrame { 
	bone: BoneReference;
	Axis: Axis;
	clone() : ReferenceBoneFrame;
	static C(Other: UObject | any): ReferenceBoneFrame;
}

declare class AnimCurveParam { 
	Name: string;
	clone() : AnimCurveParam;
	static C(Other: UObject | any): AnimCurveParam;
}

declare class AnimNode_TwistCorrectiveNode extends AnimNode_SkeletalControlBase { 
	BaseFrame: ReferenceBoneFrame;
	TwistFrame: ReferenceBoneFrame;
	TwistPlaneNormalAxis: Axis;
	RangeMax: number;
	RemappedMin: number;
	RemappedMax: number;
	Curve: AnimCurveParam;
	clone() : AnimNode_TwistCorrectiveNode;
	static C(Other: UObject | any): AnimNode_TwistCorrectiveNode;
}

declare class AnimGraphNode_TwistCorrectiveNode extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_TwistCorrectiveNode;
	static Load(ResourceName: string): AnimGraphNode_TwistCorrectiveNode;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwistCorrectiveNode;
	static GetDefaultObject(): AnimGraphNode_TwistCorrectiveNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwistCorrectiveNode;
	static C(Other: UObject | any): AnimGraphNode_TwistCorrectiveNode;
}

declare class AnimNode_TwoBoneIK extends AnimNode_SkeletalControlBase { 
	IKBone: BoneReference;
	StartStretchRatio: number;
	MaxStretchScale: number;
	StretchLimits: Vector2D;
	bNoTwist: boolean;
	JointTargetSpaceBoneName: string;
	EffectorSpaceBoneName: string;
	EffectorLocation: Vector;
	EffectorTarget: BoneSocketTarget;
	JointTargetLocation: Vector;
	JointTarget: BoneSocketTarget;
	TwistAxis: Axis;
	EffectorLocationSpace: EBoneControlSpace;
	JointTargetLocationSpace: EBoneControlSpace;
	bAllowStretching: boolean;
	bTakeRotationFromEffectorSpace: boolean;
	bMaintainEffectorRelRot: boolean;
	bAllowTwist: boolean;
	clone() : AnimNode_TwoBoneIK;
	static C(Other: UObject | any): AnimNode_TwoBoneIK;
}

declare class AnimGraphNode_TwoBoneIK extends AnimGraphNode_SkeletalControlBase { 
	UNode: AnimNode_TwoBoneIK;
	bEnableDebugDraw: boolean;
	static Load(ResourceName: string): AnimGraphNode_TwoBoneIK;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwoBoneIK;
	static GetDefaultObject(): AnimGraphNode_TwoBoneIK;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwoBoneIK;
	static C(Other: UObject | any): AnimGraphNode_TwoBoneIK;
}

declare class AnimNode_TwoWayBlend extends AnimNode_Base { 
	A: PoseLink;
	B: PoseLink;
	AlphaInputType: EAnimAlphaInputType;
	bAlphaBoolEnabled: boolean;
	bResetChildOnActivation: boolean;
	Alpha: number;
	AlphaScaleBias: InputScaleBias;
	AlphaBoolBlend: InputAlphaBoolBlend;
	AlphaCurveName: string;
	AlphaScaleBiasClamp: InputScaleBiasClamp;
	clone() : AnimNode_TwoWayBlend;
	static C(Other: UObject | any): AnimNode_TwoWayBlend;
}

declare class AnimGraphNode_TwoWayBlend extends AnimGraphNode_Base { 
	BlendNode: AnimNode_TwoWayBlend;
	static Load(ResourceName: string): AnimGraphNode_TwoWayBlend;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwoWayBlend;
	static GetDefaultObject(): AnimGraphNode_TwoWayBlend;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwoWayBlend;
	static C(Other: UObject | any): AnimGraphNode_TwoWayBlend;
}

declare class AnimNode_UseCachedPose extends AnimNode_Base { 
	LinkToCachingNode: PoseLink;
	CachePoseName: string;
	clone() : AnimNode_UseCachedPose;
	static C(Other: UObject | any): AnimNode_UseCachedPose;
}

declare class AnimGraphNode_UseCachedPose extends AnimGraphNode_Base { 
	UNode: AnimNode_UseCachedPose;
	SaveCachedPoseNode: AnimGraphNode_SaveCachedPose;
	NameOfCache: string;
	static Load(ResourceName: string): AnimGraphNode_UseCachedPose;
	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_UseCachedPose;
	static GetDefaultObject(): AnimGraphNode_UseCachedPose;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_UseCachedPose;
	static C(Other: UObject | any): AnimGraphNode_UseCachedPose;
}

declare class AnimPreviewAttacheInstance extends AnimInstance { 
	static Load(ResourceName: string): AnimPreviewAttacheInstance;
	static Find(Outer: UObject, ResourceName: string): AnimPreviewAttacheInstance;
	static GetDefaultObject(): AnimPreviewAttacheInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimPreviewAttacheInstance;
	static C(Other: UObject | any): AnimPreviewAttacheInstance;
}

declare class AnimSingleNodeInstance extends AnimInstance { 
	CurrentAsset: AnimationAsset;
	PostEvaluateAnimEvent: UnrealEngineDelegate<() => void>;
	static Load(ResourceName: string): AnimSingleNodeInstance;
	static Find(Outer: UObject, ResourceName: string): AnimSingleNodeInstance;
	static GetDefaultObject(): AnimSingleNodeInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSingleNodeInstance;
	StopAnim(): void;
	SetReverse(bInReverse: boolean): void;
	SetPreviewCurveOverride(PoseName: string,Value: number,bRemoveIfZero: boolean): void;
	SetPositionWithPreviousTime(InPosition: number,InPreviousTime: number,bFireNotifies: boolean): void;
	SetPosition(InPosition: number,bFireNotifies: boolean): void;
	SetPlayRate(InPlayRate: number): void;
	SetPlaying(bIsPlaying: boolean): void;
	SetMirrorDataTable(MirrorDataTable: MirrorDataTable): void;
	SetLooping(bIsLooping: boolean): void;
	SetBlendSpacePosition(InPosition: Vector): void;
	SetAnimationAsset(NewAsset: AnimationAsset,bIsLooping: boolean,InPlayRate: number): void;
	PlayAnim(bIsLooping: boolean,InPlayRate: number,InStartPosition: number): void;
	GetMirrorDataTable(): MirrorDataTable;
	GetLength(): number;
	GetAnimationAsset(): AnimationAsset;
	static C(Other: UObject | any): AnimSingleNodeInstance;
}

declare type EMontagePreviewType = 'EMPT_Normal' | 'EMPT_AllSections' | 'EMPT_MAX';
declare var EMontagePreviewType : { EMPT_Normal:'EMPT_Normal',EMPT_AllSections:'EMPT_AllSections',EMPT_MAX:'EMPT_MAX', };
declare class AnimPreviewInstance extends AnimSingleNodeInstance { 
	MontagePreviewType: EMontagePreviewType;
	MontagePreviewStartSectionIdx: number;
	static Load(ResourceName: string): AnimPreviewInstance;
	static Find(Outer: UObject, ResourceName: string): AnimPreviewInstance;
	static GetDefaultObject(): AnimPreviewInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimPreviewInstance;
	static C(Other: UObject | any): AnimPreviewInstance;
}

declare class AnimStateNodeBase extends EdGraphNode { 
	static Load(ResourceName: string): AnimStateNodeBase;
	static Find(Outer: UObject, ResourceName: string): AnimStateNodeBase;
	static GetDefaultObject(): AnimStateNodeBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateNodeBase;
	static C(Other: UObject | any): AnimStateNodeBase;
}

declare class AnimStateAliasNode extends AnimStateNodeBase { 
	bGlobalAlias: boolean;
	StateAliasName: string;
	AliasedStateNodes: Set<AnimStateNodeBase>;
	static Load(ResourceName: string): AnimStateAliasNode;
	static Find(Outer: UObject, ResourceName: string): AnimStateAliasNode;
	static GetDefaultObject(): AnimStateAliasNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateAliasNode;
	static C(Other: UObject | any): AnimStateAliasNode;
}

declare class AnimStateConduitNode extends AnimStateNodeBase { 
	BoundGraph: EdGraph;
	static Load(ResourceName: string): AnimStateConduitNode;
	static Find(Outer: UObject, ResourceName: string): AnimStateConduitNode;
	static GetDefaultObject(): AnimStateConduitNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateConduitNode;
	static C(Other: UObject | any): AnimStateConduitNode;
}

declare type EAnimStateType = 'AST_SingleAnimation' | 'AST_BlendGraph' | 'AST_MAX';
declare var EAnimStateType : { AST_SingleAnimation:'AST_SingleAnimation',AST_BlendGraph:'AST_BlendGraph',AST_MAX:'AST_MAX', };
declare class AnimStateNode extends AnimStateNodeBase { 
	BoundGraph: EdGraph;
	StateType: EAnimStateType;
	StateEntered: AnimNotifyEvent;
	StateLeft: AnimNotifyEvent;
	StateFullyBlended: AnimNotifyEvent;
	bAlwaysResetOnEntry: boolean;
	static Load(ResourceName: string): AnimStateNode;
	static Find(Outer: UObject, ResourceName: string): AnimStateNode;
	static GetDefaultObject(): AnimStateNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateNode;
	static C(Other: UObject | any): AnimStateNode;
}

declare type ETransitionBlendMode = 'TBM_Linear' | 'TBM_Cubic' | 'TBM_MAX';
declare var ETransitionBlendMode : { TBM_Linear:'TBM_Linear',TBM_Cubic:'TBM_Cubic',TBM_MAX:'TBM_MAX', };
declare type ETransitionLogicType = 'TLT_StandardBlend' | 'TLT_Inertialization' | 'TLT_Custom' | 'TLT_MAX';
declare var ETransitionLogicType : { TLT_StandardBlend:'TLT_StandardBlend',TLT_Inertialization:'TLT_Inertialization',TLT_Custom:'TLT_Custom',TLT_MAX:'TLT_MAX', };
declare class AnimStateTransitionNode extends AnimStateNodeBase { 
	BoundGraph: EdGraph;
	CustomTransitionGraph: EdGraph;
	PriorityOrder: number;
	CrossfadeDuration: number;
	CrossfadeMode: ETransitionBlendMode;
	BlendMode: EAlphaBlendOption;
	CustomBlendCurve: CurveFloat;
	BlendProfile: BlendProfile;
	bAutomaticRuleBasedOnSequencePlayerInState: boolean;
	SyncGroupNameToRequireValidMarkersRule: string;
	LogicType: ETransitionLogicType;
	TransitionStart: AnimNotifyEvent;
	TransitionEnd: AnimNotifyEvent;
	TransitionInterrupt: AnimNotifyEvent;
	Bidirectional: boolean;
	bSharedRules: boolean;
	bSharedCrossfade: boolean;
	SharedRulesName: string;
	SharedRulesGuid: Guid;
	SharedColor: LinearColor;
	SharedCrossfadeName: string;
	SharedCrossfadeGuid: Guid;
	SharedCrossfadeIdx: number;
	static Load(ResourceName: string): AnimStateTransitionNode;
	static Find(Outer: UObject, ResourceName: string): AnimStateTransitionNode;
	static GetDefaultObject(): AnimStateTransitionNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateTransitionNode;
	static C(Other: UObject | any): AnimStateTransitionNode;
}

declare class ClassVariableCreator extends Interface { 
	static Load(ResourceName: string): ClassVariableCreator;
	static Find(Outer: UObject, ResourceName: string): ClassVariableCreator;
	static GetDefaultObject(): ClassVariableCreator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClassVariableCreator;
	static C(Other: UObject | any): ClassVariableCreator;
}

declare class K2Node_AnimGetter extends K2Node_CallFunction { 
	SourceNode: AnimGraphNode_Base;
	SourceStateNode: AnimStateNodeBase;
	GetterClass: UnrealEngineClass;
	SourceAnimBlueprint: AnimBlueprint;
	CachedTitle: string;
	Contexts: string[];
	static Load(ResourceName: string): K2Node_AnimGetter;
	static Find(Outer: UObject, ResourceName: string): K2Node_AnimGetter;
	static GetDefaultObject(): K2Node_AnimGetter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AnimGetter;
	static C(Other: UObject | any): K2Node_AnimGetter;
}

declare class K2Node_AnimNodeReference extends K2Node { 
	Tag: string;
	static Load(ResourceName: string): K2Node_AnimNodeReference;
	static Find(Outer: UObject, ResourceName: string): K2Node_AnimNodeReference;
	static GetDefaultObject(): K2Node_AnimNodeReference;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AnimNodeReference;
	static C(Other: UObject | any): K2Node_AnimNodeReference;
}

declare class K2Node_BaseAsyncTask extends K2Node { 
	ProxyFactoryFunctionName: string;
	ProxyFactoryClass: UnrealEngineClass;
	ProxyClass: UnrealEngineClass;
	ProxyActivateFunctionName: string;
	static Load(ResourceName: string): K2Node_BaseAsyncTask;
	static Find(Outer: UObject, ResourceName: string): K2Node_BaseAsyncTask;
	static GetDefaultObject(): K2Node_BaseAsyncTask;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BaseAsyncTask;
	static C(Other: UObject | any): K2Node_BaseAsyncTask;
}

declare class K2Node_PlayMontage extends K2Node_BaseAsyncTask { 
	static Load(ResourceName: string): K2Node_PlayMontage;
	static Find(Outer: UObject, ResourceName: string): K2Node_PlayMontage;
	static GetDefaultObject(): K2Node_PlayMontage;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_PlayMontage;
	static C(Other: UObject | any): K2Node_PlayMontage;
}

declare type ETransitionGetter = 'AnimationAsset_GetCurrentTime' | 'AnimationAsset_GetLength' | 'AnimationAsset_GetCurrentTimeFraction' | 'AnimationAsset_GetTimeFromEnd' | 'AnimationAsset_GetTimeFromEndFraction' | 'CurrentState_ElapsedTime' | 'CurrentState_GetBlendWeight' | 'CurrentTransitionDuration' | 'ArbitraryState_GetBlendWeight' | 'ETransitionGetter_MAX';
declare var ETransitionGetter : { AnimationAsset_GetCurrentTime:'AnimationAsset_GetCurrentTime',AnimationAsset_GetLength:'AnimationAsset_GetLength',AnimationAsset_GetCurrentTimeFraction:'AnimationAsset_GetCurrentTimeFraction',AnimationAsset_GetTimeFromEnd:'AnimationAsset_GetTimeFromEnd',AnimationAsset_GetTimeFromEndFraction:'AnimationAsset_GetTimeFromEndFraction',CurrentState_ElapsedTime:'CurrentState_ElapsedTime',CurrentState_GetBlendWeight:'CurrentState_GetBlendWeight',CurrentTransitionDuration:'CurrentTransitionDuration',ArbitraryState_GetBlendWeight:'ArbitraryState_GetBlendWeight',ETransitionGetter_MAX:'ETransitionGetter_MAX', };
declare class K2Node_TransitionRuleGetter extends K2Node { 
	GetterType: ETransitionGetter;
	AssociatedAnimAssetPlayerNode: AnimGraphNode_Base;
	AssociatedStateNode: AnimStateNode;
	static Load(ResourceName: string): K2Node_TransitionRuleGetter;
	static Find(Outer: UObject, ResourceName: string): K2Node_TransitionRuleGetter;
	static GetDefaultObject(): K2Node_TransitionRuleGetter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TransitionRuleGetter;
	static C(Other: UObject | any): K2Node_TransitionRuleGetter;
}

declare class BlueprintEditorLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): BlueprintEditorLibrary;
	static Find(Outer: UObject, ResourceName: string): BlueprintEditorLibrary;
	static GetDefaultObject(): BlueprintEditorLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEditorLibrary;
	static UpgradeOperatorNodes(Blueprint: Blueprint): void;
	static SetBlueprintVariableInstanceEditable(Blueprint: Blueprint,VariableName: string,bInstanceEditable: boolean): void;
	static SetBlueprintVariableExposeToCinematics(Blueprint: Blueprint,VariableName: string,bExposeToCinematics: boolean): void;
	static SetBlueprintVariableExposeOnSpawn(Blueprint: Blueprint,VariableName: string,bExposeOnSpawn: boolean): void;
	static ReplaceVariableReferences(Blueprint: Blueprint,OldVarName: string,NewVarName: string): void;
	static ReparentBlueprint(Blueprint: Blueprint,NewParentClass: UnrealEngineClass): void;
	static RenameGraph(Graph: EdGraph,NewNameStr: string): void;
	static RemoveUnusedVariables(Blueprint: Blueprint): number;
	static RemoveUnusedNodes(Blueprint: Blueprint): void;
	static RemoveGraph(Blueprint: Blueprint,Graph: EdGraph): void;
	static RemoveFunctionGraph(Blueprint: Blueprint,FuncName: string): void;
	static GetBlueprintAsset(UObject: UObject): Blueprint;
	static GeneratedClass(BlueprintObj: Blueprint): UnrealEngineClass;
	static FindGraph(Blueprint: Blueprint,GraphName: string): EdGraph;
	static FindEventGraph(Blueprint: Blueprint): EdGraph;
	static CompileBlueprint(Blueprint: Blueprint): void;
	static AddFunctionGraph(Blueprint: Blueprint,FuncName: string): EdGraph;
	static C(Other: UObject | any): BlueprintEditorLibrary;
}

declare class ClassViewerProjectSettings extends UObject { 
	InternalOnlyPaths: DirectoryPath[];
	InternalOnlyClasses: SoftClassPath[];
	static Load(ResourceName: string): ClassViewerProjectSettings;
	static Find(Outer: UObject, ResourceName: string): ClassViewerProjectSettings;
	static GetDefaultObject(): ClassViewerProjectSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClassViewerProjectSettings;
	static C(Other: UObject | any): ClassViewerProjectSettings;
}

declare type EContentBrowserDataMenuContext_AddNewMenuDomain = 'Toolbar' | 'AssetView' | 'PathView' | 'EContentBrowserDataMenuContext_MAX';
declare var EContentBrowserDataMenuContext_AddNewMenuDomain : { Toolbar:'Toolbar',AssetView:'AssetView',PathView:'PathView',EContentBrowserDataMenuContext_MAX:'EContentBrowserDataMenuContext_MAX', };
declare class ContentBrowserDataMenuContext_AddNewMenu extends UObject { 
	SelectedPaths: string[];
	bContainsValidPackagePath: boolean;
	bCanBeModified: boolean;
	OwnerDomain: EContentBrowserDataMenuContext_AddNewMenuDomain;
	static Load(ResourceName: string): ContentBrowserDataMenuContext_AddNewMenu;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserDataMenuContext_AddNewMenu;
	static GetDefaultObject(): ContentBrowserDataMenuContext_AddNewMenu;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserDataMenuContext_AddNewMenu;
	static C(Other: UObject | any): ContentBrowserDataMenuContext_AddNewMenu;
}

declare class ContentBrowserItem { 
	clone() : ContentBrowserItem;
	static C(Other: UObject | any): ContentBrowserItem;
	GetDisplayName(): string;
	GetVirtualPath(): string;
	IsFile(): boolean;
	IsFolder(): boolean;
	static GetDisplayName(Item: ContentBrowserItem): string;
	static GetVirtualPath(Item: ContentBrowserItem): string;
	static IsFile(Item: ContentBrowserItem): boolean;
	static IsFolder(Item: ContentBrowserItem): boolean;
}

declare class ContentBrowserDataMenuContext_FolderMenu extends UObject { 
	SelectedItems: ContentBrowserItem[];
	bCanBeModified: boolean;
	static Load(ResourceName: string): ContentBrowserDataMenuContext_FolderMenu;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserDataMenuContext_FolderMenu;
	static GetDefaultObject(): ContentBrowserDataMenuContext_FolderMenu;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserDataMenuContext_FolderMenu;
	static C(Other: UObject | any): ContentBrowserDataMenuContext_FolderMenu;
}

declare class ContentBrowserDataMenuContext_FileMenu extends UObject { 
	SelectedItems: ContentBrowserItem[];
	bCanBeModified: boolean;
	static Load(ResourceName: string): ContentBrowserDataMenuContext_FileMenu;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserDataMenuContext_FileMenu;
	static GetDefaultObject(): ContentBrowserDataMenuContext_FileMenu;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserDataMenuContext_FileMenu;
	static C(Other: UObject | any): ContentBrowserDataMenuContext_FileMenu;
}

declare class ContentBrowserDataMenuContext_DragDropMenu extends UObject { 
	DropTargetItem: ContentBrowserItem;
	DraggedItems: ContentBrowserItem[];
	bCanMove: boolean;
	bCanCopy: boolean;
	static Load(ResourceName: string): ContentBrowserDataMenuContext_DragDropMenu;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserDataMenuContext_DragDropMenu;
	static GetDefaultObject(): ContentBrowserDataMenuContext_DragDropMenu;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserDataMenuContext_DragDropMenu;
	static C(Other: UObject | any): ContentBrowserDataMenuContext_DragDropMenu;
}

declare class ContentBrowserDataSource extends UObject { 
	static Load(ResourceName: string): ContentBrowserDataSource;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserDataSource;
	static GetDefaultObject(): ContentBrowserDataSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserDataSource;
	static C(Other: UObject | any): ContentBrowserDataSource;
}

declare type EContentBrowserItemTypeFilter = 'IncludeNone' | 'IncludeFolders' | 'IncludeFiles' | 'IncludeAll' | 'EContentBrowserItemTypeFilter_MAX';
declare var EContentBrowserItemTypeFilter : { IncludeNone:'IncludeNone',IncludeFolders:'IncludeFolders',IncludeFiles:'IncludeFiles',IncludeAll:'IncludeAll',EContentBrowserItemTypeFilter_MAX:'EContentBrowserItemTypeFilter_MAX', };
declare type EContentBrowserItemCategoryFilter = 'IncludeNone' | 'IncludeAssets' | 'IncludeClasses' | 'IncludeCollections' | 'IncludeMisc' | 'IncludeAll' | 'EContentBrowserItemCategoryFilter_MAX';
declare var EContentBrowserItemCategoryFilter : { IncludeNone:'IncludeNone',IncludeAssets:'IncludeAssets',IncludeClasses:'IncludeClasses',IncludeCollections:'IncludeCollections',IncludeMisc:'IncludeMisc',IncludeAll:'IncludeAll',EContentBrowserItemCategoryFilter_MAX:'EContentBrowserItemCategoryFilter_MAX', };
declare type EContentBrowserItemAttributeFilter = 'IncludeNone' | 'IncludeProject' | 'IncludeEngine' | 'IncludePlugins' | 'IncludeDeveloper' | 'IncludeLocalized' | 'IncludeAll' | 'EContentBrowserItemAttributeFilter_MAX';
declare var EContentBrowserItemAttributeFilter : { IncludeNone:'IncludeNone',IncludeProject:'IncludeProject',IncludeEngine:'IncludeEngine',IncludePlugins:'IncludePlugins',IncludeDeveloper:'IncludeDeveloper',IncludeLocalized:'IncludeLocalized',IncludeAll:'IncludeAll',EContentBrowserItemAttributeFilter_MAX:'EContentBrowserItemAttributeFilter_MAX', };
declare class ContentBrowserDataFilter { 
	bRecursivePaths: boolean;
	ItemTypeFilter: EContentBrowserItemTypeFilter;
	ItemCategoryFilter: EContentBrowserItemCategoryFilter;
	ItemAttributeFilter: EContentBrowserItemAttributeFilter;
	clone() : ContentBrowserDataFilter;
	static C(Other: UObject | any): ContentBrowserDataFilter;
}

declare class ContentBrowserDataSubsystem extends EditorSubsystem { 
	EnabledDataSources: string[];
	static Load(ResourceName: string): ContentBrowserDataSubsystem;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserDataSubsystem;
	static GetDefaultObject(): ContentBrowserDataSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserDataSubsystem;
	GetItemsUnderPath(InPath: string,InFilter: ContentBrowserDataFilter): ContentBrowserItem[];
	GetItemsAtPath(InPath: string,InItemTypeFilter: EContentBrowserItemTypeFilter): ContentBrowserItem[];
	GetItemAtPath(InPath: string,InItemTypeFilter: EContentBrowserItemTypeFilter): ContentBrowserItem;
	GetAvailableDataSources(): string[];
	GetActiveDataSources(): string[];
	DeactivateDataSource(Name: string): boolean;
	DeactivateAllDataSources(): void;
	ActivateDataSource(Name: string): boolean;
	ActivateAllDataSources(): void;
	static C(Other: UObject | any): ContentBrowserDataSubsystem;
}

declare class ContentBrowserItemLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): ContentBrowserItemLibrary;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserItemLibrary;
	static GetDefaultObject(): ContentBrowserItemLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserItemLibrary;
	static IsFolder(Item: ContentBrowserItem): boolean;
	static IsFile(Item: ContentBrowserItem): boolean;
	static GetVirtualPath(Item: ContentBrowserItem): string;
	static GetDisplayName(Item: ContentBrowserItem): string;
	static C(Other: UObject | any): ContentBrowserItemLibrary;
}

declare type EContentBrowserPathType = 'None' | 'Internal' | 'Virtual' | 'EContentBrowserPathType_MAX';
declare var EContentBrowserPathType : { None:'None',Internal:'Internal',Virtual:'Virtual',EContentBrowserPathType_MAX:'EContentBrowserPathType_MAX', };
declare class ContentBrowserItemPath { 
	clone() : ContentBrowserItemPath;
	static C(Other: UObject | any): ContentBrowserItemPath;
	BreakContentBrowserItemPath(VirtualPath?: string,InternalPath?: string): {VirtualPath: string, InternalPath: string};
	GetInternalPath(): string;
	GetVirtualPath(): string;
	SetPath(InPath?: string,InPathType?: EContentBrowserPathType): {ItemPath: ContentBrowserItemPath};
	static BreakContentBrowserItemPath(ItemPath: ContentBrowserItemPath,VirtualPath?: string,InternalPath?: string): {VirtualPath: string, InternalPath: string};
	static GetInternalPath(ItemPath: ContentBrowserItemPath): string;
	static GetVirtualPath(ItemPath: ContentBrowserItemPath): string;
	static SetPath(ItemPath?: ContentBrowserItemPath,InPath?: string,InPathType?: EContentBrowserPathType): {ItemPath: ContentBrowserItemPath};
	static MakeContentBrowserItemPath(InPath: string,InPathType: EContentBrowserPathType): ContentBrowserItemPath;
}

declare class ContentBrowserItemPathExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): ContentBrowserItemPathExtensions;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserItemPathExtensions;
	static GetDefaultObject(): ContentBrowserItemPathExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserItemPathExtensions;
	static SetPath(ItemPath?: ContentBrowserItemPath,InPath?: string,InPathType?: EContentBrowserPathType): {ItemPath: ContentBrowserItemPath};
	static MakeContentBrowserItemPath(InPath: string,InPathType: EContentBrowserPathType): ContentBrowserItemPath;
	static GetVirtualPath(ItemPath: ContentBrowserItemPath): string;
	static GetInternalPath(ItemPath: ContentBrowserItemPath): string;
	static BreakContentBrowserItemPath(ItemPath: ContentBrowserItemPath,VirtualPath?: string,InternalPath?: string): {VirtualPath: string, InternalPath: string};
	static C(Other: UObject | any): ContentBrowserItemPathExtensions;
}

declare class PinTypeSelectorFilter extends UObject { 
	FilterClass: Class;
	static Load(ResourceName: string): PinTypeSelectorFilter;
	static Find(Outer: UObject, ResourceName: string): PinTypeSelectorFilter;
	static GetDefaultObject(): PinTypeSelectorFilter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PinTypeSelectorFilter;
	static C(Other: UObject | any): PinTypeSelectorFilter;
}

declare type EBlueprintPinStyleType = 'BPST_Original' | 'BPST_VariantA' | 'BPST_MAX';
declare var EBlueprintPinStyleType : { BPST_Original:'BPST_Original',BPST_VariantA:'BPST_VariantA',BPST_MAX:'BPST_MAX', };
declare type EGraphPanningMouseButton = 'Right' | 'Middle' | 'Both' | 'EGraphPanningMouseButton_MAX';
declare var EGraphPanningMouseButton : { Right:'Right',Middle:'Middle',Both:'Both',EGraphPanningMouseButton_MAX:'EGraphPanningMouseButton_MAX', };
declare type ECommentBoxMode = 'GroupMovement' | 'NoGroupMovement' | 'ECommentBoxMode_MAX';
declare var ECommentBoxMode : { GroupMovement:'GroupMovement',NoGroupMovement:'NoGroupMovement',ECommentBoxMode_MAX:'ECommentBoxMode_MAX', };
declare class GraphEditorSettings extends UObject { 
	DataPinStyle: EBlueprintPinStyleType;
	PanningMouseButton: EGraphPanningMouseButton;
	PaddingAbovePin: number;
	PaddingBelowPin: number;
	PaddingRightOfInput: number;
	PaddingLeftOfOutput: number;
	PaddingTowardsNodeEdge: number;
	bTreatSplinesLikePins: boolean;
	SplineHoverTolerance: number;
	SplineCloseTolerance: number;
	ForwardSplineHorizontalDeltaRange: number;
	ForwardSplineVerticalDeltaRange: number;
	ForwardSplineTangentFromHorizontalDelta: Vector2D;
	ForwardSplineTangentFromVerticalDelta: Vector2D;
	BackwardSplineHorizontalDeltaRange: number;
	BackwardSplineVerticalDeltaRange: number;
	BackwardSplineTangentFromHorizontalDelta: Vector2D;
	BackwardSplineTangentFromVerticalDelta: Vector2D;
	DefaultPinTypeColor: LinearColor;
	ExecutionPinTypeColor: LinearColor;
	BooleanPinTypeColor: LinearColor;
	BytePinTypeColor: LinearColor;
	ClassPinTypeColor: LinearColor;
	IntPinTypeColor: LinearColor;
	Int64PinTypeColor: LinearColor;
	FloatPinTypeColor: LinearColor;
	DoublePinTypeColor: LinearColor;
	RealPinTypeColor: LinearColor;
	NamePinTypeColor: LinearColor;
	SoftObjectPinTypeColor: LinearColor;
	SoftClassPinTypeColor: LinearColor;
	DelegatePinTypeColor: LinearColor;
	ObjectPinTypeColor: LinearColor;
	InterfacePinTypeColor: LinearColor;
	StringPinTypeColor: LinearColor;
	TextPinTypeColor: LinearColor;
	StructPinTypeColor: LinearColor;
	WildcardPinTypeColor: LinearColor;
	VectorPinTypeColor: LinearColor;
	RotatorPinTypeColor: LinearColor;
	TransformPinTypeColor: LinearColor;
	IndexPinTypeColor: LinearColor;
	EventNodeTitleColor: LinearColor;
	FunctionCallNodeTitleColor: LinearColor;
	PureFunctionCallNodeTitleColor: LinearColor;
	ParentFunctionCallNodeTitleColor: LinearColor;
	FunctionTerminatorNodeTitleColor: LinearColor;
	ExecBranchNodeTitleColor: LinearColor;
	ExecSequenceNodeTitleColor: LinearColor;
	ResultNodeTitleColor: LinearColor;
	DefaultCommentNodeTitleColor: LinearColor;
	PreviewNodeTitleColor: LinearColor;
	DefaultDataWireThickness: number;
	DefaultExecutionWireThickness: number;
	TraceAttackColor: LinearColor;
	TraceAttackWireThickness: number;
	TraceAttackHoldPeriod: number;
	TraceDecayPeriod: number;
	TraceDecayExponent: number;
	TraceSustainColor: LinearColor;
	TraceSustainWireThickness: number;
	TraceSustainHoldPeriod: number;
	TraceReleaseColor: LinearColor;
	TraceReleaseWireThickness: number;
	TraceReleasePeriod: number;
	TraceReleaseExponent: number;
	TracePositionBonusPeriod: number;
	TracePositionExponent: number;
	PaddingAutoCollateIncrement: number;
	bOpenCreateMenuOnBlankGraphAreas: boolean;
	DefaultCommentNodeMoveMode: ECommentBoxMode;
	bShowCommentBubbleWhenZoomedOut: boolean;
	static Load(ResourceName: string): GraphEditorSettings;
	static Find(Outer: UObject, ResourceName: string): GraphEditorSettings;
	static GetDefaultObject(): GraphEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GraphEditorSettings;
	static C(Other: UObject | any): GraphEditorSettings;
}

declare class AssetEditorContextInterface extends Interface { 
	static Load(ResourceName: string): AssetEditorContextInterface;
	static Find(Outer: UObject, ResourceName: string): AssetEditorContextInterface;
	static GetDefaultObject(): AssetEditorContextInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetEditorContextInterface;
	static C(Other: UObject | any): AssetEditorContextInterface;
}

declare class AssetFactoryInterface extends Interface { 
	static Load(ResourceName: string): AssetFactoryInterface;
	static Find(Outer: UObject, ResourceName: string): AssetFactoryInterface;
	static GetDefaultObject(): AssetFactoryInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetFactoryInterface;
	static C(Other: UObject | any): AssetFactoryInterface;
}

declare class EditorElementSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): EditorElementSubsystem;
	static Find(Outer: UObject, ResourceName: string): EditorElementSubsystem;
	static GetDefaultObject(): EditorElementSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorElementSubsystem;
	static C(Other: UObject | any): EditorElementSubsystem;
}

declare class PlacementSubsystem extends EditorSubsystem { 
	AssetFactories: AssetFactoryInterface[];
	static Load(ResourceName: string): PlacementSubsystem;
	static Find(Outer: UObject, ResourceName: string): PlacementSubsystem;
	static GetDefaultObject(): PlacementSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlacementSubsystem;
	static C(Other: UObject | any): PlacementSubsystem;
}

declare class TypedElementDetailsInterface extends Interface { 
	static Load(ResourceName: string): TypedElementDetailsInterface;
	static Find(Outer: UObject, ResourceName: string): TypedElementDetailsInterface;
	static GetDefaultObject(): TypedElementDetailsInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TypedElementDetailsInterface;
	static C(Other: UObject | any): TypedElementDetailsInterface;
}

declare class TypedElementViewportInteraction extends UObject { 
	static Load(ResourceName: string): TypedElementViewportInteraction;
	static Find(Outer: UObject, ResourceName: string): TypedElementViewportInteraction;
	static GetDefaultObject(): TypedElementViewportInteraction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TypedElementViewportInteraction;
	static C(Other: UObject | any): TypedElementViewportInteraction;
}

declare class EditorConfigSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): EditorConfigSubsystem;
	static Find(Outer: UObject, ResourceName: string): EditorConfigSubsystem;
	static GetDefaultObject(): EditorConfigSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorConfigSubsystem;
	static C(Other: UObject | any): EditorConfigSubsystem;
}

declare class EditorConfigTestSimpleStruct { 
	bool: boolean;
	int: number;
	string: string;
	float: number;
	Array: string[];
	clone() : EditorConfigTestSimpleStruct;
	static C(Other: UObject | any): EditorConfigTestSimpleStruct;
}

declare class EditorConfigTestObject extends UObject { 
	UObject: UObject;
	struct: EditorConfigTestSimpleStruct;
	Number: number;
	static Load(ResourceName: string): EditorConfigTestObject;
	static Find(Outer: UObject, ResourceName: string): EditorConfigTestObject;
	static GetDefaultObject(): EditorConfigTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorConfigTestObject;
	static C(Other: UObject | any): EditorConfigTestObject;
}

declare class EditorMetadataOverrides extends EditorSubsystem { 
	static Load(ResourceName: string): EditorMetadataOverrides;
	static Find(Outer: UObject, ResourceName: string): EditorMetadataOverrides;
	static GetDefaultObject(): EditorMetadataOverrides;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorMetadataOverrides;
	static C(Other: UObject | any): EditorMetadataOverrides;
}

declare class CustomTextFilterData { 
	FilterLabel: string;
	FilterString: string;
	FilterColor: LinearColor;
	clone() : CustomTextFilterData;
	static C(Other: UObject | any): CustomTextFilterData;
}

declare class CustomTextFilterState { 
	bIsChecked: boolean;
	bIsActive: boolean;
	FilterData: CustomTextFilterData;
	clone() : CustomTextFilterState;
	static C(Other: UObject | any): CustomTextFilterState;
}

declare type EFilterBarLayout = 'Horizontal' | 'Vertical' | 'EFilterBarLayout_MAX';
declare var EFilterBarLayout : { Horizontal:'Horizontal',Vertical:'Vertical',EFilterBarLayout_MAX:'EFilterBarLayout_MAX', };
declare class FilterBarSettings { 
	CustomFilters: Map<string, boolean>;
	TypeFilters: Map<string, boolean>;
	CustomTextFilters: CustomTextFilterState[];
	bIsLayoutSaved: boolean;
	FilterBarLayout: EFilterBarLayout;
	clone() : FilterBarSettings;
	static C(Other: UObject | any): FilterBarSettings;
}

declare class FilterBarConfig extends EditorConfigBase { 
	FilterBars: Map<string, FilterBarSettings>;
	static Load(ResourceName: string): FilterBarConfig;
	static Find(Outer: UObject, ResourceName: string): FilterBarConfig;
	static GetDefaultObject(): FilterBarConfig;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FilterBarConfig;
	static C(Other: UObject | any): FilterBarConfig;
}

declare class AssetFilterBarContext extends UObject { 
	static Load(ResourceName: string): AssetFilterBarContext;
	static Find(Outer: UObject, ResourceName: string): AssetFilterBarContext;
	static GetDefaultObject(): AssetFilterBarContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetFilterBarContext;
	static C(Other: UObject | any): AssetFilterBarContext;
}

declare class BlueprintCompilerExtension extends UObject { 
	static Load(ResourceName: string): BlueprintCompilerExtension;
	static Find(Outer: UObject, ResourceName: string): BlueprintCompilerExtension;
	static GetDefaultObject(): BlueprintCompilerExtension;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintCompilerExtension;
	static C(Other: UObject | any): BlueprintCompilerExtension;
}

declare class BlueprintEditorToolMenuContext extends UObject { 
	static Load(ResourceName: string): BlueprintEditorToolMenuContext;
	static Find(Outer: UObject, ResourceName: string): BlueprintEditorToolMenuContext;
	static GetDefaultObject(): BlueprintEditorToolMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEditorToolMenuContext;
	GetBlueprintObj(): Blueprint;
	static C(Other: UObject | any): BlueprintEditorToolMenuContext;
}

declare class FavoritedBlueprintPaletteItem { 
	clone() : FavoritedBlueprintPaletteItem;
	static C(Other: UObject | any): FavoritedBlueprintPaletteItem;
}

declare class BlueprintPaletteFavorites extends UObject { 
	CustomFavorites: string[];
	CurrentFavorites: FavoritedBlueprintPaletteItem[];
	CurrentProfile: string;
	static Load(ResourceName: string): BlueprintPaletteFavorites;
	static Find(Outer: UObject, ResourceName: string): BlueprintPaletteFavorites;
	static GetDefaultObject(): BlueprintPaletteFavorites;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintPaletteFavorites;
	static C(Other: UObject | any): BlueprintPaletteFavorites;
}

declare class SCSEditorExtensionContext extends UObject { 
	static Load(ResourceName: string): SCSEditorExtensionContext;
	static Find(Outer: UObject, ResourceName: string): SCSEditorExtensionContext;
	static GetDefaultObject(): SCSEditorExtensionContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SCSEditorExtensionContext;
	static C(Other: UObject | any): SCSEditorExtensionContext;
}

declare class SSCSEditorMenuContext extends UObject { 
	static Load(ResourceName: string): SSCSEditorMenuContext;
	static Find(Outer: UObject, ResourceName: string): SSCSEditorMenuContext;
	static GetDefaultObject(): SSCSEditorMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SSCSEditorMenuContext;
	static C(Other: UObject | any): SSCSEditorMenuContext;
}

declare class SubobjectEditorExtensionContext extends UObject { 
	static Load(ResourceName: string): SubobjectEditorExtensionContext;
	static Find(Outer: UObject, ResourceName: string): SubobjectEditorExtensionContext;
	static GetDefaultObject(): SubobjectEditorExtensionContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubobjectEditorExtensionContext;
	static C(Other: UObject | any): SubobjectEditorExtensionContext;
}

declare class BlueprintNodeSpawner extends UObject { 
	NodeClass: UnrealEngineClass;
	static Load(ResourceName: string): BlueprintNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintNodeSpawner;
	static GetDefaultObject(): BlueprintNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintNodeSpawner;
	static C(Other: UObject | any): BlueprintNodeSpawner;
}

declare class BlueprintAssetNodeSpawner extends BlueprintNodeSpawner { 
	AssetData: AssetData;
	static Load(ResourceName: string): BlueprintAssetNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintAssetNodeSpawner;
	static GetDefaultObject(): BlueprintAssetNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintAssetNodeSpawner;
	static C(Other: UObject | any): BlueprintAssetNodeSpawner;
}

declare class BlueprintEventNodeSpawner extends BlueprintNodeSpawner { 
	EventFunc: UFunction;
	CustomEventName: string;
	static Load(ResourceName: string): BlueprintEventNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintEventNodeSpawner;
	static GetDefaultObject(): BlueprintEventNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEventNodeSpawner;
	static C(Other: UObject | any): BlueprintEventNodeSpawner;
}

declare class BlueprintBoundEventNodeSpawner extends BlueprintEventNodeSpawner { 
	EventDelegate: any;
	static Load(ResourceName: string): BlueprintBoundEventNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintBoundEventNodeSpawner;
	static GetDefaultObject(): BlueprintBoundEventNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintBoundEventNodeSpawner;
	static C(Other: UObject | any): BlueprintBoundEventNodeSpawner;
}

declare class BlueprintBoundNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): BlueprintBoundNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintBoundNodeSpawner;
	static GetDefaultObject(): BlueprintBoundNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintBoundNodeSpawner;
	static C(Other: UObject | any): BlueprintBoundNodeSpawner;
}

declare class BlueprintComponentNodeSpawner extends BlueprintNodeSpawner { 
	ComponentClass: UnrealEngineClass;
	ComponentName: string;
	ComponentAssetName: string;
	static Load(ResourceName: string): BlueprintComponentNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintComponentNodeSpawner;
	static GetDefaultObject(): BlueprintComponentNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintComponentNodeSpawner;
	static C(Other: UObject | any): BlueprintComponentNodeSpawner;
}

declare class BlueprintFieldNodeSpawner extends BlueprintNodeSpawner { 
	OwnerClass: UnrealEngineClass;
	Field: Field;
	Property: any;
	static Load(ResourceName: string): BlueprintFieldNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintFieldNodeSpawner;
	static GetDefaultObject(): BlueprintFieldNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFieldNodeSpawner;
	static C(Other: UObject | any): BlueprintFieldNodeSpawner;
}

declare class BlueprintDelegateNodeSpawner extends BlueprintFieldNodeSpawner { 
	static Load(ResourceName: string): BlueprintDelegateNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintDelegateNodeSpawner;
	static GetDefaultObject(): BlueprintDelegateNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintDelegateNodeSpawner;
	static C(Other: UObject | any): BlueprintDelegateNodeSpawner;
}

declare class AdditionalBlueprintCategory { 
	Name: string;
	ClassFilter: SoftClassPath;
	clone() : AdditionalBlueprintCategory;
	static C(Other: UObject | any): AdditionalBlueprintCategory;
}

declare type EBlueprintBreakpointReloadMethod = 'RestoreAll' | 'RestoreAllAndDisable' | 'DiscardAll' | 'EBlueprintBreakpointReloadMethod_MAX';
declare var EBlueprintBreakpointReloadMethod : { RestoreAll:'RestoreAll',RestoreAllAndDisable:'RestoreAllAndDisable',DiscardAll:'DiscardAll',EBlueprintBreakpointReloadMethod_MAX:'EBlueprintBreakpointReloadMethod_MAX', };
declare type ESaveOnCompile = 'SoC_Never' | 'SoC_SuccessOnly' | 'SoC_Always' | 'SoC_MAX';
declare var ESaveOnCompile : { SoC_Never:'SoC_Never',SoC_SuccessOnly:'SoC_SuccessOnly',SoC_Always:'SoC_Always',SoC_MAX:'SoC_MAX', };
declare class BlueprintBreakpoint { 
	bEnabled: boolean;
	UNode: EdGraphNode;
	bStepOnce: boolean;
	bStepOnce_WasPreviouslyDisabled: boolean;
	bStepOnce_RemoveAfterHit: boolean;
	clone() : BlueprintBreakpoint;
	static C(Other: UObject | any): BlueprintBreakpoint;
}

declare class BlueprintWatchedPin { 
	OwningNode: EdGraphNode;
	PinId: Guid;
	PathToProperty: string[];
	clone() : BlueprintWatchedPin;
	static C(Other: UObject | any): BlueprintWatchedPin;
}

declare class PerBlueprintSettings { 
	Breakpoints: BlueprintBreakpoint[];
	WatchedPins: BlueprintWatchedPin[];
	clone() : PerBlueprintSettings;
	static C(Other: UObject | any): PerBlueprintSettings;
}

declare class BlueprintEditorSettings extends DeveloperSettings { 
	bDrawMidpointArrowsInBlueprints: boolean;
	bShowGraphInstructionText: boolean;
	bHideUnrelatedNodes: boolean;
	bShowShortTooltips: boolean;
	bEnableInputTriggerSupportWarnings: boolean;
	bSplitContextTargetSettings: boolean;
	bExposeAllMemberComponentFunctions: boolean;
	bShowContextualFavorites: boolean;
	bExposeDeprecatedFunctions: boolean;
	bCompactCallOnMemberNodes: boolean;
	bFlattenFavoritesMenus: boolean;
	bAutoCastObjectConnections: boolean;
	bShowViewportOnSimulate: boolean;
	bSpawnDefaultBlueprintNodes: boolean;
	bHideConstructionScriptComponentsInDetailsView: boolean;
	bHostFindInBlueprintsInGlobalTab: boolean;
	bNavigateToNativeFunctionsFromCallNodes: boolean;
	bDoubleClickNavigatesToParent: boolean;
	bEnableTypePromotion: boolean;
	TypePromotionPinDenyList: Set<string>;
	AdditionalBlueprintCategories: AdditionalBlueprintCategory[];
	BreakpointReloadMethod: EBlueprintBreakpointReloadMethod;
	bEnablePinValueInspectionTooltips: boolean;
	bEnableNamespaceEditorFeatures: boolean;
	NamespacesToAlwaysInclude: string[];
	bFavorPureCastNodes: boolean;
	SaveOnCompile: ESaveOnCompile;
	bJumpToNodeErrors: boolean;
	bAllowExplicitImpureNodeDisabling: boolean;
	bShowActionMenuItemSignatures: boolean;
	bBlueprintNodeUniqueNames: boolean;
	bShowDetailedCompileResults: boolean;
	CompileEventDisplayThresholdMs: number;
	NodeTemplateCacheCapMB: number;
	bShowInheritedVariables: boolean;
	bAlwaysShowInterfacesInOverrides: boolean;
	bShowParentClassInOverrides: boolean;
	bShowEmptySections: boolean;
	bShowAccessSpecifier: boolean;
	Bookmarks: Map<Guid, EditedDocumentInfo>;
	BookmarkNodes: BPEditorBookmarkNode[];
	PerBlueprintSettings: Map<string, PerBlueprintSettings>;
	bIncludeCommentNodesInBookmarksTab: boolean;
	bShowBookmarksForCurrentDocumentOnlyInTab: boolean;
	GraphEditorQuickJumps: Map<number, EditedDocumentInfo>;
	bEnableNamespaceFilteringFeatures: boolean;
	bEnableNamespaceImportingFeatures: boolean;
	bInheritImportedNamespacesFromParentBP: boolean;
	BaseClassesToAllowRecompilingDuringPlayInEditor: Class[];
	static Load(ResourceName: string): BlueprintEditorSettings;
	static Find(Outer: UObject, ResourceName: string): BlueprintEditorSettings;
	static GetDefaultObject(): BlueprintEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEditorSettings;
	static C(Other: UObject | any): BlueprintEditorSettings;
}

declare class BlueprintFunctionNodeSpawner extends BlueprintFieldNodeSpawner { 
	static Load(ResourceName: string): BlueprintFunctionNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintFunctionNodeSpawner;
	static GetDefaultObject(): BlueprintFunctionNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFunctionNodeSpawner;
	static C(Other: UObject | any): BlueprintFunctionNodeSpawner;
}

declare class BlueprintVariableNodeSpawner extends BlueprintFieldNodeSpawner { 
	LocalVarOuter: EdGraph;
	LocalVarDesc: BPVariableDescription;
	static Load(ResourceName: string): BlueprintVariableNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): BlueprintVariableNodeSpawner;
	static GetDefaultObject(): BlueprintVariableNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintVariableNodeSpawner;
	static C(Other: UObject | any): BlueprintVariableNodeSpawner;
}

declare class K2Node_ActorBoundEvent extends K2Node_Event { 
	DelegatePropertyName: string;
	DelegateOwnerClass: UnrealEngineClass;
	EventOwner: Actor;
	static Load(ResourceName: string): K2Node_ActorBoundEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_ActorBoundEvent;
	static GetDefaultObject(): K2Node_ActorBoundEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ActorBoundEvent;
	static C(Other: UObject | any): K2Node_ActorBoundEvent;
}

declare class K2Node_AddComponent extends K2Node_CallFunction { 
	bHasExposedVariable: boolean;
	TemplateBlueprint: string;
	TemplateType: UnrealEngineClass;
	static Load(ResourceName: string): K2Node_AddComponent;
	static Find(Outer: UObject, ResourceName: string): K2Node_AddComponent;
	static GetDefaultObject(): K2Node_AddComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddComponent;
	static C(Other: UObject | any): K2Node_AddComponent;
}

declare class K2Node_ConstructObjectFromClass extends K2Node { 
	static Load(ResourceName: string): K2Node_ConstructObjectFromClass;
	static Find(Outer: UObject, ResourceName: string): K2Node_ConstructObjectFromClass;
	static GetDefaultObject(): K2Node_ConstructObjectFromClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConstructObjectFromClass;
	static C(Other: UObject | any): K2Node_ConstructObjectFromClass;
}

declare class K2Node_AddComponentByClass extends K2Node_ConstructObjectFromClass { 
	static Load(ResourceName: string): K2Node_AddComponentByClass;
	static Find(Outer: UObject, ResourceName: string): K2Node_AddComponentByClass;
	static GetDefaultObject(): K2Node_AddComponentByClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddComponentByClass;
	static C(Other: UObject | any): K2Node_AddComponentByClass;
}

declare class K2Node_BaseMCDelegate extends K2Node { 
	DelegateReference: MemberReference;
	static Load(ResourceName: string): K2Node_BaseMCDelegate;
	static Find(Outer: UObject, ResourceName: string): K2Node_BaseMCDelegate;
	static GetDefaultObject(): K2Node_BaseMCDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BaseMCDelegate;
	static C(Other: UObject | any): K2Node_BaseMCDelegate;
}

declare class K2Node_AddDelegate extends K2Node_BaseMCDelegate { 
	static Load(ResourceName: string): K2Node_AddDelegate;
	static Find(Outer: UObject, ResourceName: string): K2Node_AddDelegate;
	static GetDefaultObject(): K2Node_AddDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddDelegate;
	static C(Other: UObject | any): K2Node_AddDelegate;
}

declare class K2Node_AddPinInterface extends Interface { 
	static Load(ResourceName: string): K2Node_AddPinInterface;
	static Find(Outer: UObject, ResourceName: string): K2Node_AddPinInterface;
	static GetDefaultObject(): K2Node_AddPinInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddPinInterface;
	static C(Other: UObject | any): K2Node_AddPinInterface;
}

declare class K2Node_AssignDelegate extends K2Node_AddDelegate { 
	static Load(ResourceName: string): K2Node_AssignDelegate;
	static Find(Outer: UObject, ResourceName: string): K2Node_AssignDelegate;
	static GetDefaultObject(): K2Node_AssignDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AssignDelegate;
	static C(Other: UObject | any): K2Node_AssignDelegate;
}

declare class K2Node_AssignmentStatement extends K2Node { 
	static Load(ResourceName: string): K2Node_AssignmentStatement;
	static Find(Outer: UObject, ResourceName: string): K2Node_AssignmentStatement;
	static GetDefaultObject(): K2Node_AssignmentStatement;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AssignmentStatement;
	static C(Other: UObject | any): K2Node_AssignmentStatement;
}

declare class K2Node_AsyncAction extends K2Node_BaseAsyncTask { 
	static Load(ResourceName: string): K2Node_AsyncAction;
	static Find(Outer: UObject, ResourceName: string): K2Node_AsyncAction;
	static GetDefaultObject(): K2Node_AsyncAction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AsyncAction;
	static C(Other: UObject | any): K2Node_AsyncAction;
}

declare class K2Node_BitmaskLiteral extends K2Node { 
	BitflagsEnum: Enum;
	static Load(ResourceName: string): K2Node_BitmaskLiteral;
	static Find(Outer: UObject, ResourceName: string): K2Node_BitmaskLiteral;
	static GetDefaultObject(): K2Node_BitmaskLiteral;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BitmaskLiteral;
	static C(Other: UObject | any): K2Node_BitmaskLiteral;
}

declare type ESelfContextInfo = 'Unspecified' | 'NotSelfContext' | 'ESelfContextInfo_MAX';
declare var ESelfContextInfo : { Unspecified:'Unspecified',NotSelfContext:'NotSelfContext',ESelfContextInfo_MAX:'ESelfContextInfo_MAX', };
declare class K2Node_Variable extends K2Node { 
	VariableReference: MemberReference;
	SelfContextInfo: ESelfContextInfo;
	VariableSourceClass: UnrealEngineClass;
	VariableName: string;
	bSelfContext: boolean;
	static Load(ResourceName: string): K2Node_Variable;
	static Find(Outer: UObject, ResourceName: string): K2Node_Variable;
	static GetDefaultObject(): K2Node_Variable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Variable;
	static C(Other: UObject | any): K2Node_Variable;
}

declare class K2Node_StructOperation extends K2Node_Variable { 
	StructType: ScriptStruct;
	static Load(ResourceName: string): K2Node_StructOperation;
	static Find(Outer: UObject, ResourceName: string): K2Node_StructOperation;
	static GetDefaultObject(): K2Node_StructOperation;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructOperation;
	static C(Other: UObject | any): K2Node_StructOperation;
}

declare class K2Node_StructMemberGet extends K2Node_StructOperation { 
	ShowPinForProperties: OptionalPinFromProperty[];
	static Load(ResourceName: string): K2Node_StructMemberGet;
	static Find(Outer: UObject, ResourceName: string): K2Node_StructMemberGet;
	static GetDefaultObject(): K2Node_StructMemberGet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructMemberGet;
	static C(Other: UObject | any): K2Node_StructMemberGet;
}

declare class K2Node_BreakStruct extends K2Node_StructMemberGet { 
	bMadeAfterOverridePinRemoval: boolean;
	static Load(ResourceName: string): K2Node_BreakStruct;
	static Find(Outer: UObject, ResourceName: string): K2Node_BreakStruct;
	static GetDefaultObject(): K2Node_BreakStruct;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BreakStruct;
	static C(Other: UObject | any): K2Node_BreakStruct;
}

declare class K2Node_CallArrayFunction extends K2Node_CallFunction { 
	static Load(ResourceName: string): K2Node_CallArrayFunction;
	static Find(Outer: UObject, ResourceName: string): K2Node_CallArrayFunction;
	static GetDefaultObject(): K2Node_CallArrayFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallArrayFunction;
	static C(Other: UObject | any): K2Node_CallArrayFunction;
}

declare class K2Node_CallDataTableFunction extends K2Node_CallFunction { 
	static Load(ResourceName: string): K2Node_CallDataTableFunction;
	static Find(Outer: UObject, ResourceName: string): K2Node_CallDataTableFunction;
	static GetDefaultObject(): K2Node_CallDataTableFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallDataTableFunction;
	static C(Other: UObject | any): K2Node_CallDataTableFunction;
}

declare class K2Node_CallDelegate extends K2Node_BaseMCDelegate { 
	static Load(ResourceName: string): K2Node_CallDelegate;
	static Find(Outer: UObject, ResourceName: string): K2Node_CallDelegate;
	static GetDefaultObject(): K2Node_CallDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallDelegate;
	static C(Other: UObject | any): K2Node_CallDelegate;
}

declare class K2Node_CallFunctionOnMember extends K2Node_CallFunction { 
	MemberVariableToCallOn: MemberReference;
	static Load(ResourceName: string): K2Node_CallFunctionOnMember;
	static Find(Outer: UObject, ResourceName: string): K2Node_CallFunctionOnMember;
	static GetDefaultObject(): K2Node_CallFunctionOnMember;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallFunctionOnMember;
	static C(Other: UObject | any): K2Node_CallFunctionOnMember;
}

declare class K2Node_CallMaterialParameterCollectionFunction extends K2Node_CallFunction { 
	static Load(ResourceName: string): K2Node_CallMaterialParameterCollectionFunction;
	static Find(Outer: UObject, ResourceName: string): K2Node_CallMaterialParameterCollectionFunction;
	static GetDefaultObject(): K2Node_CallMaterialParameterCollectionFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallMaterialParameterCollectionFunction;
	static C(Other: UObject | any): K2Node_CallMaterialParameterCollectionFunction;
}

declare class K2Node_CallParentFunction extends K2Node_CallFunction { 
	static Load(ResourceName: string): K2Node_CallParentFunction;
	static Find(Outer: UObject, ResourceName: string): K2Node_CallParentFunction;
	static GetDefaultObject(): K2Node_CallParentFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallParentFunction;
	static C(Other: UObject | any): K2Node_CallParentFunction;
}

declare class K2Node_CastByteToEnum extends K2Node { 
	Enum: Enum;
	bSafe: boolean;
	static Load(ResourceName: string): K2Node_CastByteToEnum;
	static Find(Outer: UObject, ResourceName: string): K2Node_CastByteToEnum;
	static GetDefaultObject(): K2Node_CastByteToEnum;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CastByteToEnum;
	static C(Other: UObject | any): K2Node_CastByteToEnum;
}

declare class K2Node_DynamicCast extends K2Node { 
	TargetType: UnrealEngineClass;
	bIsPureCast: boolean;
	static Load(ResourceName: string): K2Node_DynamicCast;
	static Find(Outer: UObject, ResourceName: string): K2Node_DynamicCast;
	static GetDefaultObject(): K2Node_DynamicCast;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DynamicCast;
	static C(Other: UObject | any): K2Node_DynamicCast;
}

declare class K2Node_ClassDynamicCast extends K2Node_DynamicCast { 
	static Load(ResourceName: string): K2Node_ClassDynamicCast;
	static Find(Outer: UObject, ResourceName: string): K2Node_ClassDynamicCast;
	static GetDefaultObject(): K2Node_ClassDynamicCast;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ClassDynamicCast;
	static C(Other: UObject | any): K2Node_ClassDynamicCast;
}

declare class K2Node_ClearDelegate extends K2Node_BaseMCDelegate { 
	static Load(ResourceName: string): K2Node_ClearDelegate;
	static Find(Outer: UObject, ResourceName: string): K2Node_ClearDelegate;
	static GetDefaultObject(): K2Node_ClearDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ClearDelegate;
	static C(Other: UObject | any): K2Node_ClearDelegate;
}

declare class K2Node_CommutativeAssociativeBinaryOperator extends K2Node_CallFunction { 
	NumAdditionalInputs: number;
	static Load(ResourceName: string): K2Node_CommutativeAssociativeBinaryOperator;
	static Find(Outer: UObject, ResourceName: string): K2Node_CommutativeAssociativeBinaryOperator;
	static GetDefaultObject(): K2Node_CommutativeAssociativeBinaryOperator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CommutativeAssociativeBinaryOperator;
	static C(Other: UObject | any): K2Node_CommutativeAssociativeBinaryOperator;
}

declare class K2Node_ComponentBoundEvent extends K2Node_Event { 
	DelegatePropertyName: string;
	DelegateOwnerClass: UnrealEngineClass;
	ComponentPropertyName: string;
	static Load(ResourceName: string): K2Node_ComponentBoundEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_ComponentBoundEvent;
	static GetDefaultObject(): K2Node_ComponentBoundEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ComponentBoundEvent;
	static C(Other: UObject | any): K2Node_ComponentBoundEvent;
}

declare class K2Node_Tunnel extends K2Node_EditablePinBase { 
	OutputSourceNode: K2Node_Tunnel;
	InputSinkNode: K2Node_Tunnel;
	bCanHaveInputs: boolean;
	bCanHaveOutputs: boolean;
	MetaData: KismetUserDeclaredFunctionMetadata;
	static Load(ResourceName: string): K2Node_Tunnel;
	static Find(Outer: UObject, ResourceName: string): K2Node_Tunnel;
	static GetDefaultObject(): K2Node_Tunnel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Tunnel;
	static C(Other: UObject | any): K2Node_Tunnel;
}

declare class K2Node_Composite extends K2Node_Tunnel { 
	BoundGraph: EdGraph;
	static Load(ResourceName: string): K2Node_Composite;
	static Find(Outer: UObject, ResourceName: string): K2Node_Composite;
	static GetDefaultObject(): K2Node_Composite;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Composite;
	static C(Other: UObject | any): K2Node_Composite;
}

declare class K2Node_ConvertAsset extends K2Node { 
	static Load(ResourceName: string): K2Node_ConvertAsset;
	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertAsset;
	static GetDefaultObject(): K2Node_ConvertAsset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertAsset;
	static C(Other: UObject | any): K2Node_ConvertAsset;
}

declare class K2Node_Copy extends K2Node { 
	static Load(ResourceName: string): K2Node_Copy;
	static Find(Outer: UObject, ResourceName: string): K2Node_Copy;
	static GetDefaultObject(): K2Node_Copy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Copy;
	static C(Other: UObject | any): K2Node_Copy;
}

declare class K2Node_CreateDelegate extends K2Node { 
	SelectedFunctionName: string;
	SelectedFunctionGuid: Guid;
	static Load(ResourceName: string): K2Node_CreateDelegate;
	static Find(Outer: UObject, ResourceName: string): K2Node_CreateDelegate;
	static GetDefaultObject(): K2Node_CreateDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CreateDelegate;
	static C(Other: UObject | any): K2Node_CreateDelegate;
}

declare class K2Node_DeadClass extends K2Node { 
	static Load(ResourceName: string): K2Node_DeadClass;
	static Find(Outer: UObject, ResourceName: string): K2Node_DeadClass;
	static GetDefaultObject(): K2Node_DeadClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DeadClass;
	static C(Other: UObject | any): K2Node_DeadClass;
}

declare class K2Node_DelegateSet extends K2Node { 
	DelegatePropertyName: string;
	DelegatePropertyClass: UnrealEngineClass;
	static Load(ResourceName: string): K2Node_DelegateSet;
	static Find(Outer: UObject, ResourceName: string): K2Node_DelegateSet;
	static GetDefaultObject(): K2Node_DelegateSet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DelegateSet;
	static C(Other: UObject | any): K2Node_DelegateSet;
}

declare class K2Node_TemporaryVariable extends K2Node { 
	VariableType: EdGraphPinType;
	bIsPersistent: boolean;
	static Load(ResourceName: string): K2Node_TemporaryVariable;
	static Find(Outer: UObject, ResourceName: string): K2Node_TemporaryVariable;
	static GetDefaultObject(): K2Node_TemporaryVariable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TemporaryVariable;
	static C(Other: UObject | any): K2Node_TemporaryVariable;
}

declare class K2Node_DoOnceMultiInput extends K2Node { 
	NumAdditionalInputs: number;
	DataNode: K2Node_TemporaryVariable;
	static Load(ResourceName: string): K2Node_DoOnceMultiInput;
	static Find(Outer: UObject, ResourceName: string): K2Node_DoOnceMultiInput;
	static GetDefaultObject(): K2Node_DoOnceMultiInput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DoOnceMultiInput;
	static C(Other: UObject | any): K2Node_DoOnceMultiInput;
}

declare class K2Node_EaseFunction extends K2Node { 
	EaseFunctionName: string;
	static Load(ResourceName: string): K2Node_EaseFunction;
	static Find(Outer: UObject, ResourceName: string): K2Node_EaseFunction;
	static GetDefaultObject(): K2Node_EaseFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EaseFunction;
	static C(Other: UObject | any): K2Node_EaseFunction;
}

declare class K2Node_EditorPropertyAccessBase extends K2Node_CallFunction { 
	static Load(ResourceName: string): K2Node_EditorPropertyAccessBase;
	static Find(Outer: UObject, ResourceName: string): K2Node_EditorPropertyAccessBase;
	static GetDefaultObject(): K2Node_EditorPropertyAccessBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EditorPropertyAccessBase;
	static C(Other: UObject | any): K2Node_EditorPropertyAccessBase;
}

declare class K2Node_GetEditorProperty extends K2Node_EditorPropertyAccessBase { 
	static Load(ResourceName: string): K2Node_GetEditorProperty;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetEditorProperty;
	static GetDefaultObject(): K2Node_GetEditorProperty;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEditorProperty;
	static C(Other: UObject | any): K2Node_GetEditorProperty;
}

declare class K2Node_SetEditorProperty extends K2Node_EditorPropertyAccessBase { 
	static Load(ResourceName: string): K2Node_SetEditorProperty;
	static Find(Outer: UObject, ResourceName: string): K2Node_SetEditorProperty;
	static GetDefaultObject(): K2Node_SetEditorProperty;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetEditorProperty;
	static C(Other: UObject | any): K2Node_SetEditorProperty;
}

declare class K2Node_EnumEquality extends K2Node { 
	static Load(ResourceName: string): K2Node_EnumEquality;
	static Find(Outer: UObject, ResourceName: string): K2Node_EnumEquality;
	static GetDefaultObject(): K2Node_EnumEquality;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumEquality;
	static C(Other: UObject | any): K2Node_EnumEquality;
}

declare class K2Node_EnumInequality extends K2Node_EnumEquality { 
	static Load(ResourceName: string): K2Node_EnumInequality;
	static Find(Outer: UObject, ResourceName: string): K2Node_EnumInequality;
	static GetDefaultObject(): K2Node_EnumInequality;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumInequality;
	static C(Other: UObject | any): K2Node_EnumInequality;
}

declare class K2Node_EnumLiteral extends K2Node { 
	Enum: Enum;
	static Load(ResourceName: string): K2Node_EnumLiteral;
	static Find(Outer: UObject, ResourceName: string): K2Node_EnumLiteral;
	static GetDefaultObject(): K2Node_EnumLiteral;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumLiteral;
	static C(Other: UObject | any): K2Node_EnumLiteral;
}

declare class K2Node_EventNodeInterface extends Interface { 
	static Load(ResourceName: string): K2Node_EventNodeInterface;
	static Find(Outer: UObject, ResourceName: string): K2Node_EventNodeInterface;
	static GetDefaultObject(): K2Node_EventNodeInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EventNodeInterface;
	static C(Other: UObject | any): K2Node_EventNodeInterface;
}

declare class K2Node_ExecutionSequence extends K2Node { 
	static Load(ResourceName: string): K2Node_ExecutionSequence;
	static Find(Outer: UObject, ResourceName: string): K2Node_ExecutionSequence;
	static GetDefaultObject(): K2Node_ExecutionSequence;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ExecutionSequence;
	static C(Other: UObject | any): K2Node_ExecutionSequence;
}

declare class K2Node_ExternalGraphInterface extends Interface { 
	static Load(ResourceName: string): K2Node_ExternalGraphInterface;
	static Find(Outer: UObject, ResourceName: string): K2Node_ExternalGraphInterface;
	static GetDefaultObject(): K2Node_ExternalGraphInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ExternalGraphInterface;
	static C(Other: UObject | any): K2Node_ExternalGraphInterface;
}

declare class K2Node_ForEachElementInEnum extends K2Node { 
	Enum: Enum;
	static Load(ResourceName: string): K2Node_ForEachElementInEnum;
	static Find(Outer: UObject, ResourceName: string): K2Node_ForEachElementInEnum;
	static GetDefaultObject(): K2Node_ForEachElementInEnum;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ForEachElementInEnum;
	static C(Other: UObject | any): K2Node_ForEachElementInEnum;
}

declare class K2Node_FormatText extends K2Node { 
	PinNames: string[];
	static Load(ResourceName: string): K2Node_FormatText;
	static Find(Outer: UObject, ResourceName: string): K2Node_FormatText;
	static GetDefaultObject(): K2Node_FormatText;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FormatText;
	static C(Other: UObject | any): K2Node_FormatText;
}

declare class K2Node_FunctionTerminator extends K2Node_EditablePinBase { 
	FunctionReference: MemberReference;
	SignatureClass: UnrealEngineClass;
	SignatureName: string;
	static Load(ResourceName: string): K2Node_FunctionTerminator;
	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionTerminator;
	static GetDefaultObject(): K2Node_FunctionTerminator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionTerminator;
	static C(Other: UObject | any): K2Node_FunctionTerminator;
}

declare class K2Node_FunctionEntry extends K2Node_FunctionTerminator { 
	CustomGeneratedFunctionName: string;
	MetaData: KismetUserDeclaredFunctionMetadata;
	LocalVariables: BPVariableDescription[];
	bEnforceConstCorrectness: boolean;
	ExtraFlags: number;
	static Load(ResourceName: string): K2Node_FunctionEntry;
	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionEntry;
	static GetDefaultObject(): K2Node_FunctionEntry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionEntry;
	static C(Other: UObject | any): K2Node_FunctionEntry;
}

declare class K2Node_FunctionResult extends K2Node_FunctionTerminator { 
	static Load(ResourceName: string): K2Node_FunctionResult;
	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionResult;
	static GetDefaultObject(): K2Node_FunctionResult;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionResult;
	static C(Other: UObject | any): K2Node_FunctionResult;
}

declare class K2Node_GenericCreateObject extends K2Node_ConstructObjectFromClass { 
	static Load(ResourceName: string): K2Node_GenericCreateObject;
	static Find(Outer: UObject, ResourceName: string): K2Node_GenericCreateObject;
	static GetDefaultObject(): K2Node_GenericCreateObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GenericCreateObject;
	static C(Other: UObject | any): K2Node_GenericCreateObject;
}

declare class K2Node_GetArrayItem extends K2Node { 
	bReturnByRefDesired: boolean;
	static Load(ResourceName: string): K2Node_GetArrayItem;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetArrayItem;
	static GetDefaultObject(): K2Node_GetArrayItem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetArrayItem;
	static C(Other: UObject | any): K2Node_GetArrayItem;
}

declare class K2Node_GetClassDefaults extends K2Node { 
	BlueprintSubscribedTo: Blueprint;
	ShowPinForProperties: OptionalPinFromProperty[];
	bExcludeObjectContainers: boolean;
	bExcludeObjectArrays: boolean;
	static Load(ResourceName: string): K2Node_GetClassDefaults;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetClassDefaults;
	static GetDefaultObject(): K2Node_GetClassDefaults;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetClassDefaults;
	static C(Other: UObject | any): K2Node_GetClassDefaults;
}

declare class K2Node_GetDataTableRow extends K2Node { 
	static Load(ResourceName: string): K2Node_GetDataTableRow;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetDataTableRow;
	static GetDefaultObject(): K2Node_GetDataTableRow;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetDataTableRow;
	static C(Other: UObject | any): K2Node_GetDataTableRow;
}

declare class K2Node_GetEnumeratorName extends K2Node { 
	static Load(ResourceName: string): K2Node_GetEnumeratorName;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetEnumeratorName;
	static GetDefaultObject(): K2Node_GetEnumeratorName;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEnumeratorName;
	static C(Other: UObject | any): K2Node_GetEnumeratorName;
}

declare class K2Node_GetEnumeratorNameAsString extends K2Node_GetEnumeratorName { 
	static Load(ResourceName: string): K2Node_GetEnumeratorNameAsString;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetEnumeratorNameAsString;
	static GetDefaultObject(): K2Node_GetEnumeratorNameAsString;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEnumeratorNameAsString;
	static C(Other: UObject | any): K2Node_GetEnumeratorNameAsString;
}

declare class K2Node_GetInputAxisKeyValue extends K2Node_CallFunction { 
	InputAxisKey: Key;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	static Load(ResourceName: string): K2Node_GetInputAxisKeyValue;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputAxisKeyValue;
	static GetDefaultObject(): K2Node_GetInputAxisKeyValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputAxisKeyValue;
	static C(Other: UObject | any): K2Node_GetInputAxisKeyValue;
}

declare class K2Node_GetInputAxisValue extends K2Node_CallFunction { 
	InputAxisName: string;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	static Load(ResourceName: string): K2Node_GetInputAxisValue;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputAxisValue;
	static GetDefaultObject(): K2Node_GetInputAxisValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputAxisValue;
	static C(Other: UObject | any): K2Node_GetInputAxisValue;
}

declare class K2Node_GetInputVectorAxisValue extends K2Node_GetInputAxisKeyValue { 
	static Load(ResourceName: string): K2Node_GetInputVectorAxisValue;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputVectorAxisValue;
	static GetDefaultObject(): K2Node_GetInputVectorAxisValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputVectorAxisValue;
	static C(Other: UObject | any): K2Node_GetInputVectorAxisValue;
}

declare class K2Node_GetNumEnumEntries extends K2Node { 
	Enum: Enum;
	static Load(ResourceName: string): K2Node_GetNumEnumEntries;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetNumEnumEntries;
	static GetDefaultObject(): K2Node_GetNumEnumEntries;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetNumEnumEntries;
	static C(Other: UObject | any): K2Node_GetNumEnumEntries;
}

declare class K2Node_GetSubsystem extends K2Node { 
	CustomClass: UnrealEngineClass;
	static Load(ResourceName: string): K2Node_GetSubsystem;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetSubsystem;
	static GetDefaultObject(): K2Node_GetSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetSubsystem;
	static C(Other: UObject | any): K2Node_GetSubsystem;
}

declare class K2Node_GetSubsystemFromPC extends K2Node_GetSubsystem { 
	static Load(ResourceName: string): K2Node_GetSubsystemFromPC;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetSubsystemFromPC;
	static GetDefaultObject(): K2Node_GetSubsystemFromPC;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetSubsystemFromPC;
	static C(Other: UObject | any): K2Node_GetSubsystemFromPC;
}

declare class K2Node_GetEngineSubsystem extends K2Node_GetSubsystem { 
	static Load(ResourceName: string): K2Node_GetEngineSubsystem;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetEngineSubsystem;
	static GetDefaultObject(): K2Node_GetEngineSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEngineSubsystem;
	static C(Other: UObject | any): K2Node_GetEngineSubsystem;
}

declare class K2Node_GetEditorSubsystem extends K2Node_GetSubsystem { 
	static Load(ResourceName: string): K2Node_GetEditorSubsystem;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetEditorSubsystem;
	static GetDefaultObject(): K2Node_GetEditorSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEditorSubsystem;
	static C(Other: UObject | any): K2Node_GetEditorSubsystem;
}

declare class K2Node_IfThenElse extends K2Node { 
	static Load(ResourceName: string): K2Node_IfThenElse;
	static Find(Outer: UObject, ResourceName: string): K2Node_IfThenElse;
	static GetDefaultObject(): K2Node_IfThenElse;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_IfThenElse;
	static C(Other: UObject | any): K2Node_IfThenElse;
}

declare class K2Node_InputAction extends K2Node { 
	InputActionName: string;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	static Load(ResourceName: string): K2Node_InputAction;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputAction;
	static GetDefaultObject(): K2Node_InputAction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAction;
	static C(Other: UObject | any): K2Node_InputAction;
}

declare class K2Node_InputActionEvent extends K2Node_Event { 
	InputActionName: string;
	InputKeyEvent: EInputEvent;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	static Load(ResourceName: string): K2Node_InputActionEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputActionEvent;
	static GetDefaultObject(): K2Node_InputActionEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputActionEvent;
	static C(Other: UObject | any): K2Node_InputActionEvent;
}

declare class K2Node_InputAxisEvent extends K2Node_Event { 
	InputAxisName: string;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	static Load(ResourceName: string): K2Node_InputAxisEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputAxisEvent;
	static GetDefaultObject(): K2Node_InputAxisEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAxisEvent;
	static C(Other: UObject | any): K2Node_InputAxisEvent;
}

declare class K2Node_InputAxisKeyEvent extends K2Node_Event { 
	AxisKey: Key;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	static Load(ResourceName: string): K2Node_InputAxisKeyEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputAxisKeyEvent;
	static GetDefaultObject(): K2Node_InputAxisKeyEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAxisKeyEvent;
	static C(Other: UObject | any): K2Node_InputAxisKeyEvent;
}

declare class K2Node_InputKey extends K2Node { 
	InputKey: Key;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	bControl: boolean;
	bAlt: boolean;
	bShift: boolean;
	bCommand: boolean;
	static Load(ResourceName: string): K2Node_InputKey;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputKey;
	static GetDefaultObject(): K2Node_InputKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputKey;
	static C(Other: UObject | any): K2Node_InputKey;
}

declare class K2Node_InputKeyEvent extends K2Node_Event { 
	InputChord: InputChord;
	InputKeyEvent: EInputEvent;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	static Load(ResourceName: string): K2Node_InputKeyEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputKeyEvent;
	static GetDefaultObject(): K2Node_InputKeyEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputKeyEvent;
	static C(Other: UObject | any): K2Node_InputKeyEvent;
}

declare class K2Node_InputTouch extends K2Node { 
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	static Load(ResourceName: string): K2Node_InputTouch;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputTouch;
	static GetDefaultObject(): K2Node_InputTouch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputTouch;
	static C(Other: UObject | any): K2Node_InputTouch;
}

declare class K2Node_InputTouchEvent extends K2Node_Event { 
	InputKeyEvent: EInputEvent;
	bConsumeInput: boolean;
	bExecuteWhenPaused: boolean;
	bOverrideParentBinding: boolean;
	static Load(ResourceName: string): K2Node_InputTouchEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputTouchEvent;
	static GetDefaultObject(): K2Node_InputTouchEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputTouchEvent;
	static C(Other: UObject | any): K2Node_InputTouchEvent;
}

declare class K2Node_InputVectorAxisEvent extends K2Node_InputAxisKeyEvent { 
	static Load(ResourceName: string): K2Node_InputVectorAxisEvent;
	static Find(Outer: UObject, ResourceName: string): K2Node_InputVectorAxisEvent;
	static GetDefaultObject(): K2Node_InputVectorAxisEvent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputVectorAxisEvent;
	static C(Other: UObject | any): K2Node_InputVectorAxisEvent;
}

declare class K2Node_Knot extends K2Node { 
	static Load(ResourceName: string): K2Node_Knot;
	static Find(Outer: UObject, ResourceName: string): K2Node_Knot;
	static GetDefaultObject(): K2Node_Knot;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Knot;
	static C(Other: UObject | any): K2Node_Knot;
}

declare class K2Node_Literal extends K2Node { 
	ObjectRef: UObject;
	static Load(ResourceName: string): K2Node_Literal;
	static Find(Outer: UObject, ResourceName: string): K2Node_Literal;
	static GetDefaultObject(): K2Node_Literal;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Literal;
	static C(Other: UObject | any): K2Node_Literal;
}

declare class K2Node_LoadAsset extends K2Node { 
	static Load(ResourceName: string): K2Node_LoadAsset;
	static Find(Outer: UObject, ResourceName: string): K2Node_LoadAsset;
	static GetDefaultObject(): K2Node_LoadAsset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LoadAsset;
	static C(Other: UObject | any): K2Node_LoadAsset;
}

declare class K2Node_LoadAssetClass extends K2Node_LoadAsset { 
	static Load(ResourceName: string): K2Node_LoadAssetClass;
	static Find(Outer: UObject, ResourceName: string): K2Node_LoadAssetClass;
	static GetDefaultObject(): K2Node_LoadAssetClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LoadAssetClass;
	static C(Other: UObject | any): K2Node_LoadAssetClass;
}

declare class K2Node_LocalVariable extends K2Node_TemporaryVariable { 
	CustomVariableName: string;
	VariableTooltip: string;
	static Load(ResourceName: string): K2Node_LocalVariable;
	static Find(Outer: UObject, ResourceName: string): K2Node_LocalVariable;
	static GetDefaultObject(): K2Node_LocalVariable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LocalVariable;
	static C(Other: UObject | any): K2Node_LocalVariable;
}

declare class GraphReference { 
	MacroGraph: EdGraph;
	GraphBlueprint: Blueprint;
	GraphGuid: Guid;
	clone() : GraphReference;
	static C(Other: UObject | any): GraphReference;
}

declare class K2Node_MacroInstance extends K2Node_Tunnel { 
	MacroGraph: EdGraph;
	MacroGraphReference: GraphReference;
	ResolvedWildcardType: EdGraphPinType;
	static Load(ResourceName: string): K2Node_MacroInstance;
	static Find(Outer: UObject, ResourceName: string): K2Node_MacroInstance;
	static GetDefaultObject(): K2Node_MacroInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MacroInstance;
	static C(Other: UObject | any): K2Node_MacroInstance;
}

declare class K2Node_MakeContainer extends K2Node { 
	NumInputs: number;
	static Load(ResourceName: string): K2Node_MakeContainer;
	static Find(Outer: UObject, ResourceName: string): K2Node_MakeContainer;
	static GetDefaultObject(): K2Node_MakeContainer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeContainer;
	static C(Other: UObject | any): K2Node_MakeContainer;
}

declare class K2Node_MakeArray extends K2Node_MakeContainer { 
	static Load(ResourceName: string): K2Node_MakeArray;
	static Find(Outer: UObject, ResourceName: string): K2Node_MakeArray;
	static GetDefaultObject(): K2Node_MakeArray;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeArray;
	static C(Other: UObject | any): K2Node_MakeArray;
}

declare class K2Node_MakeMap extends K2Node_MakeContainer { 
	static Load(ResourceName: string): K2Node_MakeMap;
	static Find(Outer: UObject, ResourceName: string): K2Node_MakeMap;
	static GetDefaultObject(): K2Node_MakeMap;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeMap;
	static C(Other: UObject | any): K2Node_MakeMap;
}

declare class K2Node_MakeSet extends K2Node_MakeContainer { 
	static Load(ResourceName: string): K2Node_MakeSet;
	static Find(Outer: UObject, ResourceName: string): K2Node_MakeSet;
	static GetDefaultObject(): K2Node_MakeSet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeSet;
	static C(Other: UObject | any): K2Node_MakeSet;
}

declare class K2Node_StructMemberSet extends K2Node_StructOperation { 
	ShowPinForProperties: OptionalPinFromProperty[];
	static Load(ResourceName: string): K2Node_StructMemberSet;
	static Find(Outer: UObject, ResourceName: string): K2Node_StructMemberSet;
	static GetDefaultObject(): K2Node_StructMemberSet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructMemberSet;
	static C(Other: UObject | any): K2Node_StructMemberSet;
}

declare class K2Node_MakeStruct extends K2Node_StructMemberSet { 
	bMadeAfterOverridePinRemoval: boolean;
	static Load(ResourceName: string): K2Node_MakeStruct;
	static Find(Outer: UObject, ResourceName: string): K2Node_MakeStruct;
	static GetDefaultObject(): K2Node_MakeStruct;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeStruct;
	static C(Other: UObject | any): K2Node_MakeStruct;
}

declare class K2Node_MakeVariable extends K2Node { 
	VariableType: BPVariableDescription;
	static Load(ResourceName: string): K2Node_MakeVariable;
	static Find(Outer: UObject, ResourceName: string): K2Node_MakeVariable;
	static GetDefaultObject(): K2Node_MakeVariable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeVariable;
	static C(Other: UObject | any): K2Node_MakeVariable;
}

declare class K2Node_MathExpression extends K2Node_Composite { 
	Expression: string;
	bMadeAfterRotChange: boolean;
	static Load(ResourceName: string): K2Node_MathExpression;
	static Find(Outer: UObject, ResourceName: string): K2Node_MathExpression;
	static GetDefaultObject(): K2Node_MathExpression;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MathExpression;
	static C(Other: UObject | any): K2Node_MathExpression;
}

declare class K2Node_Message extends K2Node_CallFunction { 
	static Load(ResourceName: string): K2Node_Message;
	static Find(Outer: UObject, ResourceName: string): K2Node_Message;
	static GetDefaultObject(): K2Node_Message;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Message;
	static C(Other: UObject | any): K2Node_Message;
}

declare class K2Node_MultiGate extends K2Node_ExecutionSequence { 
	DataNode: K2Node_TemporaryVariable;
	static Load(ResourceName: string): K2Node_MultiGate;
	static Find(Outer: UObject, ResourceName: string): K2Node_MultiGate;
	static GetDefaultObject(): K2Node_MultiGate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MultiGate;
	static C(Other: UObject | any): K2Node_MultiGate;
}

declare class K2Node_PromotableOperator extends K2Node_CallFunction { 
	NumAdditionalInputs: number;
	static Load(ResourceName: string): K2Node_PromotableOperator;
	static Find(Outer: UObject, ResourceName: string): K2Node_PromotableOperator;
	static GetDefaultObject(): K2Node_PromotableOperator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_PromotableOperator;
	static C(Other: UObject | any): K2Node_PromotableOperator;
}

declare class K2Node_PureAssignmentStatement extends K2Node { 
	static Load(ResourceName: string): K2Node_PureAssignmentStatement;
	static Find(Outer: UObject, ResourceName: string): K2Node_PureAssignmentStatement;
	static GetDefaultObject(): K2Node_PureAssignmentStatement;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_PureAssignmentStatement;
	static C(Other: UObject | any): K2Node_PureAssignmentStatement;
}

declare class K2Node_RemoveDelegate extends K2Node_BaseMCDelegate { 
	static Load(ResourceName: string): K2Node_RemoveDelegate;
	static Find(Outer: UObject, ResourceName: string): K2Node_RemoveDelegate;
	static GetDefaultObject(): K2Node_RemoveDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_RemoveDelegate;
	static C(Other: UObject | any): K2Node_RemoveDelegate;
}

declare class K2Node_Select extends K2Node { 
	NumOptionPins: number;
	IndexPinType: EdGraphPinType;
	Enum: Enum;
	EnumEntries: string[];
	EnumEntryFriendlyNames: string[];
	bReconstructNode: boolean;
	static Load(ResourceName: string): K2Node_Select;
	static Find(Outer: UObject, ResourceName: string): K2Node_Select;
	static GetDefaultObject(): K2Node_Select;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Select;
	static C(Other: UObject | any): K2Node_Select;
}

declare class K2Node_Self extends K2Node { 
	static Load(ResourceName: string): K2Node_Self;
	static Find(Outer: UObject, ResourceName: string): K2Node_Self;
	static GetDefaultObject(): K2Node_Self;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Self;
	static C(Other: UObject | any): K2Node_Self;
}

declare class K2Node_SetFieldsInStruct extends K2Node_MakeStruct { 
	static Load(ResourceName: string): K2Node_SetFieldsInStruct;
	static Find(Outer: UObject, ResourceName: string): K2Node_SetFieldsInStruct;
	static GetDefaultObject(): K2Node_SetFieldsInStruct;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetFieldsInStruct;
	static C(Other: UObject | any): K2Node_SetFieldsInStruct;
}

declare class K2Node_SetVariableOnPersistentFrame extends K2Node { 
	static Load(ResourceName: string): K2Node_SetVariableOnPersistentFrame;
	static Find(Outer: UObject, ResourceName: string): K2Node_SetVariableOnPersistentFrame;
	static GetDefaultObject(): K2Node_SetVariableOnPersistentFrame;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetVariableOnPersistentFrame;
	static C(Other: UObject | any): K2Node_SetVariableOnPersistentFrame;
}

declare class K2Node_SpawnActor extends K2Node { 
	static Load(ResourceName: string): K2Node_SpawnActor;
	static Find(Outer: UObject, ResourceName: string): K2Node_SpawnActor;
	static GetDefaultObject(): K2Node_SpawnActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SpawnActor;
	static C(Other: UObject | any): K2Node_SpawnActor;
}

declare class K2Node_SpawnActorFromClass extends K2Node_ConstructObjectFromClass { 
	static Load(ResourceName: string): K2Node_SpawnActorFromClass;
	static Find(Outer: UObject, ResourceName: string): K2Node_SpawnActorFromClass;
	static GetDefaultObject(): K2Node_SpawnActorFromClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SpawnActorFromClass;
	static C(Other: UObject | any): K2Node_SpawnActorFromClass;
}

declare class K2Node_Switch extends K2Node { 
	bHasDefaultPin: boolean;
	FunctionName: string;
	FunctionClass: UnrealEngineClass;
	static Load(ResourceName: string): K2Node_Switch;
	static Find(Outer: UObject, ResourceName: string): K2Node_Switch;
	static GetDefaultObject(): K2Node_Switch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Switch;
	static C(Other: UObject | any): K2Node_Switch;
}

declare class K2Node_SwitchEnum extends K2Node_Switch { 
	Enum: Enum;
	EnumEntries: string[];
	EnumFriendlyNames: string[];
	static Load(ResourceName: string): K2Node_SwitchEnum;
	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchEnum;
	static GetDefaultObject(): K2Node_SwitchEnum;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchEnum;
	static C(Other: UObject | any): K2Node_SwitchEnum;
}

declare class K2Node_SwitchInteger extends K2Node_Switch { 
	StartIndex: number;
	static Load(ResourceName: string): K2Node_SwitchInteger;
	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchInteger;
	static GetDefaultObject(): K2Node_SwitchInteger;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchInteger;
	static C(Other: UObject | any): K2Node_SwitchInteger;
}

declare class K2Node_SwitchName extends K2Node_Switch { 
	PinNames: string[];
	static Load(ResourceName: string): K2Node_SwitchName;
	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchName;
	static GetDefaultObject(): K2Node_SwitchName;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchName;
	static C(Other: UObject | any): K2Node_SwitchName;
}

declare class K2Node_SwitchString extends K2Node_Switch { 
	PinNames: string[];
	bIsCaseSensitive: boolean;
	static Load(ResourceName: string): K2Node_SwitchString;
	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchString;
	static GetDefaultObject(): K2Node_SwitchString;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchString;
	static C(Other: UObject | any): K2Node_SwitchString;
}

declare class K2Node_Timeline extends K2Node { 
	TimelineName: string;
	bAutoPlay: boolean;
	TimelineGuid: Guid;
	bLoop: boolean;
	bReplicated: boolean;
	bIgnoreTimeDilation: boolean;
	static Load(ResourceName: string): K2Node_Timeline;
	static Find(Outer: UObject, ResourceName: string): K2Node_Timeline;
	static GetDefaultObject(): K2Node_Timeline;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Timeline;
	static C(Other: UObject | any): K2Node_Timeline;
}

declare type ETunnelBoundaryType = 'Unknown' | 'EntrySite' | 'InputSite' | 'OutputSite' | 'ETunnelBoundaryType_MAX';
declare var ETunnelBoundaryType : { Unknown:'Unknown',EntrySite:'EntrySite',InputSite:'InputSite',OutputSite:'OutputSite',ETunnelBoundaryType_MAX:'ETunnelBoundaryType_MAX', };
declare class K2Node_TunnelBoundary extends K2Node { 
	BaseName: string;
	TunnelBoundaryType: ETunnelBoundaryType;
	static Load(ResourceName: string): K2Node_TunnelBoundary;
	static Find(Outer: UObject, ResourceName: string): K2Node_TunnelBoundary;
	static GetDefaultObject(): K2Node_TunnelBoundary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TunnelBoundary;
	static C(Other: UObject | any): K2Node_TunnelBoundary;
}

declare class K2Node_VariableGet extends K2Node_Variable { 
	bIsPureGet: boolean;
	static Load(ResourceName: string): K2Node_VariableGet;
	static Find(Outer: UObject, ResourceName: string): K2Node_VariableGet;
	static GetDefaultObject(): K2Node_VariableGet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableGet;
	static C(Other: UObject | any): K2Node_VariableGet;
}

declare class K2Node_VariableSet extends K2Node_Variable { 
	static Load(ResourceName: string): K2Node_VariableSet;
	static Find(Outer: UObject, ResourceName: string): K2Node_VariableSet;
	static GetDefaultObject(): K2Node_VariableSet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableSet;
	static C(Other: UObject | any): K2Node_VariableSet;
}

declare class K2Node_VariableSetRef extends K2Node { 
	static Load(ResourceName: string): K2Node_VariableSetRef;
	static Find(Outer: UObject, ResourceName: string): K2Node_VariableSetRef;
	static GetDefaultObject(): K2Node_VariableSetRef;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableSetRef;
	static C(Other: UObject | any): K2Node_VariableSetRef;
}

declare class NodeDependingOnEnumInterface extends Interface { 
	static Load(ResourceName: string): NodeDependingOnEnumInterface;
	static Find(Outer: UObject, ResourceName: string): NodeDependingOnEnumInterface;
	static GetDefaultObject(): NodeDependingOnEnumInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NodeDependingOnEnumInterface;
	static C(Other: UObject | any): NodeDependingOnEnumInterface;
}

declare class AnimationAttributeBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AnimationAttributeBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): AnimationAttributeBlueprintLibrary;
	static GetDefaultObject(): AnimationAttributeBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationAttributeBlueprintLibrary;
	static GetAttributeKeys(AnimationDataModel: AnimDataModel,AttributeIdentifier: AnimationAttributeIdentifier,OutTimes?: number[],Values?: number[]): {OutTimes: number[], Values: number[], $: boolean};
	static GetAttributeKey(AnimationDataModel: AnimDataModel,AttributeIdentifier: AnimationAttributeIdentifier,Time: number,Value?: number): {Value: number, $: boolean};
	static C(Other: UObject | any): AnimationAttributeBlueprintLibrary;
}

declare class AnimationBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AnimationBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): AnimationBlueprintLibrary;
	static GetDefaultObject(): AnimationBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationBlueprintLibrary;
	static SetRootMotionLockType(AnimationSequence: AnimSequence,RootMotionLockType: ERootMotionRootLock): void;
	static SetRootMotionEnabled(AnimationSequence: AnimSequence,bEnabled: boolean): void;
	static SetRateScale(AnimationSequenceBase: AnimSequenceBase,RateScale: number): void;
	static SetIsRootMotionLockForced(AnimationSequence: AnimSequence,bForced: boolean): void;
	static SetCurveCompressionSettings(AnimationSequence: AnimSequence,CompressionSettings: AnimCurveCompressionSettings): void;
	static SetBoneCompressionSettings(AnimationSequence: AnimSequence,CompressionSettings: AnimBoneCompressionSettings): void;
	static SetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType: EAnimInterpolationType): void;
	static SetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType: EAdditiveBasePoseType): void;
	static SetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType: EAdditiveAnimationType): void;
	static RemoveVirtualBones(AnimationSequence: AnimSequence,VirtualBoneNames: string[]): void;
	static RemoveVirtualBone(AnimationSequence: AnimSequence,VirtualBoneName: string): void;
	static RemoveMetaDataOfClass(AnimationAsset: AnimationAsset,MetaDataClass: UnrealEngineClass): void;
	static RemoveMetaData(AnimationAsset: AnimationAsset,MetaDataObject: AnimMetaData): void;
	static RemoveCurve(AnimationSequence: AnimSequence,CurveName: string,bRemoveNameFromSkeleton: boolean): void;
	static RemoveBoneAnimation(AnimationSequence: AnimSequence,BoneName: string,bIncludeChildren: boolean,bFinalize: boolean): void;
	static RemoveAnimationSyncMarkersByTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): number;
	static RemoveAnimationSyncMarkersByName(AnimationSequence: AnimSequence,MarkerName: string): number;
	static RemoveAnimationNotifyTrack(AnimationSequenceBase: AnimSequenceBase,NotifyTrackName: string): void;
	static RemoveAnimationNotifyEventsByTrack(AnimationSequenceBase: AnimSequenceBase,NotifyTrackName: string): number;
	static RemoveAnimationNotifyEventsByName(AnimationSequenceBase: AnimSequenceBase,NotifyName: string): number;
	static RemoveAllVirtualBones(AnimationSequence: AnimSequence): void;
	static RemoveAllMetaData(AnimationAsset: AnimationAsset): void;
	static RemoveAllCurveData(AnimationSequence: AnimSequence): void;
	static RemoveAllBoneAnimation(AnimationSequence: AnimSequence): void;
	static RemoveAllAnimationSyncMarkers(AnimationSequence: AnimSequence): void;
	static RemoveAllAnimationNotifyTracks(AnimationSequenceBase: AnimSequenceBase): void;
	static IsValidTime(AnimationSequenceBase: AnimSequenceBase,Time: number,IsValid?: boolean): {IsValid: boolean};
	static IsValidRawAnimationTrackName(AnimationSequenceBase: AnimSequenceBase,TrackName: string): boolean;
	static IsValidAnimNotifyTrackName(AnimationSequenceBase: AnimSequenceBase,NotifyTrackName: string): boolean;
	static IsValidAnimationSyncMarkerName(AnimationSequence: AnimSequence,MarkerName: string): boolean;
	static IsRootMotionLockForced(AnimationSequence: AnimSequence): boolean;
	static IsRootMotionEnabled(AnimationSequence: AnimSequence): boolean;
	static GetVectorKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: Vector[]): {Times: number[], Values: Vector[]};
	static GetUniqueMarkerNames(AnimationSequence: AnimSequence,MarkerNames?: string[]): {MarkerNames: string[]};
	static GetTransformationKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: Transform[]): {Times: number[], Values: Transform[]};
	static GetTimeAtFrame(AnimationSequenceBase: AnimSequenceBase,Frame: number,Time?: number): {Time: number};
	static GetSequenceLength(AnimationSequenceBase: AnimSequenceBase,Length?: number): {Length: number};
	static GetRootMotionLockType(AnimationSequence: AnimSequence,LockType?: ERootMotionRootLock): {LockType: ERootMotionRootLock};
	static GetRawTrackScaleData(AnimationSequenceBase: AnimSequenceBase,TrackName: string,ScaleData?: Vector[]): {ScaleData: Vector[]};
	static GetRawTrackRotationData(AnimationSequenceBase: AnimSequenceBase,TrackName: string,RotationData?: Quat[]): {RotationData: Quat[]};
	static GetRawTrackPositionData(AnimationSequenceBase: AnimSequenceBase,TrackName: string,PositionData?: Vector[]): {PositionData: Vector[]};
	static GetRawTrackData(AnimationSequenceBase: AnimSequenceBase,TrackName: string,PositionKeys?: Vector[],RotationKeys?: Quat[],ScalingKeys?: Vector[]): {PositionKeys: Vector[], RotationKeys: Quat[], ScalingKeys: Vector[]};
	static GetRateScale(AnimationSequenceBase: AnimSequenceBase,RateScale?: number): {RateScale: number};
	static GetNumKeys(AnimationSequenceBase: AnimSequenceBase,NumKeys?: number): {NumKeys: number};
	static GetNumFrames(AnimationSequenceBase: AnimSequenceBase,NumFrames?: number): {NumFrames: number};
	static GetNodesOfClass(AnimationBlueprint: AnimBlueprint,NodeClass: UnrealEngineClass,GraphNodes?: AnimGraphNode_Base[],bIncludeChildClasses?: boolean): {GraphNodes: AnimGraphNode_Base[]};
	static GetMontageSlotNames(AnimationMontage: AnimMontage,SlotNames?: string[]): {SlotNames: string[]};
	static GetMetaDataOfClass(AnimationAsset: AnimationAsset,MetaDataClass: UnrealEngineClass,MetaDataOfClass?: AnimMetaData[]): {MetaDataOfClass: AnimMetaData[]};
	static GetMetaData(AnimationAsset: AnimationAsset,MetaData?: AnimMetaData[]): {MetaData: AnimMetaData[]};
	static GetFrameAtTime(AnimationSequenceBase: AnimSequenceBase,Time: number,Frame?: number): {Frame: number};
	static GetFloatKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: number[]): {Times: number[], Values: number[]};
	static GetCurveCompressionSettings(AnimationSequence: AnimSequence,CompressionSettings?: AnimCurveCompressionSettings): {CompressionSettings: AnimCurveCompressionSettings};
	static GetBonePosesForTime(AnimationSequenceBase: AnimSequenceBase,BoneNames: string[],Time: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
	static GetBonePosesForFrame(AnimationSequenceBase: AnimSequenceBase,BoneNames: string[],Frame: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
	static GetBonePoseForTime(AnimationSequenceBase: AnimSequenceBase,BoneName: string,Time: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
	static GetBonePoseForFrame(AnimationSequenceBase: AnimSequenceBase,BoneName: string,Frame: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
	static GetBoneCompressionSettings(AnimationSequence: AnimSequence,CompressionSettings?: AnimBoneCompressionSettings): {CompressionSettings: AnimBoneCompressionSettings};
	static GetAnimNotifyEventTriggerTime(NotifyEvent: AnimNotifyEvent): number;
	static GetAnimNotifyEventDuration(NotifyEvent: AnimNotifyEvent): number;
	static GetAnimationTrackNames(AnimationSequenceBase: AnimSequenceBase,TrackNames?: string[]): {TrackNames: string[]};
	static GetAnimationSyncMarkersForTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,Markers?: AnimSyncMarker[]): {Markers: AnimSyncMarker[]};
	static GetAnimationSyncMarkers(AnimationSequence: AnimSequence,Markers?: AnimSyncMarker[]): {Markers: AnimSyncMarker[]};
	static GetAnimationNotifyTrackNames(AnimationSequenceBase: AnimSequenceBase,TrackNames?: string[]): {TrackNames: string[]};
	static GetAnimationNotifyEventsForTrack(AnimationSequenceBase: AnimSequenceBase,NotifyTrackName: string,Events?: AnimNotifyEvent[]): {Events: AnimNotifyEvent[]};
	static GetAnimationNotifyEvents(AnimationSequenceBase: AnimSequenceBase,NotifyEvents?: AnimNotifyEvent[]): {NotifyEvents: AnimNotifyEvent[]};
	static GetAnimationNotifyEventNames(AnimationSequenceBase: AnimSequenceBase,EventNames?: string[]): {EventNames: string[]};
	static GetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType?: EAnimInterpolationType): {InterpolationType: EAnimInterpolationType};
	static GetAnimationGraphs(AnimationBlueprint: AnimBlueprint,AnimationGraphs?: AnimationGraph[]): {AnimationGraphs: AnimationGraph[]};
	static GetAnimationCurveNames(AnimationSequence: AnimSequence,CurveType: ERawCurveTrackTypes,CurveNames?: string[]): {CurveNames: string[]};
	static GetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType?: EAdditiveBasePoseType): {AdditiveBasePoseType: EAdditiveBasePoseType};
	static GetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType?: EAdditiveAnimationType): {AdditiveAnimationType: EAdditiveAnimationType};
	static FindBonePathToRoot(AnimationSequenceBase: AnimSequenceBase,BoneName: string,BonePath?: string[]): {BonePath: string[]};
	static FinalizeBoneAnimation(AnimationSequence: AnimSequence): void;
	static EvaluateRootBoneTimecodeSubframeAttributeAtTime(AnimationSequenceBase: AnimSequenceBase,EvalTime: number,OutSubframe?: number): {OutSubframe: number, $: boolean};
	static EvaluateRootBoneTimecodeAttributesAtTime(AnimationSequenceBase: AnimSequenceBase,EvalTime: number,OutQualifiedFrameTime?: QualifiedFrameTime): {OutQualifiedFrameTime: QualifiedFrameTime, $: boolean};
	static DoesCurveExist(AnimationSequence: AnimSequence,CurveName: string,CurveType: ERawCurveTrackTypes): boolean;
	static DoesBoneNameExist(AnimationSequence: AnimSequence,BoneName: string,bExists?: boolean): {bExists: boolean};
	static CopyAnimNotifiesFromSequence(SourceAnimationSequenceBase: AnimSequenceBase,DestinationAnimationSequenceBase: AnimSequenceBase,bDeleteExistingNotifies: boolean): void;
	static CopyAnimationCurveNamesToSkeleton(OldSkeleton: Skeleton,NewSkeleton: Skeleton,SequenceBase: AnimSequenceBase,CurveType: ERawCurveTrackTypes): void;
	static ContainsMetaDataOfClass(AnimationAsset: AnimationAsset,MetaDataClass: UnrealEngineClass): boolean;
	static AddVirtualBone(AnimationSequence: AnimSequence,SourceBoneName: string,TargetBoneName: string,VirtualBoneName?: string): {VirtualBoneName: string};
	static AddVectorCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Vectors: Vector[]): void;
	static AddVectorCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Vector: Vector): void;
	static AddTransformationCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Transforms: Transform[]): void;
	static AddTransformationCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Transform: Transform): void;
	static AddNodeAssetOverride(AnimBlueprint: AnimBlueprint,Target: AnimationAsset,Override: AnimationAsset,bPrintAppliedOverrides: boolean): void;
	static AddMetaDataObject(AnimationAsset: AnimationAsset,MetaDataObject: AnimMetaData): void;
	static AddMetaData(AnimationAsset: AnimationAsset,MetaDataClass: UnrealEngineClass,MetaDataInstance?: AnimMetaData): {MetaDataInstance: AnimMetaData};
	static AddFloatCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Values: number[]): void;
	static AddFloatCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Value: number): void;
	static AddCurve(AnimationSequence: AnimSequence,CurveName: string,CurveType: ERawCurveTrackTypes,bMetaDataCurve: boolean): void;
	static AddAnimationSyncMarker(AnimationSequence: AnimSequence,MarkerName: string,Time: number,NotifyTrackName: string): void;
	static AddAnimationNotifyTrack(AnimationSequenceBase: AnimSequenceBase,NotifyTrackName: string,TrackColor: LinearColor): void;
	static AddAnimationNotifyStateEventObject(AnimationSequenceBase: AnimSequenceBase,StartTime: number,Duration: number,NotifyState: AnimNotifyState,NotifyTrackName: string): void;
	static AddAnimationNotifyStateEvent(AnimationSequenceBase: AnimSequenceBase,NotifyTrackName: string,StartTime: number,Duration: number,NotifyStateClass: UnrealEngineClass): AnimNotifyState;
	static AddAnimationNotifyEventObject(AnimationSequenceBase: AnimSequenceBase,StartTime: number,Notify: AnimNotify,NotifyTrackName: string): void;
	static AddAnimationNotifyEvent(AnimationSequenceBase: AnimSequenceBase,NotifyTrackName: string,StartTime: number,NotifyClass: UnrealEngineClass): AnimNotify;
	static C(Other: UObject | any): AnimationBlueprintLibrary;
}

declare class AnimPoseExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AnimPoseExtensions;
	static Find(Outer: UObject, ResourceName: string): AnimPoseExtensions;
	static GetDefaultObject(): AnimPoseExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimPoseExtensions;
	static SetBonePose(Pose?: AnimPose,Transform?: Transform,BoneName?: string,Space?: EAnimPoseSpaces): {Pose: AnimPose};
	static IsValid(Pose: AnimPose): boolean;
	static GetRelativeTransform(Pose: AnimPose,FromBoneName: string,ToBoneName: string,Space: EAnimPoseSpaces): Transform;
	static GetRelativeToRefPoseTransform(Pose: AnimPose,BoneName: string,Space: EAnimPoseSpaces): Transform;
	static GetRefPoseRelativeTransform(Pose: AnimPose,FromBoneName: string,ToBoneName: string,Space: EAnimPoseSpaces): Transform;
	static GetReferencePose(Skeleton: Skeleton,OutPose?: AnimPose): {OutPose: AnimPose};
	static GetRefBonePose(Pose: AnimPose,BoneName: string,Space: EAnimPoseSpaces): Transform;
	static GetCurveWeight(Pose: AnimPose,CurveName: string): number;
	static GetCurveNames(Pose: AnimPose,Curves?: string[]): {Curves: string[]};
	static GetBonePose(Pose: AnimPose,BoneName: string,Space: EAnimPoseSpaces): Transform;
	static GetBoneNames(Pose: AnimPose,Bones?: string[]): {Bones: string[]};
	static GetAnimPoseAtTime(AnimationSequenceBase: AnimSequenceBase,Time: number,EvaluationOptions: AnimPoseEvaluationOptions,Pose?: AnimPose): {Pose: AnimPose};
	static GetAnimPoseAtFrame(AnimationSequenceBase: AnimSequenceBase,FrameIndex: number,EvaluationOptions: AnimPoseEvaluationOptions,Pose?: AnimPose): {Pose: AnimPose};
	static EvaluateAnimationBlueprintWithInputPose(InputPose: AnimPose,TargetSkeletalMesh: SkeletalMesh,AnimationBlueprint: AnimBlueprint,OutPose?: AnimPose): {OutPose: AnimPose};
	static C(Other: UObject | any): AnimPoseExtensions;
}

declare class K2Node_BaseAttributeActionNode extends K2Node_CallFunction { 
	static Load(ResourceName: string): K2Node_BaseAttributeActionNode;
	static Find(Outer: UObject, ResourceName: string): K2Node_BaseAttributeActionNode;
	static GetDefaultObject(): K2Node_BaseAttributeActionNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BaseAttributeActionNode;
	static C(Other: UObject | any): K2Node_BaseAttributeActionNode;
}

declare class K2Node_SetAttributeKeyGeneric extends K2Node_BaseAttributeActionNode { 
	static Load(ResourceName: string): K2Node_SetAttributeKeyGeneric;
	static Find(Outer: UObject, ResourceName: string): K2Node_SetAttributeKeyGeneric;
	static GetDefaultObject(): K2Node_SetAttributeKeyGeneric;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetAttributeKeyGeneric;
	static C(Other: UObject | any): K2Node_SetAttributeKeyGeneric;
}

declare class K2Node_SetAttributeKeysGeneric extends K2Node_BaseAttributeActionNode { 
	static Load(ResourceName: string): K2Node_SetAttributeKeysGeneric;
	static Find(Outer: UObject, ResourceName: string): K2Node_SetAttributeKeysGeneric;
	static GetDefaultObject(): K2Node_SetAttributeKeysGeneric;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetAttributeKeysGeneric;
	static C(Other: UObject | any): K2Node_SetAttributeKeysGeneric;
}

declare class K2Node_GetAttributeKeyGeneric extends K2Node_BaseAttributeActionNode { 
	static Load(ResourceName: string): K2Node_GetAttributeKeyGeneric;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetAttributeKeyGeneric;
	static GetDefaultObject(): K2Node_GetAttributeKeyGeneric;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetAttributeKeyGeneric;
	static C(Other: UObject | any): K2Node_GetAttributeKeyGeneric;
}

declare class K2Node_GetAttributeKeysGeneric extends K2Node_BaseAttributeActionNode { 
	static Load(ResourceName: string): K2Node_GetAttributeKeysGeneric;
	static Find(Outer: UObject, ResourceName: string): K2Node_GetAttributeKeysGeneric;
	static GetDefaultObject(): K2Node_GetAttributeKeysGeneric;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetAttributeKeysGeneric;
	static C(Other: UObject | any): K2Node_GetAttributeKeysGeneric;
}

declare type EAnimExecutionContextConversionResult = 'Succeeded' | 'Failed' | 'EAnimExecutionContextConversionResult_MAX';
declare var EAnimExecutionContextConversionResult : { Succeeded:'Succeeded',Failed:'Failed',EAnimExecutionContextConversionResult_MAX:'EAnimExecutionContextConversionResult_MAX', };
declare class AnimComponentSpacePoseContext extends AnimExecutionContext { 
	clone() : AnimComponentSpacePoseContext;
	static C(Other: UObject | any): AnimComponentSpacePoseContext;
}

declare class AnimInitializationContext extends AnimExecutionContext { 
	clone() : AnimInitializationContext;
	static C(Other: UObject | any): AnimInitializationContext;
}

declare class AnimPoseContext extends AnimExecutionContext { 
	clone() : AnimPoseContext;
	static C(Other: UObject | any): AnimPoseContext;
}

declare class AnimExecutionContext { 
	clone() : AnimExecutionContext;
	static C(Other: UObject | any): AnimExecutionContext;
	ConvertToComponentSpacePoseContext(Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimComponentSpacePoseContext};
	ConvertToInitializationContext(Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimInitializationContext};
	ConvertToPoseContext(Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimPoseContext};
	ConvertToUpdateContext(Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimUpdateContext};
	GetAnimInstance(): AnimInstance;
	static ConvertToComponentSpacePoseContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimComponentSpacePoseContext};
	static ConvertToInitializationContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimInitializationContext};
	static ConvertToPoseContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimPoseContext};
	static ConvertToUpdateContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimUpdateContext};
	static GetAnimInstance(Context: AnimExecutionContext): AnimInstance;
}

declare class AnimUpdateContext extends AnimExecutionContext { 
	clone() : AnimUpdateContext;
	static C(Other: UObject | any): AnimUpdateContext;
	SetSequenceWithInertialBlending(SequencePlayer: SequencePlayerReference,Sequence: AnimSequenceBase,BlendTime: number): SequencePlayerReference;
	AdvanceTime(SequenceEvaluator: SequenceEvaluatorReference,PlayRate: number): SequenceEvaluatorReference;
	SetSequenceWithInertialBlending(SequenceEvaluator: SequenceEvaluatorReference,Sequence: AnimSequenceBase,BlendTime: number): SequenceEvaluatorReference;
	GetCurrentWeight(): number;
	GetDeltaTime(): number;
	GetRelevantAnimTimeRemaining(UNode: AnimationStateResultReference): number;
	GetRelevantAnimTimeRemainingFraction(UNode: AnimationStateResultReference): number;
	GetState(UNode: AnimationStateMachineReference): string;
	IsStateBlendingIn(UNode: AnimationStateResultReference): boolean;
	IsStateBlendingOut(UNode: AnimationStateResultReference): boolean;
	SetState(UNode: AnimationStateMachineReference,TargetState: string,Duration: number,BlendType: ETransitionLogicType,BlendProfile: BlendProfile,AlphaBlendOption: EAlphaBlendOption,CustomBlendCurve: CurveFloat): void;
	SetBlendMask(LayeredBoneBlend: LayeredBoneBlendReference,PoseIndex: number,BlendMaskName: string): LayeredBoneBlendReference;
	SetBlendSpaceWithInertialBlending(BlendSpacePlayer: BlendSpacePlayerReference,BlendSpace: BlendSpace,BlendTime: number): BlendSpacePlayerReference;
	static SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext,SequencePlayer: SequencePlayerReference,Sequence: AnimSequenceBase,BlendTime: number): SequencePlayerReference;
	static AdvanceTime(UpdateContext: AnimUpdateContext,SequenceEvaluator: SequenceEvaluatorReference,PlayRate: number): SequenceEvaluatorReference;
	static SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext,SequenceEvaluator: SequenceEvaluatorReference,Sequence: AnimSequenceBase,BlendTime: number): SequenceEvaluatorReference;
	static GetCurrentWeight(Context: AnimUpdateContext): number;
	static GetDeltaTime(Context: AnimUpdateContext): number;
	static GetRelevantAnimTimeRemaining(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): number;
	static GetRelevantAnimTimeRemainingFraction(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): number;
	static GetState(UpdateContext: AnimUpdateContext,UNode: AnimationStateMachineReference): string;
	static IsStateBlendingIn(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): boolean;
	static IsStateBlendingOut(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): boolean;
	static SetState(UpdateContext: AnimUpdateContext,UNode: AnimationStateMachineReference,TargetState: string,Duration: number,BlendType: ETransitionLogicType,BlendProfile: BlendProfile,AlphaBlendOption: EAlphaBlendOption,CustomBlendCurve: CurveFloat): void;
	static SetBlendMask(UpdateContext: AnimUpdateContext,LayeredBoneBlend: LayeredBoneBlendReference,PoseIndex: number,BlendMaskName: string): LayeredBoneBlendReference;
	static SetBlendSpaceWithInertialBlending(UpdateContext: AnimUpdateContext,BlendSpacePlayer: BlendSpacePlayerReference,BlendSpace: BlendSpace,BlendTime: number): BlendSpacePlayerReference;
}

declare class BlendSpacePlayerLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): BlendSpacePlayerLibrary;
	static Find(Outer: UObject, ResourceName: string): BlendSpacePlayerLibrary;
	static GetDefaultObject(): BlendSpacePlayerLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendSpacePlayerLibrary;
	static ShouldResetPlayTimeWhenBlendSpaceChanges(BlendSpacePlayer: BlendSpacePlayerReference): boolean;
	static SetResetPlayTimeWhenBlendSpaceChanges(BlendSpacePlayer: BlendSpacePlayerReference,bReset: boolean): BlendSpacePlayerReference;
	static SetPlayRate(BlendSpacePlayer: BlendSpacePlayerReference,PlayRate: number): BlendSpacePlayerReference;
	static SetLoop(BlendSpacePlayer: BlendSpacePlayerReference,bLoop: boolean): BlendSpacePlayerReference;
	static SetBlendSpaceWithInertialBlending(UpdateContext: AnimUpdateContext,BlendSpacePlayer: BlendSpacePlayerReference,BlendSpace: BlendSpace,BlendTime: number): BlendSpacePlayerReference;
	static SetBlendSpace(BlendSpacePlayer: BlendSpacePlayerReference,BlendSpace: BlendSpace): BlendSpacePlayerReference;
	static GetStartPosition(BlendSpacePlayer: BlendSpacePlayerReference): number;
	static GetPosition(BlendSpacePlayer: BlendSpacePlayerReference): Vector;
	static GetPlayRate(BlendSpacePlayer: BlendSpacePlayerReference): number;
	static GetLoop(BlendSpacePlayer: BlendSpacePlayerReference): boolean;
	static GetBlendSpace(BlendSpacePlayer: BlendSpacePlayerReference): BlendSpace;
	static ConvertToBlendSpacePlayerPure(UNode: AnimNodeReference,BlendSpacePlayer?: BlendSpacePlayerReference,Result?: boolean): {BlendSpacePlayer: BlendSpacePlayerReference, Result: boolean};
	static ConvertToBlendSpacePlayer(UNode: AnimNodeReference,Result?: EAnimNodeReferenceConversionResult): {Result: EAnimNodeReferenceConversionResult, $: BlendSpacePlayerReference};
	static C(Other: UObject | any): BlendSpacePlayerLibrary;
}

declare class LayeredBoneBlendLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): LayeredBoneBlendLibrary;
	static Find(Outer: UObject, ResourceName: string): LayeredBoneBlendLibrary;
	static GetDefaultObject(): LayeredBoneBlendLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LayeredBoneBlendLibrary;
	static SetBlendMask(UpdateContext: AnimUpdateContext,LayeredBoneBlend: LayeredBoneBlendReference,PoseIndex: number,BlendMaskName: string): LayeredBoneBlendReference;
	static GetNumPoses(LayeredBoneBlend: LayeredBoneBlendReference): number;
	static ConvertToLayeredBoneBlend(UNode: AnimNodeReference,Result?: EAnimNodeReferenceConversionResult): {Result: EAnimNodeReferenceConversionResult, $: LayeredBoneBlendReference};
	static ConvertToLayeredBlendPerBonePure(UNode: AnimNodeReference,LayeredBoneBlend?: LayeredBoneBlendReference,Result?: boolean): {LayeredBoneBlend: LayeredBoneBlendReference, Result: boolean};
	static C(Other: UObject | any): LayeredBoneBlendLibrary;
}

declare class AnimationStateMachineLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AnimationStateMachineLibrary;
	static Find(Outer: UObject, ResourceName: string): AnimationStateMachineLibrary;
	static GetDefaultObject(): AnimationStateMachineLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateMachineLibrary;
	static SetState(UpdateContext: AnimUpdateContext,UNode: AnimationStateMachineReference,TargetState: string,Duration: number,BlendType: ETransitionLogicType,BlendProfile: BlendProfile,AlphaBlendOption: EAlphaBlendOption,CustomBlendCurve: CurveFloat): void;
	static IsStateBlendingOut(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): boolean;
	static IsStateBlendingIn(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): boolean;
	static GetState(UpdateContext: AnimUpdateContext,UNode: AnimationStateMachineReference): string;
	static GetRelevantAnimTimeRemainingFraction(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): number;
	static GetRelevantAnimTimeRemaining(UpdateContext: AnimUpdateContext,UNode: AnimationStateResultReference): number;
	static ConvertToAnimationStateResultPure(UNode: AnimNodeReference,AnimationState?: AnimationStateResultReference,Result?: boolean): {AnimationState: AnimationStateResultReference, Result: boolean};
	static ConvertToAnimationStateResult(UNode: AnimNodeReference,AnimationState?: AnimationStateResultReference,Result?: EAnimNodeReferenceConversionResult): {AnimationState: AnimationStateResultReference, Result: EAnimNodeReferenceConversionResult};
	static ConvertToAnimationStateMachinePure(UNode: AnimNodeReference,AnimationState?: AnimationStateMachineReference,Result?: boolean): {AnimationState: AnimationStateMachineReference, Result: boolean};
	static ConvertToAnimationStateMachine(UNode: AnimNodeReference,AnimationState?: AnimationStateMachineReference,Result?: EAnimNodeReferenceConversionResult): {AnimationState: AnimationStateMachineReference, Result: EAnimNodeReferenceConversionResult};
	static C(Other: UObject | any): AnimationStateMachineLibrary;
}

declare class AnimExecutionContextLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AnimExecutionContextLibrary;
	static Find(Outer: UObject, ResourceName: string): AnimExecutionContextLibrary;
	static GetDefaultObject(): AnimExecutionContextLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimExecutionContextLibrary;
	Prototype_ThreadSafeAnimUpdateCall(Context: AnimUpdateContext,UNode: AnimNodeReference): void;
	Prototype_ThreadSafeAnimNodeCall(Context: AnimExecutionContext,UNode: AnimNodeReference): void;
	static GetDeltaTime(Context: AnimUpdateContext): number;
	static GetCurrentWeight(Context: AnimUpdateContext): number;
	static GetAnimNodeReference(Instance: AnimInstance,Index: number): AnimNodeReference;
	static GetAnimInstance(Context: AnimExecutionContext): AnimInstance;
	static ConvertToUpdateContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimUpdateContext};
	static ConvertToPoseContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimPoseContext};
	static ConvertToInitializationContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimInitializationContext};
	static ConvertToComponentSpacePoseContext(Context: AnimExecutionContext,Result?: EAnimExecutionContextConversionResult): {Result: EAnimExecutionContextConversionResult, $: AnimComponentSpacePoseContext};
	static C(Other: UObject | any): AnimExecutionContextLibrary;
}

declare class AnimNotify_PlayMontageNotify extends AnimNotify { 
	NotifyName: string;
	static Load(ResourceName: string): AnimNotify_PlayMontageNotify;
	static Find(Outer: UObject, ResourceName: string): AnimNotify_PlayMontageNotify;
	static GetDefaultObject(): AnimNotify_PlayMontageNotify;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimNotify_PlayMontageNotify;
	static C(Other: UObject | any): AnimNotify_PlayMontageNotify;
}

declare class AnimNotify_PlayMontageNotifyWindow extends AnimNotifyState { 
	NotifyName: string;
	static Load(ResourceName: string): AnimNotify_PlayMontageNotifyWindow;
	static Find(Outer: UObject, ResourceName: string): AnimNotify_PlayMontageNotifyWindow;
	static GetDefaultObject(): AnimNotify_PlayMontageNotifyWindow;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimNotify_PlayMontageNotifyWindow;
	static C(Other: UObject | any): AnimNotify_PlayMontageNotifyWindow;
}

declare class AnimSequencerInstance extends AnimInstance { 
	static Load(ResourceName: string): AnimSequencerInstance;
	static Find(Outer: UObject, ResourceName: string): AnimSequencerInstance;
	static GetDefaultObject(): AnimSequencerInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSequencerInstance;
	static C(Other: UObject | any): AnimSequencerInstance;
}

declare class PositionHistory { 
	Positions: Vector[];
	Range: number;
	clone() : PositionHistory;
	static C(Other: UObject | any): PositionHistory;
}

declare class KismetAnimationLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): KismetAnimationLibrary;
	static Find(Outer: UObject, ResourceName: string): KismetAnimationLibrary;
	static GetDefaultObject(): KismetAnimationLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetAnimationLibrary;
	static K2_TwoBoneIK(RootPos: Vector,JointPos: Vector,EndPos: Vector,JointTarget: Vector,Effector: Vector,OutJointPos?: Vector,OutEndPos?: Vector,bAllowStretching?: boolean,StartStretchRatio?: number,MaxStretchScale?: number): {OutJointPos: Vector, OutEndPos: Vector};
	static K2_StartProfilingTimer(): void;
	static K2_MakePerlinNoiseVectorAndRemap(X: number,Y: number,Z: number,RangeOutMinX: number,RangeOutMaxX: number,RangeOutMinY: number,RangeOutMaxY: number,RangeOutMinZ: number,RangeOutMaxZ: number): Vector;
	static K2_MakePerlinNoiseAndRemap(Value: number,RangeOutMin: number,RangeOutMax: number): number;
	static K2_LookAt(CurrentTransform: Transform,TargetPosition: Vector,LookAtVector: Vector,bUseUpVector: boolean,UpVector: Vector,ClampConeInDegree: number): Transform;
	static K2_EndProfilingTimer(bLog: boolean,LogPrefix: string): number;
	static K2_DistanceBetweenTwoSocketsAndMapRange(Component: SkeletalMeshComponent,SocketOrBoneNameA: string,SocketSpaceA: ERelativeTransformSpace,SocketOrBoneNameB: string,SocketSpaceB: ERelativeTransformSpace,bRemapRange: boolean,InRangeMin: number,InRangeMax: number,OutRangeMin: number,OutRangeMax: number): number;
	static K2_DirectionBetweenSockets(Component: SkeletalMeshComponent,SocketOrBoneNameFrom: string,SocketOrBoneNameTo: string): Vector;
	static K2_CalculateVelocityFromSockets(DeltaSeconds: number,Component: SkeletalMeshComponent,SocketOrBoneName: string,ReferenceSocketOrBone: string,SocketSpace: ERelativeTransformSpace,OffsetInBoneSpace: Vector,History?: PositionHistory,NumberOfSamples?: number,VelocityMin?: number,VelocityMax?: number,EasingType?: EEasingFuncType,CustomCurve?: RuntimeFloatCurve): {History: PositionHistory, $: number};
	static K2_CalculateVelocityFromPositionHistory(DeltaSeconds: number,Position: Vector,History?: PositionHistory,NumberOfSamples?: number,VelocityMin?: number,VelocityMax?: number): {History: PositionHistory, $: number};
	static CalculateDirection(Velocity: Vector,BaseRotation: Rotator): number;
	static C(Other: UObject | any): KismetAnimationLibrary;
}

declare class LinkedAnimGraphLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): LinkedAnimGraphLibrary;
	static Find(Outer: UObject, ResourceName: string): LinkedAnimGraphLibrary;
	static GetDefaultObject(): LinkedAnimGraphLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LinkedAnimGraphLibrary;
	static HasLinkedAnimInstance(UNode: LinkedAnimGraphReference): boolean;
	static GetLinkedAnimInstance(UNode: LinkedAnimGraphReference): AnimInstance;
	static ConvertToLinkedAnimGraphPure(UNode: AnimNodeReference,LinkedAnimGraph?: LinkedAnimGraphReference,Result?: boolean): {LinkedAnimGraph: LinkedAnimGraphReference, Result: boolean};
	static ConvertToLinkedAnimGraph(UNode: AnimNodeReference,Result?: EAnimNodeReferenceConversionResult): {Result: EAnimNodeReferenceConversionResult, $: LinkedAnimGraphReference};
	static C(Other: UObject | any): LinkedAnimGraphLibrary;
}

declare class BranchingPointNotifyPayload { 
	clone() : BranchingPointNotifyPayload;
	static C(Other: UObject | any): BranchingPointNotifyPayload;
}

declare class PlayMontageCallbackProxy extends UObject { 
	OnCompleted: UnrealEngineMulticastDelegate<(NotifyName: string) => void>;
	OnBlendOut: UnrealEngineMulticastDelegate<(NotifyName: string) => void>;
	OnInterrupted: UnrealEngineMulticastDelegate<(NotifyName: string) => void>;
	OnNotifyBegin: UnrealEngineMulticastDelegate<(NotifyName: string) => void>;
	OnNotifyEnd: UnrealEngineMulticastDelegate<(NotifyName: string) => void>;
	static Load(ResourceName: string): PlayMontageCallbackProxy;
	static Find(Outer: UObject, ResourceName: string): PlayMontageCallbackProxy;
	static GetDefaultObject(): PlayMontageCallbackProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayMontageCallbackProxy;
	OnNotifyEndReceived(NotifyName: string,BranchingPointNotifyPayload: BranchingPointNotifyPayload): void;
	OnNotifyBeginReceived(NotifyName: string,BranchingPointNotifyPayload: BranchingPointNotifyPayload): void;
	OnMontageEnded(Montage: AnimMontage,bInterrupted: boolean): void;
	OnMontageBlendingOut(Montage: AnimMontage,bInterrupted: boolean): void;
	static CreateProxyObjectForPlayMontage(InSkeletalMeshComponent: SkeletalMeshComponent,MontageToPlay: AnimMontage,PlayRate: number,StartingPosition: number,StartingSection: string): PlayMontageCallbackProxy;
	static C(Other: UObject | any): PlayMontageCallbackProxy;
}

declare class SequenceEvaluatorLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SequenceEvaluatorLibrary;
	static Find(Outer: UObject, ResourceName: string): SequenceEvaluatorLibrary;
	static GetDefaultObject(): SequenceEvaluatorLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequenceEvaluatorLibrary;
	static SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext,SequenceEvaluator: SequenceEvaluatorReference,Sequence: AnimSequenceBase,BlendTime: number): SequenceEvaluatorReference;
	static SetSequence(SequenceEvaluator: SequenceEvaluatorReference,Sequence: AnimSequenceBase): SequenceEvaluatorReference;
	static SetExplicitTime(SequenceEvaluator: SequenceEvaluatorReference,Time: number): SequenceEvaluatorReference;
	static GetSequence(SequenceEvaluator: SequenceEvaluatorReference): AnimSequenceBase;
	static GetAccumulatedTime(SequenceEvaluator: SequenceEvaluatorReference): number;
	static ConvertToSequenceEvaluatorPure(UNode: AnimNodeReference,SequenceEvaluator?: SequenceEvaluatorReference,Result?: boolean): {SequenceEvaluator: SequenceEvaluatorReference, Result: boolean};
	static ConvertToSequenceEvaluator(UNode: AnimNodeReference,Result?: EAnimNodeReferenceConversionResult): {Result: EAnimNodeReferenceConversionResult, $: SequenceEvaluatorReference};
	static AdvanceTime(UpdateContext: AnimUpdateContext,SequenceEvaluator: SequenceEvaluatorReference,PlayRate: number): SequenceEvaluatorReference;
	static C(Other: UObject | any): SequenceEvaluatorLibrary;
}

declare class SequencePlayerLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SequencePlayerLibrary;
	static Find(Outer: UObject, ResourceName: string): SequencePlayerLibrary;
	static GetDefaultObject(): SequencePlayerLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencePlayerLibrary;
	static SetStartPosition(SequencePlayer: SequencePlayerReference,StartPosition: number): SequencePlayerReference;
	static SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext,SequencePlayer: SequencePlayerReference,Sequence: AnimSequenceBase,BlendTime: number): SequencePlayerReference;
	static SetSequence(SequencePlayer: SequencePlayerReference,Sequence: AnimSequenceBase): SequencePlayerReference;
	static SetPlayRate(SequencePlayer: SequencePlayerReference,PlayRate: number): SequencePlayerReference;
	static SetAccumulatedTime(SequencePlayer: SequencePlayerReference,Time: number): SequencePlayerReference;
	static GetStartPosition(SequencePlayer: SequencePlayerReference): number;
	static GetSequencePure(SequencePlayer: SequencePlayerReference): AnimSequenceBase;
	static GetSequence(SequencePlayer: SequencePlayerReference,SequenceBase?: AnimSequenceBase): {SequenceBase: AnimSequenceBase, $: SequencePlayerReference};
	static GetPlayRate(SequencePlayer: SequencePlayerReference): number;
	static GetLoopAnimation(SequencePlayer: SequencePlayerReference): boolean;
	static GetAccumulatedTime(SequencePlayer: SequencePlayerReference): number;
	static ConvertToSequencePlayerPure(UNode: AnimNodeReference,SequencePlayer?: SequencePlayerReference,Result?: boolean): {SequencePlayer: SequencePlayerReference, Result: boolean};
	static ConvertToSequencePlayer(UNode: AnimNodeReference,Result?: EAnimNodeReferenceConversionResult): {Result: EAnimNodeReferenceConversionResult, $: SequencePlayerReference};
	static ComputePlayRateFromDuration(SequencePlayer: SequencePlayerReference,Duration: number): number;
	static C(Other: UObject | any): SequencePlayerLibrary;
}

declare class SequencerAnimationSupport extends Interface { 
	static Load(ResourceName: string): SequencerAnimationSupport;
	static Find(Outer: UObject, ResourceName: string): SequencerAnimationSupport;
	static GetDefaultObject(): SequencerAnimationSupport;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencerAnimationSupport;
	static C(Other: UObject | any): SequencerAnimationSupport;
}

declare class SkeletalControlLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SkeletalControlLibrary;
	static Find(Outer: UObject, ResourceName: string): SkeletalControlLibrary;
	static GetDefaultObject(): SkeletalControlLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalControlLibrary;
	static SetAlpha(SkeletalControl: SkeletalControlReference,Alpha: number): SkeletalControlReference;
	static GetAlpha(SkeletalControl: SkeletalControlReference): number;
	static ConvertToSkeletalControlPure(UNode: AnimNodeReference,SkeletalControl?: SkeletalControlReference,Result?: boolean): {SkeletalControl: SkeletalControlReference, Result: boolean};
	static ConvertToSkeletalControl(UNode: AnimNodeReference,Result?: EAnimNodeReferenceConversionResult): {Result: EAnimNodeReferenceConversionResult, $: SkeletalControlReference};
	static C(Other: UObject | any): SkeletalControlLibrary;
}

declare class MovieSceneTransformOrigin extends Interface { 
	static Load(ResourceName: string): MovieSceneTransformOrigin;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTransformOrigin;
	static GetDefaultObject(): MovieSceneTransformOrigin;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTransformOrigin;
	BP_GetTransformOrigin(): Transform;
	static C(Other: UObject | any): MovieSceneTransformOrigin;
}

declare class MovieSceneBaseCacheSection extends MovieSceneSection { 
	static Load(ResourceName: string): MovieSceneBaseCacheSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBaseCacheSection;
	static GetDefaultObject(): MovieSceneBaseCacheSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBaseCacheSection;
	static C(Other: UObject | any): MovieSceneBaseCacheSection;
}

declare class PerlinNoiseParams { 
	Frequency: number;
	Amplitude: number;
	Offset: number;
	clone() : PerlinNoiseParams;
	static C(Other: UObject | any): PerlinNoiseParams;
}

declare class MovieSceneDoublePerlinNoiseChannel extends MovieSceneChannel { 
	PerlinNoiseParams: PerlinNoiseParams;
	clone() : MovieSceneDoublePerlinNoiseChannel;
	static C(Other: UObject | any): MovieSceneDoublePerlinNoiseChannel;
}

declare class MovieSceneDoublePerlinNoiseChannelContainer extends MovieSceneChannelOverrideContainer { 
	PerlinNoiseChannel: MovieSceneDoublePerlinNoiseChannel;
	static Load(ResourceName: string): MovieSceneDoublePerlinNoiseChannelContainer;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoublePerlinNoiseChannelContainer;
	static GetDefaultObject(): MovieSceneDoublePerlinNoiseChannelContainer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoublePerlinNoiseChannelContainer;
	static C(Other: UObject | any): MovieSceneDoublePerlinNoiseChannelContainer;
}

declare class MovieSceneFloatPerlinNoiseChannel extends MovieSceneChannel { 
	PerlinNoiseParams: PerlinNoiseParams;
	clone() : MovieSceneFloatPerlinNoiseChannel;
	static C(Other: UObject | any): MovieSceneFloatPerlinNoiseChannel;
}

declare class MovieSceneFloatPerlinNoiseChannelContainer extends MovieSceneChannelOverrideContainer { 
	PerlinNoiseChannel: MovieSceneFloatPerlinNoiseChannel;
	static Load(ResourceName: string): MovieSceneFloatPerlinNoiseChannelContainer;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatPerlinNoiseChannelContainer;
	static GetDefaultObject(): MovieSceneFloatPerlinNoiseChannelContainer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatPerlinNoiseChannelContainer;
	static C(Other: UObject | any): MovieSceneFloatPerlinNoiseChannelContainer;
}

declare class MovieSceneInterrogatedPropertyInstantiatorSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneInterrogatedPropertyInstantiatorSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneInterrogatedPropertyInstantiatorSystem;
	static GetDefaultObject(): MovieSceneInterrogatedPropertyInstantiatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneInterrogatedPropertyInstantiatorSystem;
	static C(Other: UObject | any): MovieSceneInterrogatedPropertyInstantiatorSystem;
}

declare class MovieSceneCameraShakeEvaluator extends UObject { 
	static Load(ResourceName: string): MovieSceneCameraShakeEvaluator;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraShakeEvaluator;
	static GetDefaultObject(): MovieSceneCameraShakeEvaluator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraShakeEvaluator;
	static C(Other: UObject | any): MovieSceneCameraShakeEvaluator;
}

declare class MovieScene3DConstraintSection extends MovieSceneSection { 
	ConstraintId: Guid;
	ConstraintBindingID: MovieSceneObjectBindingID;
	static Load(ResourceName: string): MovieScene3DConstraintSection;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DConstraintSection;
	static GetDefaultObject(): MovieScene3DConstraintSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DConstraintSection;
	SetConstraintBindingID(InConstraintBindingID: MovieSceneObjectBindingID): void;
	GetConstraintBindingID(): MovieSceneObjectBindingID;
	static C(Other: UObject | any): MovieScene3DConstraintSection;
}

declare class MovieScene3DAttachSection extends MovieScene3DConstraintSection { 
	AttachSocketName: string;
	AttachComponentName: string;
	bFullRevertOnDetach: boolean;
	ReAttachOnDetach: SceneComponent;
	AttachmentLocationRule: EAttachmentRule;
	AttachmentRotationRule: EAttachmentRule;
	AttachmentScaleRule: EAttachmentRule;
	DetachmentLocationRule: EDetachmentRule;
	DetachmentRotationRule: EDetachmentRule;
	DetachmentScaleRule: EDetachmentRule;
	static Load(ResourceName: string): MovieScene3DAttachSection;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DAttachSection;
	static GetDefaultObject(): MovieScene3DAttachSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DAttachSection;
	static C(Other: UObject | any): MovieScene3DAttachSection;
}

declare type MovieScene3DPathSection_Axis = 'X' | 'Y' | 'Z' | 'NEG_X' | 'NEG_Y' | 'NEG_Z' | 'MovieScene3DPathSection_MAX';
declare var MovieScene3DPathSection_Axis : { X:'X',Y:'Y',Z:'Z',NEG_X:'NEG_X',NEG_Y:'NEG_Y',NEG_Z:'NEG_Z',MovieScene3DPathSection_MAX:'MovieScene3DPathSection_MAX', };
declare class MovieScene3DPathSection extends MovieScene3DConstraintSection { 
	TimingCurve: MovieSceneFloatChannel;
	FrontAxisEnum: MovieScene3DPathSection_Axis;
	UpAxisEnum: MovieScene3DPathSection_Axis;
	bFollow: boolean;
	bReverse: boolean;
	bForceUpright: boolean;
	static Load(ResourceName: string): MovieScene3DPathSection;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DPathSection;
	static GetDefaultObject(): MovieScene3DPathSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DPathSection;
	static C(Other: UObject | any): MovieScene3DPathSection;
}

declare class MovieSceneActorReferenceKey { 
	UObject: MovieSceneObjectBindingID;
	ComponentName: string;
	SocketName: string;
	clone() : MovieSceneActorReferenceKey;
	static C(Other: UObject | any): MovieSceneActorReferenceKey;
}

declare class MovieSceneActorReferenceData extends MovieSceneChannel { 
	KeyTimes: FrameNumber[];
	DefaultValue: MovieSceneActorReferenceKey;
	KeyValues: MovieSceneActorReferenceKey[];
	clone() : MovieSceneActorReferenceData;
	static C(Other: UObject | any): MovieSceneActorReferenceData;
}

declare class IntegralKey { 
	Time: number;
	Value: number;
	clone() : IntegralKey;
	static C(Other: UObject | any): IntegralKey;
}

declare class IntegralCurve extends IndexedCurve { 
	Keys: IntegralKey[];
	DefaultValue: number;
	bUseDefaultValueBeforeFirstKey: boolean;
	clone() : IntegralCurve;
	static C(Other: UObject | any): IntegralCurve;
}

declare class MovieSceneActorReferenceSection extends MovieSceneSection { 
	ActorReferenceData: MovieSceneActorReferenceData;
	ActorGuidIndexCurve: IntegralCurve;
	ActorGuidStrings: string[];
	static Load(ResourceName: string): MovieSceneActorReferenceSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneActorReferenceSection;
	static GetDefaultObject(): MovieSceneActorReferenceSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneActorReferenceSection;
	static C(Other: UObject | any): MovieSceneActorReferenceSection;
}

declare class MovieSceneStringChannel extends MovieSceneChannel { 
	Times: FrameNumber[];
	Values: string[];
	DefaultValue: string;
	bHasDefaultValue: boolean;
	clone() : MovieSceneStringChannel;
	static C(Other: UObject | any): MovieSceneStringChannel;
}

declare class MovieSceneAudioTriggerChannel extends MovieSceneChannel { 
	Times: FrameNumber[];
	Values: boolean[];
	clone() : MovieSceneAudioTriggerChannel;
	static C(Other: UObject | any): MovieSceneAudioTriggerChannel;
}

declare class MovieSceneAudioSection extends MovieSceneSection { 
	Sound: SoundBase;
	StartFrameOffset: FrameNumber;
	StartOffset: number;
	AudioStartTime: number;
	AudioDilationFactor: number;
	AudioVolume: number;
	SoundVolume: MovieSceneFloatChannel;
	PitchMultiplier: MovieSceneFloatChannel;
	Inputs_Float: Map<string, MovieSceneFloatChannel>;
	Inputs_String: Map<string, MovieSceneStringChannel>;
	Inputs_Bool: Map<string, MovieSceneBoolChannel>;
	Inputs_Int: Map<string, MovieSceneIntegerChannel>;
	Inputs_Trigger: Map<string, MovieSceneAudioTriggerChannel>;
	AttachActorData: MovieSceneActorReferenceData;
	bLooping: boolean;
	bSuppressSubtitles: boolean;
	bOverrideAttenuation: boolean;
	AttenuationSettings: SoundAttenuation;
	OnQueueSubtitles: UnrealEngineDelegate<(Subtitles: SubtitleCue[], CueDuration: number) => void>;
	OnAudioFinished: UnrealEngineMulticastDelegate<() => void>;
	OnAudioPlaybackPercent: UnrealEngineMulticastDelegate<(PlayingSoundWave: SoundWave, PlaybackPercent: number) => void>;
	static Load(ResourceName: string): MovieSceneAudioSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneAudioSection;
	static GetDefaultObject(): MovieSceneAudioSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneAudioSection;
	SetStartOffset(InStartOffset: FrameNumber): void;
	SetSound(InSound: SoundBase): void;
	GetStartOffset(): FrameNumber;
	GetSound(): SoundBase;
	static C(Other: UObject | any): MovieSceneAudioSection;
}

declare class MovieSceneByteSection extends MovieSceneSection { 
	ByteCurve: MovieSceneByteChannel;
	static Load(ResourceName: string): MovieSceneByteSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneByteSection;
	static GetDefaultObject(): MovieSceneByteSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneByteSection;
	static C(Other: UObject | any): MovieSceneByteSection;
}

declare class MovieSceneCameraCutSection extends MovieSceneSection { 
	bLockPreviousCamera: boolean;
	CameraGuid: Guid;
	CameraBindingID: MovieSceneObjectBindingID;
	InitialCameraCutTransform: Transform;
	bHasInitialCameraCutTransform: boolean;
	ThumbnailReferenceOffset: number;
	static Load(ResourceName: string): MovieSceneCameraCutSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraCutSection;
	static GetDefaultObject(): MovieSceneCameraCutSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraCutSection;
	SetCameraBindingID(InCameraBindingID: MovieSceneObjectBindingID): void;
	GetCameraBindingID(): MovieSceneObjectBindingID;
	static C(Other: UObject | any): MovieSceneCameraCutSection;
}

declare class MovieSceneCameraShakeSectionData { 
	ShakeClass: UnrealEngineClass;
	PlayScale: number;
	PlaySpace: ECameraShakePlaySpace;
	UserDefinedPlaySpace: Rotator;
	clone() : MovieSceneCameraShakeSectionData;
	static C(Other: UObject | any): MovieSceneCameraShakeSectionData;
}

declare class MovieSceneCameraShakeSection extends MovieSceneSection { 
	ShakeData: MovieSceneCameraShakeSectionData;
	ShakeClass: UnrealEngineClass;
	PlayScale: number;
	PlaySpace: ECameraShakePlaySpace;
	UserDefinedPlaySpace: Rotator;
	static Load(ResourceName: string): MovieSceneCameraShakeSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraShakeSection;
	static GetDefaultObject(): MovieSceneCameraShakeSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraShakeSection;
	static C(Other: UObject | any): MovieSceneCameraShakeSection;
}

declare class MovieSceneCameraShakeSourceShakeSection extends MovieSceneSection { 
	ShakeData: MovieSceneCameraShakeSectionData;
	static Load(ResourceName: string): MovieSceneCameraShakeSourceShakeSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraShakeSourceShakeSection;
	static GetDefaultObject(): MovieSceneCameraShakeSourceShakeSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraShakeSourceShakeSection;
	static C(Other: UObject | any): MovieSceneCameraShakeSourceShakeSection;
}

declare class MovieSceneCameraShakeSourceTrigger { 
	ShakeClass: UnrealEngineClass;
	PlayScale: number;
	PlaySpace: ECameraShakePlaySpace;
	UserDefinedPlaySpace: Rotator;
	clone() : MovieSceneCameraShakeSourceTrigger;
	static C(Other: UObject | any): MovieSceneCameraShakeSourceTrigger;
}

declare class MovieSceneCameraShakeSourceTriggerChannel extends MovieSceneChannel { 
	KeyTimes: FrameNumber[];
	KeyValues: MovieSceneCameraShakeSourceTrigger[];
	clone() : MovieSceneCameraShakeSourceTriggerChannel;
	static C(Other: UObject | any): MovieSceneCameraShakeSourceTriggerChannel;
}

declare class MovieSceneCameraShakeSourceTriggerSection extends MovieSceneSection { 
	Channel: MovieSceneCameraShakeSourceTriggerChannel;
	static Load(ResourceName: string): MovieSceneCameraShakeSourceTriggerSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraShakeSourceTriggerSection;
	static GetDefaultObject(): MovieSceneCameraShakeSourceTriggerSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraShakeSourceTriggerSection;
	static C(Other: UObject | any): MovieSceneCameraShakeSourceTriggerSection;
}

declare class MovieSceneCinematicShotSection extends MovieSceneSubSection { 
	ShotDisplayName: string;
	DisplayName: string;
	ThumbnailReferenceOffset: number;
	static Load(ResourceName: string): MovieSceneCinematicShotSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCinematicShotSection;
	static GetDefaultObject(): MovieSceneCinematicShotSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCinematicShotSection;
	SetShotDisplayName(InShotDisplayName: string): void;
	GetShotDisplayName(): string;
	static C(Other: UObject | any): MovieSceneCinematicShotSection;
}

declare class MovieSceneColorSection extends MovieSceneSection { 
	RedCurve: MovieSceneFloatChannel;
	GreenCurve: MovieSceneFloatChannel;
	BlueCurve: MovieSceneFloatChannel;
	AlphaCurve: MovieSceneFloatChannel;
	static Load(ResourceName: string): MovieSceneColorSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneColorSection;
	static GetDefaultObject(): MovieSceneColorSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneColorSection;
	static C(Other: UObject | any): MovieSceneColorSection;
}

declare class MovieSceneConstrainedSection extends Interface { 
	static Load(ResourceName: string): MovieSceneConstrainedSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneConstrainedSection;
	static GetDefaultObject(): MovieSceneConstrainedSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneConstrainedSection;
	static C(Other: UObject | any): MovieSceneConstrainedSection;
}

declare class MovieSceneCVarOverrides { 
	ValuesByCVar: Map<string, string>;
	clone() : MovieSceneCVarOverrides;
	static C(Other: UObject | any): MovieSceneCVarOverrides;
}

declare class MovieSceneCVarSection extends MovieSceneSection { 
	ConsoleVariables: MovieSceneCVarOverrides;
	static Load(ResourceName: string): MovieSceneCVarSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCVarSection;
	static GetDefaultObject(): MovieSceneCVarSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCVarSection;
	SetFromString(InString: string): void;
	GetString(): string;
	static C(Other: UObject | any): MovieSceneCVarSection;
}

declare class MovieSceneDataLayerSection extends MovieSceneSection { 
	DataLayers: ActorDataLayer[];
	DataLayerAssets: DataLayerAsset[];
	DesiredState: EDataLayerRuntimeState;
	PrerollState: EDataLayerRuntimeState;
	bFlushOnUnload: boolean;
	static Load(ResourceName: string): MovieSceneDataLayerSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDataLayerSection;
	static GetDefaultObject(): MovieSceneDataLayerSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDataLayerSection;
	SetPrerollState(InPrerollState: EDataLayerRuntimeState): void;
	SetFlushOnUnload(bFlushOnUnload: boolean): void;
	SetDesiredState(InDesiredState: EDataLayerRuntimeState): void;
	SetDataLayers(InDataLayers: ActorDataLayer[]): void;
	SetDataLayerAssets(InDataLayerAssets: DataLayerAsset[]): void;
	GetPrerollState(): EDataLayerRuntimeState;
	GetFlushOnUnload(): boolean;
	GetDesiredState(): EDataLayerRuntimeState;
	GetDataLayers(): ActorDataLayer[];
	GetDataLayerAssets(): DataLayerAsset[];
	static C(Other: UObject | any): MovieSceneDataLayerSection;
}

declare class MovieSceneDoubleSection extends MovieSceneSection { 
	DoubleCurve: MovieSceneDoubleChannel;
	static Load(ResourceName: string): MovieSceneDoubleSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoubleSection;
	static GetDefaultObject(): MovieSceneDoubleSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoubleSection;
	static C(Other: UObject | any): MovieSceneDoubleSection;
}

declare class MovieSceneEnumSection extends MovieSceneSection { 
	EnumCurve: MovieSceneByteChannel;
	static Load(ResourceName: string): MovieSceneEnumSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEnumSection;
	static GetDefaultObject(): MovieSceneEnumSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEnumSection;
	static C(Other: UObject | any): MovieSceneEnumSection;
}

declare class MovieSceneEventRepeaterSection extends MovieSceneEventSectionBase { 
	Event: MovieSceneEvent;
	static Load(ResourceName: string): MovieSceneEventRepeaterSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEventRepeaterSection;
	static GetDefaultObject(): MovieSceneEventRepeaterSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventRepeaterSection;
	static C(Other: UObject | any): MovieSceneEventRepeaterSection;
}

declare class NameCurveKey { 
	Time: number;
	Value: string;
	clone() : NameCurveKey;
	static C(Other: UObject | any): NameCurveKey;
}

declare class NameCurve extends IndexedCurve { 
	Keys: NameCurveKey[];
	clone() : NameCurve;
	static C(Other: UObject | any): NameCurve;
}

declare class MovieSceneEventParameters { 
	clone() : MovieSceneEventParameters;
	static C(Other: UObject | any): MovieSceneEventParameters;
}

declare class EventPayload { 
	EventName: string;
	Parameters: MovieSceneEventParameters;
	clone() : EventPayload;
	static C(Other: UObject | any): EventPayload;
}

declare class MovieSceneEventSectionData extends MovieSceneChannel { 
	Times: FrameNumber[];
	KeyValues: EventPayload[];
	KeyTimes: number[];
	clone() : MovieSceneEventSectionData;
	static C(Other: UObject | any): MovieSceneEventSectionData;
}

declare class MovieSceneEventSection extends MovieSceneSection { 
	Events: NameCurve;
	EventData: MovieSceneEventSectionData;
	static Load(ResourceName: string): MovieSceneEventSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEventSection;
	static GetDefaultObject(): MovieSceneEventSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventSection;
	static C(Other: UObject | any): MovieSceneEventSection;
}

declare class MovieSceneEventChannel extends MovieSceneChannel { 
	KeyTimes: FrameNumber[];
	KeyValues: MovieSceneEvent[];
	clone() : MovieSceneEventChannel;
	static C(Other: UObject | any): MovieSceneEventChannel;
}

declare class MovieSceneEventTriggerSection extends MovieSceneEventSectionBase { 
	EventChannel: MovieSceneEventChannel;
	static Load(ResourceName: string): MovieSceneEventTriggerSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEventTriggerSection;
	static GetDefaultObject(): MovieSceneEventTriggerSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventTriggerSection;
	static C(Other: UObject | any): MovieSceneEventTriggerSection;
}

declare class MovieSceneFadeSection extends MovieSceneSection { 
	FloatCurve: MovieSceneFloatChannel;
	FadeColor: LinearColor;
	bFadeAudio: boolean;
	static Load(ResourceName: string): MovieSceneFadeSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFadeSection;
	static GetDefaultObject(): MovieSceneFadeSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFadeSection;
	static C(Other: UObject | any): MovieSceneFadeSection;
}

declare class MovieSceneFloatSection extends MovieSceneSection { 
	FloatCurve: MovieSceneFloatChannel;
	OverrideRegistry: MovieSceneSectionChannelOverrideRegistry;
	static Load(ResourceName: string): MovieSceneFloatSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatSection;
	static GetDefaultObject(): MovieSceneFloatSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatSection;
	static C(Other: UObject | any): MovieSceneFloatSection;
}

declare class MovieSceneIntegerSection extends MovieSceneSection { 
	IntegerCurve: MovieSceneIntegerChannel;
	static Load(ResourceName: string): MovieSceneIntegerSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneIntegerSection;
	static GetDefaultObject(): MovieSceneIntegerSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneIntegerSection;
	static C(Other: UObject | any): MovieSceneIntegerSection;
}

declare type ELevelVisibility = 'Visible' | 'Hidden' | 'ELevelVisibility_MAX';
declare var ELevelVisibility : { Visible:'Visible',Hidden:'Hidden',ELevelVisibility_MAX:'ELevelVisibility_MAX', };
declare class MovieSceneLevelVisibilitySection extends MovieSceneSection { 
	Visibility: ELevelVisibility;
	LevelNames: string[];
	static Load(ResourceName: string): MovieSceneLevelVisibilitySection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneLevelVisibilitySection;
	static GetDefaultObject(): MovieSceneLevelVisibilitySection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneLevelVisibilitySection;
	SetVisibility(InVisibility: ELevelVisibility): void;
	SetLevelNames(InLevelNames: string[]): void;
	GetVisibility(): ELevelVisibility;
	GetLevelNames(): string[];
	static C(Other: UObject | any): MovieSceneLevelVisibilitySection;
}

declare class MovieSceneObjectPathChannelKeyValue { 
	SoftPtr: UObject;
	HardPtr: UObject;
	clone() : MovieSceneObjectPathChannelKeyValue;
	static C(Other: UObject | any): MovieSceneObjectPathChannelKeyValue;
}

declare class MovieSceneObjectPathChannel extends MovieSceneChannel { 
	PropertyClass: UnrealEngineClass;
	Times: FrameNumber[];
	Values: MovieSceneObjectPathChannelKeyValue[];
	DefaultValue: MovieSceneObjectPathChannelKeyValue;
	clone() : MovieSceneObjectPathChannel;
	static C(Other: UObject | any): MovieSceneObjectPathChannel;
}

declare class MovieSceneObjectPropertySection extends MovieSceneSection { 
	ObjectChannel: MovieSceneObjectPathChannel;
	static Load(ResourceName: string): MovieSceneObjectPropertySection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneObjectPropertySection;
	static GetDefaultObject(): MovieSceneObjectPropertySection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneObjectPropertySection;
	static C(Other: UObject | any): MovieSceneObjectPropertySection;
}

declare class MovieSceneParameterSectionExtender extends Interface { 
	static Load(ResourceName: string): MovieSceneParameterSectionExtender;
	static Find(Outer: UObject, ResourceName: string): MovieSceneParameterSectionExtender;
	static GetDefaultObject(): MovieSceneParameterSectionExtender;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneParameterSectionExtender;
	static C(Other: UObject | any): MovieSceneParameterSectionExtender;
}

declare class MovieSceneParticleChannel extends MovieSceneByteChannel { 
	clone() : MovieSceneParticleChannel;
	static C(Other: UObject | any): MovieSceneParticleChannel;
}

declare class MovieSceneParticleSection extends MovieSceneSection { 
	ParticleKeys: MovieSceneParticleChannel;
	static Load(ResourceName: string): MovieSceneParticleSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneParticleSection;
	static GetDefaultObject(): MovieSceneParticleSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneParticleSection;
	static C(Other: UObject | any): MovieSceneParticleSection;
}

declare class MovieScenePrimitiveMaterialSection extends MovieSceneSection { 
	MaterialChannel: MovieSceneObjectPathChannel;
	static Load(ResourceName: string): MovieScenePrimitiveMaterialSection;
	static Find(Outer: UObject, ResourceName: string): MovieScenePrimitiveMaterialSection;
	static GetDefaultObject(): MovieScenePrimitiveMaterialSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePrimitiveMaterialSection;
	static C(Other: UObject | any): MovieScenePrimitiveMaterialSection;
}

declare type ESwapRootBone = 'SwapRootBone_Component' | 'SwapRootBone_Actor' | 'SwapRootBone_None' | 'SwapRootBone_MAX';
declare var ESwapRootBone : { SwapRootBone_Component:'SwapRootBone_Component',SwapRootBone_Actor:'SwapRootBone_Actor',SwapRootBone_None:'SwapRootBone_None',SwapRootBone_MAX:'SwapRootBone_MAX', };
declare class MovieSceneSkeletalAnimationParams { 
	Animation: AnimSequenceBase;
	FirstLoopStartFrameOffset: FrameNumber;
	StartFrameOffset: FrameNumber;
	EndFrameOffset: FrameNumber;
	PlayRate: number;
	bReverse: boolean;
	SlotName: string;
	MirrorDataTable: MirrorDataTable;
	Weight: MovieSceneFloatChannel;
	bSkipAnimNotifiers: boolean;
	bForceCustomMode: boolean;
	SwapRootBone: ESwapRootBone;
	StartOffset: number;
	EndOffset: number;
	clone() : MovieSceneSkeletalAnimationParams;
	static C(Other: UObject | any): MovieSceneSkeletalAnimationParams;
}

declare class MovieSceneSkeletalAnimationSection extends MovieSceneSection { 
	Params: MovieSceneSkeletalAnimationParams;
	AnimSequence: AnimSequence;
	Animation: AnimSequenceBase;
	StartOffset: number;
	EndOffset: number;
	PlayRate: number;
	bReverse: boolean;
	SlotName: string;
	StartLocationOffset: Vector;
	StartRotationOffset: Rotator;
	bMatchWithPrevious: boolean;
	MatchedBoneName: string;
	MatchedLocationOffset: Vector;
	MatchedRotationOffset: Rotator;
	bMatchTranslation: boolean;
	bMatchIncludeZHeight: boolean;
	bMatchRotationYaw: boolean;
	bMatchRotationPitch: boolean;
	bMatchRotationRoll: boolean;
	bShowSkeleton: boolean;
	static Load(ResourceName: string): MovieSceneSkeletalAnimationSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSkeletalAnimationSection;
	static GetDefaultObject(): MovieSceneSkeletalAnimationSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSkeletalAnimationSection;
	static C(Other: UObject | any): MovieSceneSkeletalAnimationSection;
}

declare class MovieSceneSlomoSection extends MovieSceneSection { 
	FloatCurve: MovieSceneFloatChannel;
	static Load(ResourceName: string): MovieSceneSlomoSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSlomoSection;
	static GetDefaultObject(): MovieSceneSlomoSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSlomoSection;
	static C(Other: UObject | any): MovieSceneSlomoSection;
}

declare class MovieSceneStringSection extends MovieSceneSection { 
	StringCurve: MovieSceneStringChannel;
	static Load(ResourceName: string): MovieSceneStringSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneStringSection;
	static GetDefaultObject(): MovieSceneStringSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneStringSection;
	static C(Other: UObject | any): MovieSceneStringSection;
}

declare class MovieSceneFloatVectorSection extends MovieSceneSection { 
	Curves: MovieSceneFloatChannel;
	ChannelsUsed: number;
	static Load(ResourceName: string): MovieSceneFloatVectorSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatVectorSection;
	static GetDefaultObject(): MovieSceneFloatVectorSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatVectorSection;
	static C(Other: UObject | any): MovieSceneFloatVectorSection;
}

declare class MovieSceneDoubleVectorSection extends MovieSceneSection { 
	Curves: MovieSceneDoubleChannel;
	ChannelsUsed: number;
	static Load(ResourceName: string): MovieSceneDoubleVectorSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoubleVectorSection;
	static GetDefaultObject(): MovieSceneDoubleVectorSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoubleVectorSection;
	static C(Other: UObject | any): MovieSceneDoubleVectorSection;
}

declare class BoolChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): BoolChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): BoolChannelEvaluatorSystem;
	static GetDefaultObject(): BoolChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoolChannelEvaluatorSystem;
	static C(Other: UObject | any): BoolChannelEvaluatorSystem;
}

declare class ByteChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): ByteChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): ByteChannelEvaluatorSystem;
	static GetDefaultObject(): ByteChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ByteChannelEvaluatorSystem;
	static C(Other: UObject | any): ByteChannelEvaluatorSystem;
}

declare class DoubleChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): DoubleChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): DoubleChannelEvaluatorSystem;
	static GetDefaultObject(): DoubleChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DoubleChannelEvaluatorSystem;
	static C(Other: UObject | any): DoubleChannelEvaluatorSystem;
}

declare class DoublePerlinNoiseChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): DoublePerlinNoiseChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): DoublePerlinNoiseChannelEvaluatorSystem;
	static GetDefaultObject(): DoublePerlinNoiseChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DoublePerlinNoiseChannelEvaluatorSystem;
	static C(Other: UObject | any): DoublePerlinNoiseChannelEvaluatorSystem;
}

declare class FloatChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): FloatChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): FloatChannelEvaluatorSystem;
	static GetDefaultObject(): FloatChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FloatChannelEvaluatorSystem;
	static C(Other: UObject | any): FloatChannelEvaluatorSystem;
}

declare class FloatPerlinNoiseChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): FloatPerlinNoiseChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): FloatPerlinNoiseChannelEvaluatorSystem;
	static GetDefaultObject(): FloatPerlinNoiseChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FloatPerlinNoiseChannelEvaluatorSystem;
	static C(Other: UObject | any): FloatPerlinNoiseChannelEvaluatorSystem;
}

declare class IntegerChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): IntegerChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): IntegerChannelEvaluatorSystem;
	static GetDefaultObject(): IntegerChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IntegerChannelEvaluatorSystem;
	static C(Other: UObject | any): IntegerChannelEvaluatorSystem;
}

declare class MovieScene3DTransformPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieScene3DTransformPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DTransformPropertySystem;
	static GetDefaultObject(): MovieScene3DTransformPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DTransformPropertySystem;
	static C(Other: UObject | any): MovieScene3DTransformPropertySystem;
}

declare class MovieSceneBaseValueEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneBaseValueEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBaseValueEvaluatorSystem;
	static GetDefaultObject(): MovieSceneBaseValueEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBaseValueEvaluatorSystem;
	static C(Other: UObject | any): MovieSceneBaseValueEvaluatorSystem;
}

declare class MovieSceneBoolPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneBoolPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBoolPropertySystem;
	static GetDefaultObject(): MovieSceneBoolPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBoolPropertySystem;
	static C(Other: UObject | any): MovieSceneBoolPropertySystem;
}

declare class MovieSceneBytePropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneBytePropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBytePropertySystem;
	static GetDefaultObject(): MovieSceneBytePropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBytePropertySystem;
	static C(Other: UObject | any): MovieSceneBytePropertySystem;
}

declare class MovieSceneColorPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneColorPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneColorPropertySystem;
	static GetDefaultObject(): MovieSceneColorPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneColorPropertySystem;
	static C(Other: UObject | any): MovieSceneColorPropertySystem;
}

declare class MovieSceneComponentAttachmentInvalidatorSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneComponentAttachmentInvalidatorSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneComponentAttachmentInvalidatorSystem;
	static GetDefaultObject(): MovieSceneComponentAttachmentInvalidatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneComponentAttachmentInvalidatorSystem;
	static C(Other: UObject | any): MovieSceneComponentAttachmentInvalidatorSystem;
}

declare class MovieSceneComponentAttachmentSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneComponentAttachmentSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneComponentAttachmentSystem;
	static GetDefaultObject(): MovieSceneComponentAttachmentSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneComponentAttachmentSystem;
	static C(Other: UObject | any): MovieSceneComponentAttachmentSystem;
}

declare class MovieSceneComponentMaterialSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneComponentMaterialSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneComponentMaterialSystem;
	static GetDefaultObject(): MovieSceneComponentMaterialSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneComponentMaterialSystem;
	static C(Other: UObject | any): MovieSceneComponentMaterialSystem;
}

declare class MovieSceneComponentMobilitySystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneComponentMobilitySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneComponentMobilitySystem;
	static GetDefaultObject(): MovieSceneComponentMobilitySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneComponentMobilitySystem;
	static C(Other: UObject | any): MovieSceneComponentMobilitySystem;
}

declare class MovieSceneComponentTransformSystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneComponentTransformSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneComponentTransformSystem;
	static GetDefaultObject(): MovieSceneComponentTransformSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneComponentTransformSystem;
	static C(Other: UObject | any): MovieSceneComponentTransformSystem;
}

declare class MovieSceneConstraintSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneConstraintSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneConstraintSystem;
	static GetDefaultObject(): MovieSceneConstraintSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneConstraintSystem;
	static C(Other: UObject | any): MovieSceneConstraintSystem;
}

declare class MovieSceneDataLayerSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneDataLayerSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDataLayerSystem;
	static GetDefaultObject(): MovieSceneDataLayerSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDataLayerSystem;
	static C(Other: UObject | any): MovieSceneDataLayerSystem;
}

declare class MovieSceneDeferredComponentMovementSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneDeferredComponentMovementSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDeferredComponentMovementSystem;
	static GetDefaultObject(): MovieSceneDeferredComponentMovementSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDeferredComponentMovementSystem;
	static C(Other: UObject | any): MovieSceneDeferredComponentMovementSystem;
}

declare class MovieSceneDoublePropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneDoublePropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoublePropertySystem;
	static GetDefaultObject(): MovieSceneDoublePropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoublePropertySystem;
	static C(Other: UObject | any): MovieSceneDoublePropertySystem;
}

declare class MovieSceneEnumPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneEnumPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEnumPropertySystem;
	static GetDefaultObject(): MovieSceneEnumPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEnumPropertySystem;
	static C(Other: UObject | any): MovieSceneEnumPropertySystem;
}

declare class MovieSceneEulerTransformPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneEulerTransformPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEulerTransformPropertySystem;
	static GetDefaultObject(): MovieSceneEulerTransformPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEulerTransformPropertySystem;
	static C(Other: UObject | any): MovieSceneEulerTransformPropertySystem;
}

declare class MovieSceneEventSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneEventSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEventSystem;
	static GetDefaultObject(): MovieSceneEventSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventSystem;
	static C(Other: UObject | any): MovieSceneEventSystem;
}

declare class MovieScenePreSpawnEventSystem extends MovieSceneEventSystem { 
	static Load(ResourceName: string): MovieScenePreSpawnEventSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePreSpawnEventSystem;
	static GetDefaultObject(): MovieScenePreSpawnEventSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePreSpawnEventSystem;
	static C(Other: UObject | any): MovieScenePreSpawnEventSystem;
}

declare class MovieScenePostSpawnEventSystem extends MovieSceneEventSystem { 
	static Load(ResourceName: string): MovieScenePostSpawnEventSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePostSpawnEventSystem;
	static GetDefaultObject(): MovieScenePostSpawnEventSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePostSpawnEventSystem;
	static C(Other: UObject | any): MovieScenePostSpawnEventSystem;
}

declare class MovieScenePostEvalEventSystem extends MovieSceneEventSystem { 
	static Load(ResourceName: string): MovieScenePostEvalEventSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePostEvalEventSystem;
	static GetDefaultObject(): MovieScenePostEvalEventSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePostEvalEventSystem;
	static C(Other: UObject | any): MovieScenePostEvalEventSystem;
}

declare class MovieSceneFloatPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneFloatPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatPropertySystem;
	static GetDefaultObject(): MovieSceneFloatPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatPropertySystem;
	static C(Other: UObject | any): MovieSceneFloatPropertySystem;
}

declare class MovieSceneHierarchicalBiasSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneHierarchicalBiasSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneHierarchicalBiasSystem;
	static GetDefaultObject(): MovieSceneHierarchicalBiasSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneHierarchicalBiasSystem;
	static C(Other: UObject | any): MovieSceneHierarchicalBiasSystem;
}

declare class MovieSceneInitialValueSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneInitialValueSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneInitialValueSystem;
	static GetDefaultObject(): MovieSceneInitialValueSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneInitialValueSystem;
	static C(Other: UObject | any): MovieSceneInitialValueSystem;
}

declare class MovieSceneIntegerPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneIntegerPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneIntegerPropertySystem;
	static GetDefaultObject(): MovieSceneIntegerPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneIntegerPropertySystem;
	static C(Other: UObject | any): MovieSceneIntegerPropertySystem;
}

declare class MovieSceneLevelVisibilitySystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneLevelVisibilitySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneLevelVisibilitySystem;
	static GetDefaultObject(): MovieSceneLevelVisibilitySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneLevelVisibilitySystem;
	static C(Other: UObject | any): MovieSceneLevelVisibilitySystem;
}

declare class MovieSceneMaterialParameterCollectionSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneMaterialParameterCollectionSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMaterialParameterCollectionSystem;
	static GetDefaultObject(): MovieSceneMaterialParameterCollectionSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMaterialParameterCollectionSystem;
	static C(Other: UObject | any): MovieSceneMaterialParameterCollectionSystem;
}

declare class MovieSceneBlenderSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneBlenderSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBlenderSystem;
	static GetDefaultObject(): MovieSceneBlenderSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBlenderSystem;
	static C(Other: UObject | any): MovieSceneBlenderSystem;
}

declare class MovieScenePiecewiseDoubleBlenderSystem extends MovieSceneBlenderSystem { 
	static Load(ResourceName: string): MovieScenePiecewiseDoubleBlenderSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePiecewiseDoubleBlenderSystem;
	static GetDefaultObject(): MovieScenePiecewiseDoubleBlenderSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePiecewiseDoubleBlenderSystem;
	static C(Other: UObject | any): MovieScenePiecewiseDoubleBlenderSystem;
}

declare class MovieSceneMaterialParameterSystem extends MovieSceneEntitySystem { 
	DoubleBlenderSystem: MovieScenePiecewiseDoubleBlenderSystem;
	static Load(ResourceName: string): MovieSceneMaterialParameterSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMaterialParameterSystem;
	static GetDefaultObject(): MovieSceneMaterialParameterSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMaterialParameterSystem;
	static C(Other: UObject | any): MovieSceneMaterialParameterSystem;
}

declare class MovieSceneMotionVectorSimulationSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneMotionVectorSimulationSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMotionVectorSimulationSystem;
	static GetDefaultObject(): MovieSceneMotionVectorSimulationSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMotionVectorSimulationSystem;
	static C(Other: UObject | any): MovieSceneMotionVectorSimulationSystem;
}

declare class MovieScenePiecewiseBoolBlenderSystem extends MovieSceneBlenderSystem { 
	static Load(ResourceName: string): MovieScenePiecewiseBoolBlenderSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePiecewiseBoolBlenderSystem;
	static GetDefaultObject(): MovieScenePiecewiseBoolBlenderSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePiecewiseBoolBlenderSystem;
	static C(Other: UObject | any): MovieScenePiecewiseBoolBlenderSystem;
}

declare class MovieScenePiecewiseByteBlenderSystem extends MovieSceneBlenderSystem { 
	static Load(ResourceName: string): MovieScenePiecewiseByteBlenderSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePiecewiseByteBlenderSystem;
	static GetDefaultObject(): MovieScenePiecewiseByteBlenderSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePiecewiseByteBlenderSystem;
	static C(Other: UObject | any): MovieScenePiecewiseByteBlenderSystem;
}

declare class MovieScenePiecewiseEnumBlenderSystem extends MovieSceneBlenderSystem { 
	static Load(ResourceName: string): MovieScenePiecewiseEnumBlenderSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePiecewiseEnumBlenderSystem;
	static GetDefaultObject(): MovieScenePiecewiseEnumBlenderSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePiecewiseEnumBlenderSystem;
	static C(Other: UObject | any): MovieScenePiecewiseEnumBlenderSystem;
}

declare class MovieScenePiecewiseIntegerBlenderSystem extends MovieSceneBlenderSystem { 
	static Load(ResourceName: string): MovieScenePiecewiseIntegerBlenderSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePiecewiseIntegerBlenderSystem;
	static GetDefaultObject(): MovieScenePiecewiseIntegerBlenderSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePiecewiseIntegerBlenderSystem;
	static C(Other: UObject | any): MovieScenePiecewiseIntegerBlenderSystem;
}

declare class MovieSceneAsyncAction_SequencePrediction extends BlueprintAsyncActionBase { 
	Result: UnrealEngineMulticastDelegate<(PredictedTransform: Transform) => void>;
	Failure: UnrealEngineMulticastDelegate<() => void>;
	SequencePlayer: MovieSceneSequencePlayer;
	SceneComponent: SceneComponent;
	static Load(ResourceName: string): MovieSceneAsyncAction_SequencePrediction;
	static Find(Outer: UObject, ResourceName: string): MovieSceneAsyncAction_SequencePrediction;
	static GetDefaultObject(): MovieSceneAsyncAction_SequencePrediction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneAsyncAction_SequencePrediction;
	static PredictWorldTransformAtTime(Player: MovieSceneSequencePlayer,TargetComponent: SceneComponent,TimeInSeconds: number): MovieSceneAsyncAction_SequencePrediction;
	static PredictWorldTransformAtFrame(Player: MovieSceneSequencePlayer,TargetComponent: SceneComponent,FrameTime: FrameTime): MovieSceneAsyncAction_SequencePrediction;
	static PredictLocalTransformAtTime(Player: MovieSceneSequencePlayer,TargetComponent: SceneComponent,TimeInSeconds: number): MovieSceneAsyncAction_SequencePrediction;
	static PredictLocalTransformAtFrame(Player: MovieSceneSequencePlayer,TargetComponent: SceneComponent,FrameTime: FrameTime): MovieSceneAsyncAction_SequencePrediction;
	static C(Other: UObject | any): MovieSceneAsyncAction_SequencePrediction;
}

declare class MovieScenePredictionSystem extends MovieSceneEntitySystem { 
	PendingPredictions: MovieSceneAsyncAction_SequencePrediction[];
	ProcessingPredictions: MovieSceneAsyncAction_SequencePrediction[];
	static Load(ResourceName: string): MovieScenePredictionSystem;
	static Find(Outer: UObject, ResourceName: string): MovieScenePredictionSystem;
	static GetDefaultObject(): MovieScenePredictionSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePredictionSystem;
	static C(Other: UObject | any): MovieScenePredictionSystem;
}

declare class MovieSceneQuaternionInterpolationRotationSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneQuaternionInterpolationRotationSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneQuaternionInterpolationRotationSystem;
	static GetDefaultObject(): MovieSceneQuaternionInterpolationRotationSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneQuaternionInterpolationRotationSystem;
	static C(Other: UObject | any): MovieSceneQuaternionInterpolationRotationSystem;
}

declare class MovieSceneTransformOriginSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneTransformOriginSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTransformOriginSystem;
	static GetDefaultObject(): MovieSceneTransformOriginSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTransformOriginSystem;
	static C(Other: UObject | any): MovieSceneTransformOriginSystem;
}

declare class MovieSceneFloatVectorPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneFloatVectorPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatVectorPropertySystem;
	static GetDefaultObject(): MovieSceneFloatVectorPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatVectorPropertySystem;
	static C(Other: UObject | any): MovieSceneFloatVectorPropertySystem;
}

declare class MovieSceneDoubleVectorPropertySystem extends MovieScenePropertySystem { 
	static Load(ResourceName: string): MovieSceneDoubleVectorPropertySystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoubleVectorPropertySystem;
	static GetDefaultObject(): MovieSceneDoubleVectorPropertySystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoubleVectorPropertySystem;
	static C(Other: UObject | any): MovieSceneDoubleVectorPropertySystem;
}

declare class ObjectPathChannelEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): ObjectPathChannelEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): ObjectPathChannelEvaluatorSystem;
	static GetDefaultObject(): ObjectPathChannelEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ObjectPathChannelEvaluatorSystem;
	static C(Other: UObject | any): ObjectPathChannelEvaluatorSystem;
}

declare class MovieSceneHierarchicalEasingInstantiatorSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneHierarchicalEasingInstantiatorSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneHierarchicalEasingInstantiatorSystem;
	static GetDefaultObject(): MovieSceneHierarchicalEasingInstantiatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneHierarchicalEasingInstantiatorSystem;
	static C(Other: UObject | any): MovieSceneHierarchicalEasingInstantiatorSystem;
}

declare class WeightAndEasingEvaluatorSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): WeightAndEasingEvaluatorSystem;
	static Find(Outer: UObject, ResourceName: string): WeightAndEasingEvaluatorSystem;
	static GetDefaultObject(): WeightAndEasingEvaluatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WeightAndEasingEvaluatorSystem;
	static C(Other: UObject | any): WeightAndEasingEvaluatorSystem;
}

declare class MovieSceneTrackInstanceInput { 
	Section: MovieSceneSection;
	clone() : MovieSceneTrackInstanceInput;
	static C(Other: UObject | any): MovieSceneTrackInstanceInput;
}

declare class MovieSceneTrackInstance extends UObject { 
	AnimatedObject: UObject;
	bIsMasterTrackInstance: boolean;
	PrivateLinker: MovieSceneEntitySystemLinker;
	Inputs: MovieSceneTrackInstanceInput[];
	static Load(ResourceName: string): MovieSceneTrackInstance;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTrackInstance;
	static GetDefaultObject(): MovieSceneTrackInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTrackInstance;
	static C(Other: UObject | any): MovieSceneTrackInstance;
}

declare class MovieSceneCameraCutTrackInstance extends MovieSceneTrackInstance { 
	static Load(ResourceName: string): MovieSceneCameraCutTrackInstance;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraCutTrackInstance;
	static GetDefaultObject(): MovieSceneCameraCutTrackInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraCutTrackInstance;
	static C(Other: UObject | any): MovieSceneCameraCutTrackInstance;
}

declare class MovieSceneCVarTrackInstance extends MovieSceneTrackInstance { 
	static Load(ResourceName: string): MovieSceneCVarTrackInstance;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCVarTrackInstance;
	static GetDefaultObject(): MovieSceneCVarTrackInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCVarTrackInstance;
	static C(Other: UObject | any): MovieSceneCVarTrackInstance;
}

declare class MovieScene3DConstraintTrack extends MovieSceneTrack { 
	ConstraintSections: MovieSceneSection[];
	static Load(ResourceName: string): MovieScene3DConstraintTrack;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DConstraintTrack;
	static GetDefaultObject(): MovieScene3DConstraintTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DConstraintTrack;
	static C(Other: UObject | any): MovieScene3DConstraintTrack;
}

declare class MovieScene3DAttachTrack extends MovieScene3DConstraintTrack { 
	static Load(ResourceName: string): MovieScene3DAttachTrack;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DAttachTrack;
	static GetDefaultObject(): MovieScene3DAttachTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DAttachTrack;
	static C(Other: UObject | any): MovieScene3DAttachTrack;
}

declare class MovieScene3DPathTrack extends MovieScene3DConstraintTrack { 
	static Load(ResourceName: string): MovieScene3DPathTrack;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DPathTrack;
	static GetDefaultObject(): MovieScene3DPathTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DPathTrack;
	static C(Other: UObject | any): MovieScene3DPathTrack;
}

declare class MovieScene3DTransformTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieScene3DTransformTrack;
	static Find(Outer: UObject, ResourceName: string): MovieScene3DTransformTrack;
	static GetDefaultObject(): MovieScene3DTransformTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DTransformTrack;
	static C(Other: UObject | any): MovieScene3DTransformTrack;
}

declare class MovieSceneActorReferenceTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneActorReferenceTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneActorReferenceTrack;
	static GetDefaultObject(): MovieSceneActorReferenceTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneActorReferenceTrack;
	static C(Other: UObject | any): MovieSceneActorReferenceTrack;
}

declare class MovieSceneAudioTrack extends MovieSceneNameableTrack { 
	AudioSections: MovieSceneSection[];
	RowHeight: number;
	static Load(ResourceName: string): MovieSceneAudioTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneAudioTrack;
	static GetDefaultObject(): MovieSceneAudioTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneAudioTrack;
	static C(Other: UObject | any): MovieSceneAudioTrack;
}

declare class MovieSceneBoolTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneBoolTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBoolTrack;
	static GetDefaultObject(): MovieSceneBoolTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBoolTrack;
	static C(Other: UObject | any): MovieSceneBoolTrack;
}

declare class MovieSceneByteTrack extends MovieScenePropertyTrack { 
	Enum: Enum;
	static Load(ResourceName: string): MovieSceneByteTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneByteTrack;
	static GetDefaultObject(): MovieSceneByteTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneByteTrack;
	static C(Other: UObject | any): MovieSceneByteTrack;
	GetByteTrackEnum(): Enum;
	SetByteTrackEnum(InEnum: Enum): void;
	static GetByteTrackEnum(Track: MovieSceneByteTrack): Enum;
	static SetByteTrackEnum(Track: MovieSceneByteTrack,InEnum: Enum): void;
}

declare class MovieSceneCameraCutTrack extends MovieSceneNameableTrack { 
	bCanBlend: boolean;
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneCameraCutTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraCutTrack;
	static GetDefaultObject(): MovieSceneCameraCutTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraCutTrack;
	static C(Other: UObject | any): MovieSceneCameraCutTrack;
}

declare class MovieSceneCameraShakeSourceShakeTrack extends MovieSceneNameableTrack { 
	CameraShakeSections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneCameraShakeSourceShakeTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraShakeSourceShakeTrack;
	static GetDefaultObject(): MovieSceneCameraShakeSourceShakeTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraShakeSourceShakeTrack;
	static C(Other: UObject | any): MovieSceneCameraShakeSourceShakeTrack;
}

declare class MovieSceneCameraShakeSourceTriggerTrack extends MovieSceneTrack { 
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneCameraShakeSourceTriggerTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraShakeSourceTriggerTrack;
	static GetDefaultObject(): MovieSceneCameraShakeSourceTriggerTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraShakeSourceTriggerTrack;
	static C(Other: UObject | any): MovieSceneCameraShakeSourceTriggerTrack;
}

declare class MovieSceneCameraShakeTrack extends MovieSceneNameableTrack { 
	CameraShakeSections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneCameraShakeTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraShakeTrack;
	static GetDefaultObject(): MovieSceneCameraShakeTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCameraShakeTrack;
	static C(Other: UObject | any): MovieSceneCameraShakeTrack;
}

declare class MovieSceneSubTrack extends MovieSceneNameableTrack { 
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneSubTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSubTrack;
	static GetDefaultObject(): MovieSceneSubTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSubTrack;
	static C(Other: UObject | any): MovieSceneSubTrack;
}

declare class MovieSceneCinematicShotTrack extends MovieSceneSubTrack { 
	static Load(ResourceName: string): MovieSceneCinematicShotTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCinematicShotTrack;
	static GetDefaultObject(): MovieSceneCinematicShotTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCinematicShotTrack;
	static C(Other: UObject | any): MovieSceneCinematicShotTrack;
}

declare class MovieSceneColorTrack extends MovieScenePropertyTrack { 
	bIsSlateColor: boolean;
	static Load(ResourceName: string): MovieSceneColorTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneColorTrack;
	static GetDefaultObject(): MovieSceneColorTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneColorTrack;
	static C(Other: UObject | any): MovieSceneColorTrack;
}

declare class MovieSceneCVarTrack extends MovieSceneNameableTrack { 
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneCVarTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCVarTrack;
	static GetDefaultObject(): MovieSceneCVarTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCVarTrack;
	static C(Other: UObject | any): MovieSceneCVarTrack;
}

declare class MovieSceneDataLayerTrack extends MovieSceneNameableTrack { 
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneDataLayerTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDataLayerTrack;
	static GetDefaultObject(): MovieSceneDataLayerTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDataLayerTrack;
	static C(Other: UObject | any): MovieSceneDataLayerTrack;
}

declare class MovieSceneDoubleTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneDoubleTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoubleTrack;
	static GetDefaultObject(): MovieSceneDoubleTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoubleTrack;
	static C(Other: UObject | any): MovieSceneDoubleTrack;
}

declare class MovieSceneEnumTrack extends MovieScenePropertyTrack { 
	Enum: Enum;
	static Load(ResourceName: string): MovieSceneEnumTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEnumTrack;
	static GetDefaultObject(): MovieSceneEnumTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEnumTrack;
	static C(Other: UObject | any): MovieSceneEnumTrack;
}

declare class MovieSceneEulerTransformTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneEulerTransformTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEulerTransformTrack;
	static GetDefaultObject(): MovieSceneEulerTransformTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEulerTransformTrack;
	static C(Other: UObject | any): MovieSceneEulerTransformTrack;
}

declare type EFireEventsAtPosition = 'AtStartOfEvaluation' | 'AtEndOfEvaluation' | 'AfterSpawn' | 'EFireEventsAtPosition_MAX';
declare var EFireEventsAtPosition : { AtStartOfEvaluation:'AtStartOfEvaluation',AtEndOfEvaluation:'AtEndOfEvaluation',AfterSpawn:'AfterSpawn',EFireEventsAtPosition_MAX:'EFireEventsAtPosition_MAX', };
declare class MovieSceneEventTrack extends MovieSceneNameableTrack { 
	bFireEventsWhenForwards: boolean;
	bFireEventsWhenBackwards: boolean;
	EventPosition: EFireEventsAtPosition;
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneEventTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEventTrack;
	static GetDefaultObject(): MovieSceneEventTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventTrack;
	static C(Other: UObject | any): MovieSceneEventTrack;
	AddEventRepeaterSection(): MovieSceneEventRepeaterSection;
	AddEventTriggerSection(): MovieSceneEventTriggerSection;
	static AddEventRepeaterSection(InTrack: MovieSceneEventTrack): MovieSceneEventRepeaterSection;
	static AddEventTriggerSection(InTrack: MovieSceneEventTrack): MovieSceneEventTriggerSection;
}

declare class MovieSceneFloatTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneFloatTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatTrack;
	static GetDefaultObject(): MovieSceneFloatTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatTrack;
	static C(Other: UObject | any): MovieSceneFloatTrack;
}

declare class MovieSceneFadeTrack extends MovieSceneFloatTrack { 
	static Load(ResourceName: string): MovieSceneFadeTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFadeTrack;
	static GetDefaultObject(): MovieSceneFadeTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFadeTrack;
	static C(Other: UObject | any): MovieSceneFadeTrack;
}

declare class MovieSceneIntegerTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneIntegerTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneIntegerTrack;
	static GetDefaultObject(): MovieSceneIntegerTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneIntegerTrack;
	static C(Other: UObject | any): MovieSceneIntegerTrack;
}

declare class MovieSceneLevelVisibilityTrack extends MovieSceneNameableTrack { 
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneLevelVisibilityTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneLevelVisibilityTrack;
	static GetDefaultObject(): MovieSceneLevelVisibilityTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneLevelVisibilityTrack;
	static C(Other: UObject | any): MovieSceneLevelVisibilityTrack;
}

declare class MovieSceneMaterialParameterCollectionTrack extends MovieSceneMaterialTrack { 
	MPC: MaterialParameterCollection;
	static Load(ResourceName: string): MovieSceneMaterialParameterCollectionTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMaterialParameterCollectionTrack;
	static GetDefaultObject(): MovieSceneMaterialParameterCollectionTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMaterialParameterCollectionTrack;
	static C(Other: UObject | any): MovieSceneMaterialParameterCollectionTrack;
}

declare class MovieSceneComponentMaterialTrack extends MovieSceneMaterialTrack { 
	MaterialIndex: number;
	static Load(ResourceName: string): MovieSceneComponentMaterialTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneComponentMaterialTrack;
	static GetDefaultObject(): MovieSceneComponentMaterialTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneComponentMaterialTrack;
	static C(Other: UObject | any): MovieSceneComponentMaterialTrack;
	GetMaterialIndex(): number;
	SetMaterialIndex(MaterialIndex: number): void;
	static GetMaterialIndex(Track: MovieSceneComponentMaterialTrack): number;
	static SetMaterialIndex(Track: MovieSceneComponentMaterialTrack,MaterialIndex: number): void;
}

declare class MovieSceneObjectPropertyTrack extends MovieScenePropertyTrack { 
	PropertyClass: UnrealEngineClass;
	static Load(ResourceName: string): MovieSceneObjectPropertyTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneObjectPropertyTrack;
	static GetDefaultObject(): MovieSceneObjectPropertyTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneObjectPropertyTrack;
	static C(Other: UObject | any): MovieSceneObjectPropertyTrack;
	GetObjectPropertyClass(): UnrealEngineClass;
	SetObjectPropertyClass(PropertyClass: UnrealEngineClass): void;
	static GetObjectPropertyClass(Track: MovieSceneObjectPropertyTrack): UnrealEngineClass;
	static SetObjectPropertyClass(Track: MovieSceneObjectPropertyTrack,PropertyClass: UnrealEngineClass): void;
}

declare class MovieSceneParticleParameterTrack extends MovieSceneNameableTrack { 
	Sections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneParticleParameterTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneParticleParameterTrack;
	static GetDefaultObject(): MovieSceneParticleParameterTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneParticleParameterTrack;
	static C(Other: UObject | any): MovieSceneParticleParameterTrack;
}

declare class MovieSceneParticleTrack extends MovieSceneNameableTrack { 
	ParticleSections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneParticleTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneParticleTrack;
	static GetDefaultObject(): MovieSceneParticleTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneParticleTrack;
	static C(Other: UObject | any): MovieSceneParticleTrack;
}

declare class MovieScenePrimitiveMaterialTrack extends MovieScenePropertyTrack { 
	MaterialIndex: number;
	static Load(ResourceName: string): MovieScenePrimitiveMaterialTrack;
	static Find(Outer: UObject, ResourceName: string): MovieScenePrimitiveMaterialTrack;
	static GetDefaultObject(): MovieScenePrimitiveMaterialTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePrimitiveMaterialTrack;
	static C(Other: UObject | any): MovieScenePrimitiveMaterialTrack;
	GetMaterialIndex(): number;
	SetMaterialIndex(MaterialIndex: number): void;
	static GetMaterialIndex(Track: MovieScenePrimitiveMaterialTrack): number;
	static SetMaterialIndex(Track: MovieScenePrimitiveMaterialTrack,MaterialIndex: number): void;
}

declare class MovieSceneSkeletalAnimRootMotionTrackParams { 
	clone() : MovieSceneSkeletalAnimRootMotionTrackParams;
	static C(Other: UObject | any): MovieSceneSkeletalAnimRootMotionTrackParams;
}

declare class MovieSceneSkeletalAnimationTrack extends MovieSceneNameableTrack { 
	AnimationSections: MovieSceneSection[];
	bUseLegacySectionIndexBlend: boolean;
	RootMotionParams: MovieSceneSkeletalAnimRootMotionTrackParams;
	bBlendFirstChildOfRoot: boolean;
	bShowRootMotionTrail: boolean;
	static Load(ResourceName: string): MovieSceneSkeletalAnimationTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSkeletalAnimationTrack;
	static GetDefaultObject(): MovieSceneSkeletalAnimationTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSkeletalAnimationTrack;
	static C(Other: UObject | any): MovieSceneSkeletalAnimationTrack;
}

declare class MovieSceneSlomoTrack extends MovieSceneFloatTrack { 
	static Load(ResourceName: string): MovieSceneSlomoTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSlomoTrack;
	static GetDefaultObject(): MovieSceneSlomoTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSlomoTrack;
	static C(Other: UObject | any): MovieSceneSlomoTrack;
}

declare class MovieSceneStringTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneStringTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneStringTrack;
	static GetDefaultObject(): MovieSceneStringTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneStringTrack;
	static C(Other: UObject | any): MovieSceneStringTrack;
}

declare class MovieSceneTransformTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneTransformTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTransformTrack;
	static GetDefaultObject(): MovieSceneTransformTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTransformTrack;
	static C(Other: UObject | any): MovieSceneTransformTrack;
}

declare class MovieSceneFloatVectorTrack extends MovieScenePropertyTrack { 
	NumChannelsUsed: number;
	static Load(ResourceName: string): MovieSceneFloatVectorTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatVectorTrack;
	static GetDefaultObject(): MovieSceneFloatVectorTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatVectorTrack;
	static C(Other: UObject | any): MovieSceneFloatVectorTrack;
	GetNumChannelsUsed(): number;
	SetNumChannelsUsed(InNumChannelsUsed: number): void;
	static GetNumChannelsUsed(Track: MovieSceneFloatVectorTrack): number;
	static SetNumChannelsUsed(Track: MovieSceneFloatVectorTrack,InNumChannelsUsed: number): void;
}

declare class MovieSceneDoubleVectorTrack extends MovieScenePropertyTrack { 
	NumChannelsUsed: number;
	static Load(ResourceName: string): MovieSceneDoubleVectorTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoubleVectorTrack;
	static GetDefaultObject(): MovieSceneDoubleVectorTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoubleVectorTrack;
	static C(Other: UObject | any): MovieSceneDoubleVectorTrack;
	GetNumChannelsUsed(): number;
	SetNumChannelsUsed(InNumChannelsUsed: number): void;
	static GetNumChannelsUsed(Track: MovieSceneDoubleVectorTrack): number;
	static SetNumChannelsUsed(Track: MovieSceneDoubleVectorTrack,InNumChannelsUsed: number): void;
}

declare class MovieSceneVisibilityTrack extends MovieSceneBoolTrack { 
	static Load(ResourceName: string): MovieSceneVisibilityTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneVisibilityTrack;
	static GetDefaultObject(): MovieSceneVisibilityTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneVisibilityTrack;
	static C(Other: UObject | any): MovieSceneVisibilityTrack;
}

declare class EngineCustomTimeStep extends UObject { 
	static Load(ResourceName: string): EngineCustomTimeStep;
	static Find(Outer: UObject, ResourceName: string): EngineCustomTimeStep;
	static GetDefaultObject(): EngineCustomTimeStep;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EngineCustomTimeStep;
	static C(Other: UObject | any): EngineCustomTimeStep;
}

declare class FixedFrameRateCustomTimeStep extends EngineCustomTimeStep { 
	static Load(ResourceName: string): FixedFrameRateCustomTimeStep;
	static Find(Outer: UObject, ResourceName: string): FixedFrameRateCustomTimeStep;
	static GetDefaultObject(): FixedFrameRateCustomTimeStep;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FixedFrameRateCustomTimeStep;
	static C(Other: UObject | any): FixedFrameRateCustomTimeStep;
}

declare class GenlockedCustomTimeStep extends FixedFrameRateCustomTimeStep { 
	bAutoDetectFormat: boolean;
	static Load(ResourceName: string): GenlockedCustomTimeStep;
	static Find(Outer: UObject, ResourceName: string): GenlockedCustomTimeStep;
	static GetDefaultObject(): GenlockedCustomTimeStep;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenlockedCustomTimeStep;
	static C(Other: UObject | any): GenlockedCustomTimeStep;
}

declare class GenlockedFixedRateCustomTimeStep extends GenlockedCustomTimeStep { 
	FrameRate: FrameRate;
	bShouldBlock: boolean;
	bForceSingleFrameDeltaTime: boolean;
	static Load(ResourceName: string): GenlockedFixedRateCustomTimeStep;
	static Find(Outer: UObject, ResourceName: string): GenlockedFixedRateCustomTimeStep;
	static GetDefaultObject(): GenlockedFixedRateCustomTimeStep;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenlockedFixedRateCustomTimeStep;
	static C(Other: UObject | any): GenlockedFixedRateCustomTimeStep;
}

declare type ETimecodeProviderSynchronizationState = 'Closed' | 'Error' | 'Synchronized' | 'Synchronizing' | 'ETimecodeProviderSynchronizationState_MAX';
declare var ETimecodeProviderSynchronizationState : { Closed:'Closed',Error:'Error',Synchronized:'Synchronized',Synchronizing:'Synchronizing',ETimecodeProviderSynchronizationState_MAX:'ETimecodeProviderSynchronizationState_MAX', };
declare class TimecodeProvider extends UObject { 
	FrameDelay: number;
	static Load(ResourceName: string): TimecodeProvider;
	static Find(Outer: UObject, ResourceName: string): TimecodeProvider;
	static GetDefaultObject(): TimecodeProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimecodeProvider;
	GetTimecode(): Timecode;
	GetSynchronizationState(): ETimecodeProviderSynchronizationState;
	GetQualifiedFrameTime(): QualifiedFrameTime;
	GetFrameRate(): FrameRate;
	GetDelayedTimecode(): Timecode;
	GetDelayedQualifiedFrameTime(): QualifiedFrameTime;
	FetchTimecode(OutFrameTime?: QualifiedFrameTime): {OutFrameTime: QualifiedFrameTime, $: boolean};
	FetchAndUpdate(): void;
	static C(Other: UObject | any): TimecodeProvider;
}

declare class GenlockedTimecodeProvider extends TimecodeProvider { 
	bUseGenlockToCount: boolean;
	static Load(ResourceName: string): GenlockedTimecodeProvider;
	static Find(Outer: UObject, ResourceName: string): GenlockedTimecodeProvider;
	static GetDefaultObject(): GenlockedTimecodeProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenlockedTimecodeProvider;
	static C(Other: UObject | any): GenlockedTimecodeProvider;
}

declare class TimeManagementBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): TimeManagementBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): TimeManagementBlueprintLibrary;
	static GetDefaultObject(): TimeManagementBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimeManagementBlueprintLibrary;
	static TransformTime(SourceTime: FrameTime,SourceRate: FrameRate,DestinationRate: FrameRate): FrameTime;
	static Subtract_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
	static Subtract_FrameNumberFrameNumber(A: FrameNumber,B: FrameNumber): FrameNumber;
	static SnapFrameTimeToRate(SourceTime: FrameTime,SourceRate: FrameRate,SnapToRate: FrameRate): FrameTime;
	static Multiply_SecondsFrameRate(TimeInSeconds: number,FrameRate: FrameRate): FrameTime;
	static Multiply_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
	static IsValid_MultipleOf(InFrameRate: FrameRate,OtherFramerate: FrameRate): boolean;
	static IsValid_Framerate(InFrameRate: FrameRate): boolean;
	static GetTimecodeFrameRate(): FrameRate;
	static GetTimecode(): Timecode;
	static Divide_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
	static Conv_TimecodeToString(InTimecode: Timecode,bForceSignDisplay: boolean): string;
	static Conv_QualifiedFrameTimeToSeconds(InFrameTime: QualifiedFrameTime): number;
	static Conv_FrameRateToSeconds(InFrameRate: FrameRate): number;
	static Conv_FrameNumberToInteger(InFrameNumber: FrameNumber): number;
	static Add_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
	static Add_FrameNumberFrameNumber(A: FrameNumber,B: FrameNumber): FrameNumber;
	static C(Other: UObject | any): TimeManagementBlueprintLibrary;
}

declare class TimeSynchronizationSource extends UObject { 
	bUseForSynchronization: boolean;
	FrameOffset: number;
	static Load(ResourceName: string): TimeSynchronizationSource;
	static Find(Outer: UObject, ResourceName: string): TimeSynchronizationSource;
	static GetDefaultObject(): TimeSynchronizationSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimeSynchronizationSource;
	static C(Other: UObject | any): TimeSynchronizationSource;
}

declare class MovieSceneChannelOverrideProvider extends Interface { 
	static Load(ResourceName: string): MovieSceneChannelOverrideProvider;
	static Find(Outer: UObject, ResourceName: string): MovieSceneChannelOverrideProvider;
	static GetDefaultObject(): MovieSceneChannelOverrideProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneChannelOverrideProvider;
	static C(Other: UObject | any): MovieSceneChannelOverrideProvider;
}

declare class MovieSceneDeterminismSource extends Interface { 
	static Load(ResourceName: string): MovieSceneDeterminismSource;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDeterminismSource;
	static GetDefaultObject(): MovieSceneDeterminismSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDeterminismSource;
	static C(Other: UObject | any): MovieSceneDeterminismSource;
}

declare class MovieSceneEvaluationHook extends Interface { 
	static Load(ResourceName: string): MovieSceneEvaluationHook;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEvaluationHook;
	static GetDefaultObject(): MovieSceneEvaluationHook;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEvaluationHook;
	static C(Other: UObject | any): MovieSceneEvaluationHook;
}

declare class MovieSceneBindingOwnerInterface extends Interface { 
	static Load(ResourceName: string): MovieSceneBindingOwnerInterface;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBindingOwnerInterface;
	static GetDefaultObject(): MovieSceneBindingOwnerInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBindingOwnerInterface;
	static C(Other: UObject | any): MovieSceneBindingOwnerInterface;
}

declare class MovieSceneKeyProxy extends Interface { 
	static Load(ResourceName: string): MovieSceneKeyProxy;
	static Find(Outer: UObject, ResourceName: string): MovieSceneKeyProxy;
	static GetDefaultObject(): MovieSceneKeyProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneKeyProxy;
	static C(Other: UObject | any): MovieSceneKeyProxy;
}

declare class MovieSceneSequenceTickManagerClient extends Interface { 
	static Load(ResourceName: string): MovieSceneSequenceTickManagerClient;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSequenceTickManagerClient;
	static GetDefaultObject(): MovieSceneSequenceTickManagerClient;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSequenceTickManagerClient;
	static C(Other: UObject | any): MovieSceneSequenceTickManagerClient;
}

declare class MovieSceneTrackTemplateProducer extends Interface { 
	static Load(ResourceName: string): MovieSceneTrackTemplateProducer;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTrackTemplateProducer;
	static GetDefaultObject(): MovieSceneTrackTemplateProducer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTrackTemplateProducer;
	static C(Other: UObject | any): MovieSceneTrackTemplateProducer;
}

declare class MovieSceneEntityProvider extends Interface { 
	static Load(ResourceName: string): MovieSceneEntityProvider;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEntityProvider;
	static GetDefaultObject(): MovieSceneEntityProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEntityProvider;
	static C(Other: UObject | any): MovieSceneEntityProvider;
}

declare class MovieSceneGenericBoundObjectInstantiator extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneGenericBoundObjectInstantiator;
	static Find(Outer: UObject, ResourceName: string): MovieSceneGenericBoundObjectInstantiator;
	static GetDefaultObject(): MovieSceneGenericBoundObjectInstantiator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneGenericBoundObjectInstantiator;
	static C(Other: UObject | any): MovieSceneGenericBoundObjectInstantiator;
}

declare class MovieSceneBoundSceneComponentInstantiator extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneBoundSceneComponentInstantiator;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBoundSceneComponentInstantiator;
	static GetDefaultObject(): MovieSceneBoundSceneComponentInstantiator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBoundSceneComponentInstantiator;
	static C(Other: UObject | any): MovieSceneBoundSceneComponentInstantiator;
}

declare class MovieSceneValueDecomposer extends Interface { 
	static Load(ResourceName: string): MovieSceneValueDecomposer;
	static Find(Outer: UObject, ResourceName: string): MovieSceneValueDecomposer;
	static GetDefaultObject(): MovieSceneValueDecomposer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneValueDecomposer;
	static C(Other: UObject | any): MovieSceneValueDecomposer;
}

declare class MovieSceneEvalTimeSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneEvalTimeSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEvalTimeSystem;
	static GetDefaultObject(): MovieSceneEvalTimeSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEvalTimeSystem;
	static C(Other: UObject | any): MovieSceneEvalTimeSystem;
}

declare class MovieSceneEvaluationInstanceKey { 
	clone() : MovieSceneEvaluationInstanceKey;
	static C(Other: UObject | any): MovieSceneEvaluationInstanceKey;
}

declare class MovieSceneEvaluationHookComponent { 
	Interface: MovieSceneEvaluationHook;
	clone() : MovieSceneEvaluationHookComponent;
	static C(Other: UObject | any): MovieSceneEvaluationHookComponent;
}

declare class MovieSceneEvaluationHookEvent { 
	Hook: MovieSceneEvaluationHookComponent;
	clone() : MovieSceneEvaluationHookEvent;
	static C(Other: UObject | any): MovieSceneEvaluationHookEvent;
}

declare class MovieSceneEvaluationHookEventContainer { 
	Events: MovieSceneEvaluationHookEvent[];
	clone() : MovieSceneEvaluationHookEventContainer;
	static C(Other: UObject | any): MovieSceneEvaluationHookEventContainer;
}

declare class MovieSceneEvaluationHookSystem extends MovieSceneEntitySystem { 
	PendingEventsByRootInstance: Map<MovieSceneEvaluationInstanceKey, MovieSceneEvaluationHookEventContainer>;
	static Load(ResourceName: string): MovieSceneEvaluationHookSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEvaluationHookSystem;
	static GetDefaultObject(): MovieSceneEvaluationHookSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEvaluationHookSystem;
	static C(Other: UObject | any): MovieSceneEvaluationHookSystem;
}

declare class MovieSceneMasterInstantiatorSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneMasterInstantiatorSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMasterInstantiatorSystem;
	static GetDefaultObject(): MovieSceneMasterInstantiatorSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMasterInstantiatorSystem;
	static C(Other: UObject | any): MovieSceneMasterInstantiatorSystem;
}

declare class MovieScenePreAnimatedStateSystemInterface extends Interface { 
	static Load(ResourceName: string): MovieScenePreAnimatedStateSystemInterface;
	static Find(Outer: UObject, ResourceName: string): MovieScenePreAnimatedStateSystemInterface;
	static GetDefaultObject(): MovieScenePreAnimatedStateSystemInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePreAnimatedStateSystemInterface;
	static C(Other: UObject | any): MovieScenePreAnimatedStateSystemInterface;
}

declare class MovieSceneCachePreAnimatedStateSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneCachePreAnimatedStateSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCachePreAnimatedStateSystem;
	static GetDefaultObject(): MovieSceneCachePreAnimatedStateSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCachePreAnimatedStateSystem;
	static C(Other: UObject | any): MovieSceneCachePreAnimatedStateSystem;
}

declare class MovieSceneRestorePreAnimatedStateSystem extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneRestorePreAnimatedStateSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneRestorePreAnimatedStateSystem;
	static GetDefaultObject(): MovieSceneRestorePreAnimatedStateSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneRestorePreAnimatedStateSystem;
	static C(Other: UObject | any): MovieSceneRestorePreAnimatedStateSystem;
}

declare class MovieSceneSpawnablesSystem extends MovieSceneEntitySystem { 
	static Load(ResourceName: string): MovieSceneSpawnablesSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSpawnablesSystem;
	static GetDefaultObject(): MovieSceneSpawnablesSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSpawnablesSystem;
	static C(Other: UObject | any): MovieSceneSpawnablesSystem;
}

declare class MovieSceneTrackInstanceInstantiator extends MovieSceneEntityInstantiatorSystem { 
	static Load(ResourceName: string): MovieSceneTrackInstanceInstantiator;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTrackInstanceInstantiator;
	static GetDefaultObject(): MovieSceneTrackInstanceInstantiator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTrackInstanceInstantiator;
	static C(Other: UObject | any): MovieSceneTrackInstanceInstantiator;
}

declare class MovieSceneTrackInstanceSystem extends MovieSceneEntitySystem { 
	Instantiator: MovieSceneTrackInstanceInstantiator;
	static Load(ResourceName: string): MovieSceneTrackInstanceSystem;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTrackInstanceSystem;
	static GetDefaultObject(): MovieSceneTrackInstanceSystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTrackInstanceSystem;
	static C(Other: UObject | any): MovieSceneTrackInstanceSystem;
}

declare class MovieSceneCustomClockSource extends Interface { 
	static Load(ResourceName: string): MovieSceneCustomClockSource;
	static Find(Outer: UObject, ResourceName: string): MovieSceneCustomClockSource;
	static GetDefaultObject(): MovieSceneCustomClockSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCustomClockSource;
	OnTick(DeltaSeconds: number,InPlayRate: number): void;
	OnStopPlaying(InStopTime: QualifiedFrameTime): void;
	OnStartPlaying(InStartTime: QualifiedFrameTime): void;
	OnRequestCurrentTime(InCurrentTime: QualifiedFrameTime,InPlayRate: number): FrameTime;
	static C(Other: UObject | any): MovieSceneCustomClockSource;
}

declare type EMovieSceneBuiltInEasing = 'Linear' | 'SinIn' | 'SinOut' | 'SinInOut' | 'QuadIn' | 'QuadOut' | 'QuadInOut' | 'CubicIn' | 'CubicOut' | 'CubicInOut' | 'QuartIn' | 'QuartOut' | 'QuartInOut' | 'QuintIn' | 'QuintOut' | 'QuintInOut' | 'ExpoIn' | 'ExpoOut' | 'ExpoInOut' | 'CircIn' | 'CircOut' | 'CircInOut' | 'EMovieSceneBuiltInEasing_MAX';
declare var EMovieSceneBuiltInEasing : { Linear:'Linear',SinIn:'SinIn',SinOut:'SinOut',SinInOut:'SinInOut',QuadIn:'QuadIn',QuadOut:'QuadOut',QuadInOut:'QuadInOut',CubicIn:'CubicIn',CubicOut:'CubicOut',CubicInOut:'CubicInOut',QuartIn:'QuartIn',QuartOut:'QuartOut',QuartInOut:'QuartInOut',QuintIn:'QuintIn',QuintOut:'QuintOut',QuintInOut:'QuintInOut',ExpoIn:'ExpoIn',ExpoOut:'ExpoOut',ExpoInOut:'ExpoInOut',CircIn:'CircIn',CircOut:'CircOut',CircInOut:'CircInOut',EMovieSceneBuiltInEasing_MAX:'EMovieSceneBuiltInEasing_MAX', };
declare class MovieSceneBuiltInEasingFunction extends UObject { 
	Type: EMovieSceneBuiltInEasing;
	static Load(ResourceName: string): MovieSceneBuiltInEasingFunction;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBuiltInEasingFunction;
	static GetDefaultObject(): MovieSceneBuiltInEasingFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBuiltInEasingFunction;
	static C(Other: UObject | any): MovieSceneBuiltInEasingFunction;
}

declare class MovieSceneEasingExternalCurve extends UObject { 
	Curve: CurveFloat;
	static Load(ResourceName: string): MovieSceneEasingExternalCurve;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEasingExternalCurve;
	static GetDefaultObject(): MovieSceneEasingExternalCurve;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEasingExternalCurve;
	static C(Other: UObject | any): MovieSceneEasingExternalCurve;
}

declare class NodeAndChannelMappings extends Interface { 
	static Load(ResourceName: string): NodeAndChannelMappings;
	static Find(Outer: UObject, ResourceName: string): NodeAndChannelMappings;
	static GetDefaultObject(): NodeAndChannelMappings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NodeAndChannelMappings;
	static C(Other: UObject | any): NodeAndChannelMappings;
}

declare class MovieSceneBoolSection extends MovieSceneSection { 
	DefaultValue: boolean;
	BoolCurve: MovieSceneBoolChannel;
	bIsExternallyInverted: boolean;
	static Load(ResourceName: string): MovieSceneBoolSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBoolSection;
	static GetDefaultObject(): MovieSceneBoolSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBoolSection;
	static C(Other: UObject | any): MovieSceneBoolSection;
}

declare class MovieSceneHookSection extends MovieSceneSection { 
	bRequiresRangedHook: boolean;
	bRequiresTriggerHooks: boolean;
	static Load(ResourceName: string): MovieSceneHookSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneHookSection;
	static GetDefaultObject(): MovieSceneHookSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneHookSection;
	static C(Other: UObject | any): MovieSceneHookSection;
}

declare class MovieSceneSpawnSection extends MovieSceneBoolSection { 
	static Load(ResourceName: string): MovieSceneSpawnSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSpawnSection;
	static GetDefaultObject(): MovieSceneSpawnSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSpawnSection;
	static C(Other: UObject | any): MovieSceneSpawnSection;
}

declare class TestMovieSceneTrack extends MovieSceneTrack { 
	bHighPassFilter: boolean;
	SectionArray: MovieSceneSection[];
	static Load(ResourceName: string): TestMovieSceneTrack;
	static Find(Outer: UObject, ResourceName: string): TestMovieSceneTrack;
	static GetDefaultObject(): TestMovieSceneTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneTrack;
	static C(Other: UObject | any): TestMovieSceneTrack;
}

declare class TestMovieSceneSection extends MovieSceneSection { 
	static Load(ResourceName: string): TestMovieSceneSection;
	static Find(Outer: UObject, ResourceName: string): TestMovieSceneSection;
	static GetDefaultObject(): TestMovieSceneSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneSection;
	static C(Other: UObject | any): TestMovieSceneSection;
}

declare class TestMovieSceneSequence extends MovieSceneSequence { 
	MovieScene: MovieScene;
	static Load(ResourceName: string): TestMovieSceneSequence;
	static Find(Outer: UObject, ResourceName: string): TestMovieSceneSequence;
	static GetDefaultObject(): TestMovieSceneSequence;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneSequence;
	static C(Other: UObject | any): TestMovieSceneSequence;
}

declare class TestMovieSceneSubTrack extends MovieSceneSubTrack { 
	SectionArray: MovieSceneSection[];
	static Load(ResourceName: string): TestMovieSceneSubTrack;
	static Find(Outer: UObject, ResourceName: string): TestMovieSceneSubTrack;
	static GetDefaultObject(): TestMovieSceneSubTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneSubTrack;
	static C(Other: UObject | any): TestMovieSceneSubTrack;
}

declare class TestMovieSceneSubSection extends MovieSceneSubSection { 
	static Load(ResourceName: string): TestMovieSceneSubSection;
	static Find(Outer: UObject, ResourceName: string): TestMovieSceneSubSection;
	static GetDefaultObject(): TestMovieSceneSubSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneSubSection;
	static C(Other: UObject | any): TestMovieSceneSubSection;
}

declare class TestMovieSceneEvalHookTrack extends MovieSceneTrack { 
	SectionArray: MovieSceneSection[];
	static Load(ResourceName: string): TestMovieSceneEvalHookTrack;
	static Find(Outer: UObject, ResourceName: string): TestMovieSceneEvalHookTrack;
	static GetDefaultObject(): TestMovieSceneEvalHookTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneEvalHookTrack;
	static C(Other: UObject | any): TestMovieSceneEvalHookTrack;
}

declare class TestMovieSceneEvalHookSection extends MovieSceneHookSection { 
	static Load(ResourceName: string): TestMovieSceneEvalHookSection;
	static Find(Outer: UObject, ResourceName: string): TestMovieSceneEvalHookSection;
	static GetDefaultObject(): TestMovieSceneEvalHookSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneEvalHookSection;
	static C(Other: UObject | any): TestMovieSceneEvalHookSection;
}

declare class MovieSceneSpawnTrack extends MovieSceneTrack { 
	Sections: MovieSceneSection[];
	ObjectGuid: Guid;
	static Load(ResourceName: string): MovieSceneSpawnTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSpawnTrack;
	static GetDefaultObject(): MovieSceneSpawnTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSpawnTrack;
	static C(Other: UObject | any): MovieSceneSpawnTrack;
}

declare class AudioLinkBlueprintInterface extends Interface { 
	static Load(ResourceName: string): AudioLinkBlueprintInterface;
	static Find(Outer: UObject, ResourceName: string): AudioLinkBlueprintInterface;
	static GetDefaultObject(): AudioLinkBlueprintInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioLinkBlueprintInterface;
	StopLink(): void;
	SetLinkSound(NewSound: SoundBase): void;
	PlayLink(StartTime: number): void;
	IsLinkPlaying(): boolean;
	static C(Other: UObject | any): AudioLinkBlueprintInterface;
}

declare type EAudioDeviceChangedRole = 'Invalid' | 'Console' | 'Multimedia' | 'Communications' | 'Count' | 'EAudioDeviceChangedRole_MAX';
declare var EAudioDeviceChangedRole : { Invalid:'Invalid',Console:'Console',Multimedia:'Multimedia',Communications:'Communications',Count:'Count',EAudioDeviceChangedRole_MAX:'EAudioDeviceChangedRole_MAX', };
declare type EAudioDeviceChangedState = 'Invalid' | 'Active' | 'Disabled' | 'NotPresent' | 'Unplugged' | 'Count' | 'EAudioDeviceChangedState_MAX';
declare var EAudioDeviceChangedState : { Invalid:'Invalid',Active:'Active',Disabled:'Disabled',NotPresent:'NotPresent',Unplugged:'Unplugged',Count:'Count',EAudioDeviceChangedState_MAX:'EAudioDeviceChangedState_MAX', };
declare class AudioDeviceNotificationSubsystem extends EngineSubsystem { 
	DefaultCaptureDeviceChanged: UnrealEngineMulticastDelegate<(AudioDeviceRole: EAudioDeviceChangedRole, DeviceID: string) => void>;
	DefaultRenderDeviceChanged: UnrealEngineMulticastDelegate<(AudioDeviceRole: EAudioDeviceChangedRole, DeviceID: string) => void>;
	DeviceAdded: UnrealEngineMulticastDelegate<(DeviceID: string) => void>;
	DeviceRemoved: UnrealEngineMulticastDelegate<(DeviceID: string) => void>;
	DeviceStateChanged: UnrealEngineMulticastDelegate<(DeviceID: string, NewState: EAudioDeviceChangedState) => void>;
	DeviceSwitched: UnrealEngineMulticastDelegate<(DeviceID: string) => void>;
	static Load(ResourceName: string): AudioDeviceNotificationSubsystem;
	static Find(Outer: UObject, ResourceName: string): AudioDeviceNotificationSubsystem;
	static GetDefaultObject(): AudioDeviceNotificationSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioDeviceNotificationSubsystem;
	static C(Other: UObject | any): AudioDeviceNotificationSubsystem;
}

declare type EAudioSpectrumBandPresetType = 'KickDrum' | 'SnareDrum' | 'Voice' | 'Cymbals' | 'EAudioSpectrumBandPresetType_MAX';
declare var EAudioSpectrumBandPresetType : { KickDrum:'KickDrum',SnareDrum:'SnareDrum',Voice:'Voice',Cymbals:'Cymbals',EAudioSpectrumBandPresetType_MAX:'EAudioSpectrumBandPresetType_MAX', };
declare class SoundSubmixSpectralAnalysisBandSettings { 
	BandFrequency: number;
	AttackTimeMsec: number;
	ReleaseTimeMsec: number;
	QFactor: number;
	clone() : SoundSubmixSpectralAnalysisBandSettings;
	static C(Other: UObject | any): SoundSubmixSpectralAnalysisBandSettings;
}

declare type EMusicalNoteName = 'C' | 'Db' | 'D' | 'Eb' | 'E' | 'F' | 'Gb' | 'G' | 'Ab' | 'A' | 'Bb' | 'B' | 'EMusicalNoteName_MAX';
declare var EMusicalNoteName : { C:'C',Db:'Db',D:'D',Eb:'Eb',E:'E',F:'F',Gb:'Gb',G:'G',Ab:'Ab',A:'A',Bb:'Bb',B:'B',EMusicalNoteName_MAX:'EMusicalNoteName_MAX', };
declare class AudioMixerBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AudioMixerBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): AudioMixerBlueprintLibrary;
	static GetDefaultObject(): AudioMixerBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioMixerBlueprintLibrary;
	static TrimAudioCache(InMegabytesToFree: number): number;
	static StopRecordingOutput(WorldContextObject: UObject,ExportType: EAudioRecordingExportType,Name: string,Path: string,SubmixToRecord: SoundSubmix,ExistingSoundWaveToOverwrite: SoundWave): SoundWave;
	static StopAudioBus(WorldContextObject: UObject,AudioBus: AudioBus): void;
	static StopAnalyzingOutput(WorldContextObject: UObject,SubmixToStopAnalyzing: SoundSubmix): void;
	static StartRecordingOutput(WorldContextObject: UObject,ExpectedDuration: number,SubmixToRecord: SoundSubmix): void;
	static StartAudioBus(WorldContextObject: UObject,AudioBus: AudioBus): void;
	static StartAnalyzingOutput(WorldContextObject: UObject,SubmixToAnalyze: SoundSubmix,FFTSize: EFFTSize,InterpolationMethod: EFFTPeakInterpolationMethod,WindowType: EFFTWindowType,HopSize: number,SpectrumType: EAudioSpectrumType): void;
	static SetSubmixEffectChainOverride(WorldContextObject: UObject,SoundSubmix: SoundSubmix,SubmixEffectPresetChain: SoundEffectSubmixPreset[],FadeTimeSec: number): void;
	static SetBypassSourceEffectChainEntry(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number,bBypassed: boolean): void;
	static ResumeRecordingOutput(WorldContextObject: UObject,SubmixToPause: SoundSubmix): void;
	static ReplaceSubmixEffect(WorldContextObject: UObject,InSoundSubmix: SoundSubmix,SubmixChainIndex: number,SubmixEffectPreset: SoundEffectSubmixPreset): void;
	static ReplaceSoundEffectSubmix(WorldContextObject: UObject,InSoundSubmix: SoundSubmix,SubmixChainIndex: number,SubmixEffectPreset: SoundEffectSubmixPreset): void;
	static RemoveSubmixEffectPresetAtIndex(WorldContextObject: UObject,SoundSubmix: SoundSubmix,SubmixChainIndex: number): void;
	static RemoveSubmixEffectPreset(WorldContextObject: UObject,SoundSubmix: SoundSubmix,SubmixEffectPreset: SoundEffectSubmixPreset): void;
	static RemoveSubmixEffectAtIndex(WorldContextObject: UObject,SoundSubmix: SoundSubmix,SubmixChainIndex: number): void;
	static RemoveSubmixEffect(WorldContextObject: UObject,SoundSubmix: SoundSubmix,SubmixEffectPreset: SoundEffectSubmixPreset): void;
	static RemoveSourceEffectFromPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number): void;
	static RemoveMasterSubmixEffect(WorldContextObject: UObject,SubmixEffectPreset: SoundEffectSubmixPreset): void;
	static PrimeSoundCueForPlayback(SoundCue: SoundCue): void;
	static PauseRecordingOutput(WorldContextObject: UObject,SubmixToPause: SoundSubmix): void;
	static MakePresetSpectralAnalysisBandSettings(InBandPresetType: EAudioSpectrumBandPresetType,InNumBands: number,InAttackTimeMsec: number,InReleaseTimeMsec: number): SoundSubmixSpectralAnalysisBandSettings[];
	static MakeMusicalSpectralAnalysisBandSettings(InNumSemitones: number,InStartingMusicalNote: EMusicalNoteName,InStartingOctave: number,InAttackTimeMsec: number,InReleaseTimeMsec: number): SoundSubmixSpectralAnalysisBandSettings[];
	static MakeFullSpectrumSpectralAnalysisBandSettings(InNumBands: number,InMinimumFrequency: number,InMaximumFrequency: number,InAttackTimeMsec: number,InReleaseTimeMsec: number): SoundSubmixSpectralAnalysisBandSettings[];
	static IsAudioBusActive(WorldContextObject: UObject,AudioBus: AudioBus): boolean;
	static GetPhaseForFrequencies(WorldContextObject: UObject,Frequencies: number[],Phases?: number[],SubmixToAnalyze?: SoundSubmix): {Phases: number[]};
	static GetNumberOfEntriesInSourceEffectChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain): number;
	static GetMagnitudeForFrequencies(WorldContextObject: UObject,Frequencies: number[],Magnitudes?: number[],SubmixToAnalyze?: SoundSubmix): {Magnitudes: number[]};
	static Conv_AudioOutputDeviceInfoToString(Info: AudioOutputDeviceInfo): string;
	static ClearSubmixEffects(WorldContextObject: UObject,SoundSubmix: SoundSubmix): void;
	static ClearSubmixEffectChainOverride(WorldContextObject: UObject,SoundSubmix: SoundSubmix,FadeTimeSec: number): void;
	static ClearMasterSubmixEffects(WorldContextObject: UObject): void;
	static AddSubmixEffect(WorldContextObject: UObject,SoundSubmix: SoundSubmix,SubmixEffectPreset: SoundEffectSubmixPreset): number;
	static AddSourceEffectToPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,Entry: SourceEffectChainEntry): void;
	static AddMasterSubmixEffect(WorldContextObject: UObject,SubmixEffectPreset: SoundEffectSubmixPreset): void;
	static C(Other: UObject | any): AudioMixerBlueprintLibrary;
}

declare class SoundWaveProcedural extends SoundWave { 
	static Load(ResourceName: string): SoundWaveProcedural;
	static Find(Outer: UObject, ResourceName: string): SoundWaveProcedural;
	static GetDefaultObject(): SoundWaveProcedural;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundWaveProcedural;
	static C(Other: UObject | any): SoundWaveProcedural;
}

declare class SynthComponent extends SceneComponent { 
	bAutoDestroy: boolean;
	bStopWhenOwnerDestroyed: boolean;
	bAllowSpatialization: boolean;
	bOverrideAttenuation: boolean;
	bOutputToBusOnly: boolean;
	bEnableBusSends: boolean;
	bEnableBaseSubmix: boolean;
	bEnableSubmixSends: boolean;
	AttenuationSettings: SoundAttenuation;
	AttenuationOverrides: SoundAttenuationSettings;
	ConcurrencySettings: SoundConcurrency;
	ConcurrencySet: Set<SoundConcurrency>;
	SoundClass: SoundClass;
	SourceEffectChain: SoundEffectSourcePresetChain;
	SoundSubmix: SoundSubmixBase;
	SoundSubmixSends: SoundSubmixSendInfo[];
	BusSends: SoundSourceBusSendInfo[];
	PreEffectBusSends: SoundSourceBusSendInfo[];
	bIsUISound: boolean;
	bIsPreviewSound: boolean;
	EnvelopeFollowerAttackTime: number;
	EnvelopeFollowerReleaseTime: number;
	OnAudioEnvelopeValue: UnrealEngineMulticastDelegate<(EnvelopeValue: number) => void>;
	Synth: SynthSound;
	AudioComponent: AudioComponent;
	static Load(ResourceName: string): SynthComponent;
	static Find(Outer: UObject, ResourceName: string): SynthComponent;
	static GetDefaultObject(): SynthComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthComponent;
	Stop(): void;
	Start(): void;
	SetVolumeMultiplier(VolumeMultiplier: number): void;
	SetSubmixSend(Submix: SoundSubmixBase,SendLevel: number): void;
	SetOutputToBusOnly(bInOutputToBusOnly: boolean): void;
	SetLowPassFilterFrequency(InLowPassFilterFrequency: number): void;
	SetLowPassFilterEnabled(InLowPassFilterEnabled: boolean): void;
	IsPlaying(): boolean;
	FadeOut(FadeOutDuration: number,FadeVolumeLevel: number,FadeCurve: EAudioFaderCurve): void;
	FadeIn(FadeInDuration: number,FadeVolumeLevel: number,StartTime: number,FadeCurve: EAudioFaderCurve): void;
	AdjustVolume(AdjustVolumeDuration: number,AdjustVolumeLevel: number,FadeCurve: EAudioFaderCurve): void;
	static C(Other: UObject | any): SynthComponent;
}

declare class SynthSound extends SoundWaveProcedural { 
	OwningSynthComponent: SynthComponent;
	static Load(ResourceName: string): SynthSound;
	static Find(Outer: UObject, ResourceName: string): SynthSound;
	static GetDefaultObject(): SynthSound;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthSound;
	static C(Other: UObject | any): SynthSound;
}

declare type ESubmixEffectDynamicsProcessorType = 'Compressor' | 'Limiter' | 'Expander' | 'Gate' | 'UpwardsCompressor' | 'Count' | 'ESubmixEffectDynamicsProcessorType_MAX';
declare var ESubmixEffectDynamicsProcessorType : { Compressor:'Compressor',Limiter:'Limiter',Expander:'Expander',Gate:'Gate',UpwardsCompressor:'UpwardsCompressor',Count:'Count',ESubmixEffectDynamicsProcessorType_MAX:'ESubmixEffectDynamicsProcessorType_MAX', };
declare type ESubmixEffectDynamicsPeakMode = 'MeanSquared' | 'RootMeanSquared' | 'Peak' | 'Count' | 'ESubmixEffectDynamicsPeakMode_MAX';
declare var ESubmixEffectDynamicsPeakMode : { MeanSquared:'MeanSquared',RootMeanSquared:'RootMeanSquared',Peak:'Peak',Count:'Count',ESubmixEffectDynamicsPeakMode_MAX:'ESubmixEffectDynamicsPeakMode_MAX', };
declare type ESubmixEffectDynamicsChannelLinkMode = 'Disabled' | 'Average' | 'Peak' | 'Count' | 'ESubmixEffectDynamicsChannelLinkMode_MAX';
declare var ESubmixEffectDynamicsChannelLinkMode : { Disabled:'Disabled',Average:'Average',Peak:'Peak',Count:'Count',ESubmixEffectDynamicsChannelLinkMode_MAX:'ESubmixEffectDynamicsChannelLinkMode_MAX', };
declare type ESubmixEffectDynamicsKeySource = 'Default' | 'AudioBus' | 'Submix' | 'Count' | 'ESubmixEffectDynamicsKeySource_MAX';
declare var ESubmixEffectDynamicsKeySource : { Default:'Default',AudioBus:'AudioBus',Submix:'Submix',Count:'Count',ESubmixEffectDynamicsKeySource_MAX:'ESubmixEffectDynamicsKeySource_MAX', };
declare class SubmixEffectDynamicProcessorFilterSettings { 
	bEnabled: boolean;
	Cutoff: number;
	GainDb: number;
	clone() : SubmixEffectDynamicProcessorFilterSettings;
	static C(Other: UObject | any): SubmixEffectDynamicProcessorFilterSettings;
}

declare class SubmixEffectDynamicsProcessorSettings { 
	DynamicsProcessorType: ESubmixEffectDynamicsProcessorType;
	PeakMode: ESubmixEffectDynamicsPeakMode;
	LinkMode: ESubmixEffectDynamicsChannelLinkMode;
	InputGainDb: number;
	ThresholdDb: number;
	Ratio: number;
	KneeBandwidthDb: number;
	LookAheadMsec: number;
	AttackTimeMsec: number;
	ReleaseTimeMsec: number;
	KeySource: ESubmixEffectDynamicsKeySource;
	ExternalAudioBus: AudioBus;
	ExternalSubmix: SoundSubmix;
	bChannelLinked: boolean;
	bAnalogMode: boolean;
	bBypass: boolean;
	bKeyAudition: boolean;
	KeyGainDb: number;
	OutputGainDb: number;
	KeyHighshelf: SubmixEffectDynamicProcessorFilterSettings;
	KeyLowshelf: SubmixEffectDynamicProcessorFilterSettings;
	clone() : SubmixEffectDynamicsProcessorSettings;
	static C(Other: UObject | any): SubmixEffectDynamicsProcessorSettings;
}

declare class SubmixEffectDynamicsProcessorPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectDynamicsProcessorSettings;
	static Load(ResourceName: string): SubmixEffectDynamicsProcessorPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectDynamicsProcessorPreset;
	static GetDefaultObject(): SubmixEffectDynamicsProcessorPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectDynamicsProcessorPreset;
	SetSettings(Settings: SubmixEffectDynamicsProcessorSettings): void;
	SetExternalSubmix(Submix: SoundSubmix): void;
	SetAudioBus(AudioBus: AudioBus): void;
	ResetKey(): void;
	static C(Other: UObject | any): SubmixEffectDynamicsProcessorPreset;
}

declare class SubmixEffectEQBand { 
	Frequency: number;
	Bandwidth: number;
	GainDb: number;
	bEnabled: boolean;
	clone() : SubmixEffectEQBand;
	static C(Other: UObject | any): SubmixEffectEQBand;
}

declare class SubmixEffectSubmixEQSettings { 
	EQBands: SubmixEffectEQBand[];
	clone() : SubmixEffectSubmixEQSettings;
	static C(Other: UObject | any): SubmixEffectSubmixEQSettings;
}

declare class SubmixEffectSubmixEQPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectSubmixEQSettings;
	static Load(ResourceName: string): SubmixEffectSubmixEQPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectSubmixEQPreset;
	static GetDefaultObject(): SubmixEffectSubmixEQPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectSubmixEQPreset;
	SetSettings(InSettings: SubmixEffectSubmixEQSettings): void;
	static C(Other: UObject | any): SubmixEffectSubmixEQPreset;
}

declare class SubmixEffectReverbSettings { 
	bBypassEarlyReflections: boolean;
	ReflectionsDelay: number;
	GainHF: number;
	ReflectionsGain: number;
	bBypassLateReflections: boolean;
	LateDelay: number;
	DecayTime: number;
	Density: number;
	Diffusion: number;
	AirAbsorptionGainHF: number;
	DecayHFRatio: number;
	LateGain: number;
	Gain: number;
	WetLevel: number;
	DryLevel: number;
	bBypass: boolean;
	clone() : SubmixEffectReverbSettings;
	static C(Other: UObject | any): SubmixEffectReverbSettings;
}

declare class SubmixEffectReverbPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectReverbSettings;
	static Load(ResourceName: string): SubmixEffectReverbPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectReverbPreset;
	static GetDefaultObject(): SubmixEffectReverbPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectReverbPreset;
	SetSettingsWithReverbEffect(InReverbEffect: ReverbEffect,WetLevel: number,DryLevel: number): void;
	SetSettings(InSettings: SubmixEffectReverbSettings): void;
	static C(Other: UObject | any): SubmixEffectReverbPreset;
}

declare class AudioGenerator extends UObject { 
	static Load(ResourceName: string): AudioGenerator;
	static Find(Outer: UObject, ResourceName: string): AudioGenerator;
	static GetDefaultObject(): AudioGenerator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioGenerator;
	static C(Other: UObject | any): AudioGenerator;
}

declare type EQuartzCommandQuantization = 'Bar' | 'Beat' | 'ThirtySecondNote' | 'SixteenthNote' | 'EighthNote' | 'QuarterNote' | 'HalfNote' | 'WholeNote' | 'DottedSixteenthNote' | 'DottedEighthNote' | 'DottedQuarterNote' | 'DottedHalfNote' | 'DottedWholeNote' | 'SixteenthNoteTriplet' | 'EighthNoteTriplet' | 'QuarterNoteTriplet' | 'HalfNoteTriplet' | 'Tick' | 'Count' | 'None' | 'EQuartzCommandQuantization_MAX';
declare var EQuartzCommandQuantization : { Bar:'Bar',Beat:'Beat',ThirtySecondNote:'ThirtySecondNote',SixteenthNote:'SixteenthNote',EighthNote:'EighthNote',QuarterNote:'QuarterNote',HalfNote:'HalfNote',WholeNote:'WholeNote',DottedSixteenthNote:'DottedSixteenthNote',DottedEighthNote:'DottedEighthNote',DottedQuarterNote:'DottedQuarterNote',DottedHalfNote:'DottedHalfNote',DottedWholeNote:'DottedWholeNote',SixteenthNoteTriplet:'SixteenthNoteTriplet',EighthNoteTriplet:'EighthNoteTriplet',QuarterNoteTriplet:'QuarterNoteTriplet',HalfNoteTriplet:'HalfNoteTriplet',Tick:'Tick',Count:'Count',None:'None',EQuartzCommandQuantization_MAX:'EQuartzCommandQuantization_MAX', };
declare class QuartzTransportTimeStamp { 
	Bars: number;
	Beat: number;
	BeatFraction: number;
	Seconds: number;
	clone() : QuartzTransportTimeStamp;
	static C(Other: UObject | any): QuartzTransportTimeStamp;
}

declare class QuartzClockHandle extends UObject { 
	static Load(ResourceName: string): QuartzClockHandle;
	static Find(Outer: UObject, ResourceName: string): QuartzClockHandle;
	static GetDefaultObject(): QuartzClockHandle;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): QuartzClockHandle;
	UnsubscribeFromTimeDivision(WorldContextObject: UObject,InQuantizationBoundary: EQuartzCommandQuantization,ClockHandle?: QuartzClockHandle): {ClockHandle: QuartzClockHandle};
	UnsubscribeFromAllTimeDivisions(WorldContextObject: UObject,ClockHandle?: QuartzClockHandle): {ClockHandle: QuartzClockHandle};
	StopClock(WorldContextObject: UObject,CancelPendingEvents: boolean,ClockHandle?: QuartzClockHandle): {ClockHandle: QuartzClockHandle};
	StartClock(WorldContextObject: UObject,ClockHandle?: QuartzClockHandle): {ClockHandle: QuartzClockHandle};
	ResumeClock(WorldContextObject: UObject,ClockHandle?: QuartzClockHandle): {ClockHandle: QuartzClockHandle};
	PauseClock(WorldContextObject: UObject,ClockHandle?: QuartzClockHandle): {ClockHandle: QuartzClockHandle};
	IsClockRunning(WorldContextObject: UObject): boolean;
	GetTicksPerSecond(WorldContextObject: UObject): number;
	GetThirtySecondNotesPerMinute(WorldContextObject: UObject): number;
	GetSecondsPerTick(WorldContextObject: UObject): number;
	GetMillisecondsPerTick(WorldContextObject: UObject): number;
	GetEstimatedRunTime(WorldContextObject: UObject): number;
	GetDurationOfQuantizationTypeInSeconds(WorldContextObject: UObject,QuantizationType: EQuartzCommandQuantization,Multiplier: number): number;
	GetCurrentTimestamp(WorldContextObject: UObject): QuartzTransportTimeStamp;
	GetBeatsPerMinute(WorldContextObject: UObject): number;
	static C(Other: UObject | any): QuartzClockHandle;
}

declare class TickableWorldSubsystem extends WorldSubsystem { 
	static Load(ResourceName: string): TickableWorldSubsystem;
	static Find(Outer: UObject, ResourceName: string): TickableWorldSubsystem;
	static GetDefaultObject(): TickableWorldSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TickableWorldSubsystem;
	static C(Other: UObject | any): TickableWorldSubsystem;
}

declare type EQuartzTimeSignatureQuantization = 'HalfNote' | 'QuarterNote' | 'EighthNote' | 'SixteenthNote' | 'ThirtySecondNote' | 'Count' | 'EQuartzTimeSignatureQuantization_MAX';
declare var EQuartzTimeSignatureQuantization : { HalfNote:'HalfNote',QuarterNote:'QuarterNote',EighthNote:'EighthNote',SixteenthNote:'SixteenthNote',ThirtySecondNote:'ThirtySecondNote',Count:'Count',EQuartzTimeSignatureQuantization_MAX:'EQuartzTimeSignatureQuantization_MAX', };
declare class QuartzPulseOverrideStep { 
	NumberOfPulses: number;
	PulseDuration: EQuartzCommandQuantization;
	clone() : QuartzPulseOverrideStep;
	static C(Other: UObject | any): QuartzPulseOverrideStep;
}

declare class QuartzTimeSignature { 
	NumBeats: number;
	BeatType: EQuartzTimeSignatureQuantization;
	OptionalPulseOverride: QuartzPulseOverrideStep[];
	clone() : QuartzTimeSignature;
	static C(Other: UObject | any): QuartzTimeSignature;
}

declare class QuartzClockSettings { 
	TimeSignature: QuartzTimeSignature;
	bIgnoreLevelChange: boolean;
	clone() : QuartzClockSettings;
	static C(Other: UObject | any): QuartzClockSettings;
}

declare class QuartzSubsystem extends TickableWorldSubsystem { 
	static Load(ResourceName: string): QuartzSubsystem;
	static Find(Outer: UObject, ResourceName: string): QuartzSubsystem;
	static GetDefaultObject(): QuartzSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): QuartzSubsystem;
	IsQuartzEnabled(): boolean;
	IsClockRunning(WorldContextObject: UObject,ClockName: string): boolean;
	GetRoundTripMinLatency(WorldContextObject: UObject): number;
	GetRoundTripMaxLatency(WorldContextObject: UObject): number;
	GetRoundTripAverageLatency(WorldContextObject: UObject): number;
	GetHandleForClock(WorldContextObject: UObject,ClockName: string): QuartzClockHandle;
	GetGameThreadToAudioRenderThreadMinLatency(WorldContextObject: UObject): number;
	GetGameThreadToAudioRenderThreadMaxLatency(WorldContextObject: UObject): number;
	GetGameThreadToAudioRenderThreadAverageLatency(WorldContextObject: UObject): number;
	GetEstimatedClockRunTime(WorldContextObject: UObject,InClockName: string): number;
	GetDurationOfQuantizationTypeInSeconds(WorldContextObject: UObject,ClockName: string,QuantizationType: EQuartzCommandQuantization,Multiplier: number): number;
	GetCurrentClockTimestamp(WorldContextObject: UObject,InClockName: string): QuartzTransportTimeStamp;
	GetAudioRenderThreadToGameThreadMinLatency(): number;
	GetAudioRenderThreadToGameThreadMaxLatency(): number;
	GetAudioRenderThreadToGameThreadAverageLatency(): number;
	DoesClockExist(WorldContextObject: UObject,ClockName: string): boolean;
	DeleteClockByName(WorldContextObject: UObject,ClockName: string): void;
	DeleteClockByHandle(WorldContextObject: UObject,InClockHandle?: QuartzClockHandle): {InClockHandle: QuartzClockHandle};
	CreateNewClock(WorldContextObject: UObject,ClockName: string,InSettings: QuartzClockSettings,bOverrideSettingsIfClockExists: boolean,bUseAudioEngineClockManager: boolean): QuartzClockHandle;
	static C(Other: UObject | any): QuartzSubsystem;
}

declare class MediaPlayerProxyInterface extends Interface { 
	static Load(ResourceName: string): MediaPlayerProxyInterface;
	static Find(Outer: UObject, ResourceName: string): MediaPlayerProxyInterface;
	static GetDefaultObject(): MediaPlayerProxyInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaPlayerProxyInterface;
	static C(Other: UObject | any): MediaPlayerProxyInterface;
}

declare type EMediaSoundChannels = 'Mono' | 'Stereo' | 'Surround' | 'EMediaSoundChannels_MAX';
declare var EMediaSoundChannels : { Mono:'Mono',Stereo:'Stereo',Surround:'Surround',EMediaSoundChannels_MAX:'EMediaSoundChannels_MAX', };
declare class MediaSource extends UObject { 
	static Load(ResourceName: string): MediaSource;
	static Find(Outer: UObject, ResourceName: string): MediaSource;
	static GetDefaultObject(): MediaSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaSource;
	Validate(): boolean;
	SetMediaOptionString(Key: string,Value: string): void;
	SetMediaOptionInt64(Key: string,Value: number): void;
	SetMediaOptionFloat(Key: string,Value: number): void;
	SetMediaOptionBool(Key: string,Value: boolean): void;
	GetUrl(): string;
	static C(Other: UObject | any): MediaSource;
}

declare class MediaPlaylist extends UObject { 
	Items: MediaSource[];
	static Load(ResourceName: string): MediaPlaylist;
	static Find(Outer: UObject, ResourceName: string): MediaPlaylist;
	static GetDefaultObject(): MediaPlaylist;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaPlaylist;
	Replace(Index: number,Replacement: MediaSource): boolean;
	RemoveAt(Index: number): boolean;
	Remove(MediaSource: MediaSource): boolean;
	Num(): number;
	Insert(MediaSource: MediaSource,Index: number): void;
	GetRandom(OutIndex?: number): {OutIndex: number, $: MediaSource};
	GetPrevious(InOutIndex?: number): {InOutIndex: number, $: MediaSource};
	GetNext(InOutIndex?: number): {InOutIndex: number, $: MediaSource};
	Get(Index: number): MediaSource;
	AddUrl(URL: string): boolean;
	AddFile(FilePath: string): boolean;
	Add(MediaSource: MediaSource): boolean;
	static C(Other: UObject | any): MediaPlaylist;
}

declare type EMediaPlayerTrack = 'Audio' | 'Caption' | 'Metadata' | 'Script' | 'Subtitle' | 'Text' | 'Video' | 'EMediaPlayerTrack_MAX';
declare var EMediaPlayerTrack : { Audio:'Audio',Caption:'Caption',Metadata:'Metadata',Script:'Script',Subtitle:'Subtitle',Text:'Text',Video:'Video',EMediaPlayerTrack_MAX:'EMediaPlayerTrack_MAX', };
declare class MediaPlayerTrackOptions { 
	Audio: number;
	Caption: number;
	MetaData: number;
	Script: number;
	Subtitle: number;
	Text: number;
	Video: number;
	clone() : MediaPlayerTrackOptions;
	static C(Other: UObject | any): MediaPlayerTrackOptions;
}

declare type EMediaPlayerOptionBooleanOverride = 'UseMediaPlayerSetting' | 'Enabled' | 'Disabled' | 'EMediaPlayerOptionBooleanOverride_MAX';
declare var EMediaPlayerOptionBooleanOverride : { UseMediaPlayerSetting:'UseMediaPlayerSetting',Enabled:'Enabled',Disabled:'Disabled',EMediaPlayerOptionBooleanOverride_MAX:'EMediaPlayerOptionBooleanOverride_MAX', };
declare class MediaPlayerOptions { 
	Tracks: MediaPlayerTrackOptions;
	SeekTime: Timespan;
	PlayOnOpen: EMediaPlayerOptionBooleanOverride;
	loop: EMediaPlayerOptionBooleanOverride;
	clone() : MediaPlayerOptions;
	static C(Other: UObject | any): MediaPlayerOptions;
}

declare class MediaTimeStampInfo extends UObject { 
	Time: Timespan;
	SequenceIndex: number;
	static Load(ResourceName: string): MediaTimeStampInfo;
	static Find(Outer: UObject, ResourceName: string): MediaTimeStampInfo;
	static GetDefaultObject(): MediaTimeStampInfo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaTimeStampInfo;
	static C(Other: UObject | any): MediaTimeStampInfo;
}

declare class MediaPlayer extends UObject { 
	OnEndReached: UnrealEngineMulticastDelegate<() => void>;
	OnMediaClosed: UnrealEngineMulticastDelegate<() => void>;
	OnMediaOpened: UnrealEngineMulticastDelegate<(OpenedUrl: string) => void>;
	OnMediaOpenFailed: UnrealEngineMulticastDelegate<(FailedUrl: string) => void>;
	OnPlaybackResumed: UnrealEngineMulticastDelegate<() => void>;
	OnPlaybackSuspended: UnrealEngineMulticastDelegate<() => void>;
	OnSeekCompleted: UnrealEngineMulticastDelegate<() => void>;
	OnTracksChanged: UnrealEngineMulticastDelegate<() => void>;
	CacheAhead: Timespan;
	CacheBehind: Timespan;
	CacheBehindGame: Timespan;
	NativeAudioOut: boolean;
	PlayOnOpen: boolean;
	Shuffle: boolean;
	loop: boolean;
	Playlist: MediaPlaylist;
	PlaylistIndex: number;
	TimeDelay: Timespan;
	HorizontalFieldOfView: number;
	VerticalFieldOfView: number;
	ViewRotation: Rotator;
	PlayerGuid: Guid;
	AffectedByPIEHandling: boolean;
	static Load(ResourceName: string): MediaPlayer;
	static Find(Outer: UObject, ResourceName: string): MediaPlayer;
	static GetDefaultObject(): MediaPlayer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaPlayer;
	SupportsSeeking(): boolean;
	SupportsScrubbing(): boolean;
	SupportsRate(Rate: number,Unthinned: boolean): boolean;
	SetViewRotation(Rotation: Rotator,Absolute: boolean): boolean;
	SetViewField(Horizontal: number,Vertical: number,Absolute: boolean): boolean;
	SetVideoTrackFrameRate(TrackIndex: number,FormatIndex: number,FrameRate: number): boolean;
	SetTrackFormat(TrackType: EMediaPlayerTrack,TrackIndex: number,FormatIndex: number): boolean;
	SetTimeDelay(TimeDelay: Timespan): void;
	SetRate(Rate: number): boolean;
	SetNativeVolume(Volume: number): boolean;
	SetMediaOptions(Options: MediaSource): void;
	SetLooping(Looping: boolean): boolean;
	SetDesiredPlayerName(PlayerName: string): void;
	SetBlockOnTime(Time: Timespan): void;
	SelectTrack(TrackType: EMediaPlayerTrack,TrackIndex: number): boolean;
	Seek(Time: Timespan): boolean;
	Rewind(): boolean;
	Reopen(): boolean;
	Previous(): boolean;
	PlayAndSeek(): void;
	Play(): boolean;
	Pause(): boolean;
	OpenUrl(URL: string): boolean;
	OpenSourceWithOptions(MediaSource: MediaSource,Options: MediaPlayerOptions): boolean;
	OpenSourceLatent(WorldContextObject: UObject,LatentInfo: LatentActionInfo,MediaSource: MediaSource,Options: MediaPlayerOptions,bSuccess?: boolean): {bSuccess: boolean};
	OpenSource(MediaSource: MediaSource): boolean;
	OpenPlaylistIndex(InPlaylist: MediaPlaylist,Index: number): boolean;
	OpenPlaylist(InPlaylist: MediaPlaylist): boolean;
	OpenFile(FilePath: string): boolean;
	Next(): boolean;
	IsReady(): boolean;
	IsPreparing(): boolean;
	IsPlaying(): boolean;
	IsPaused(): boolean;
	IsLooping(): boolean;
	IsConnecting(): boolean;
	IsClosed(): boolean;
	IsBuffering(): boolean;
	HasError(): boolean;
	GetViewRotation(): Rotator;
	GetVideoTrackType(TrackIndex: number,FormatIndex: number): string;
	GetVideoTrackFrameRates(TrackIndex: number,FormatIndex: number): FloatRange;
	GetVideoTrackFrameRate(TrackIndex: number,FormatIndex: number): number;
	GetVideoTrackDimensions(TrackIndex: number,FormatIndex: number): IntPoint;
	GetVideoTrackAspectRatio(TrackIndex: number,FormatIndex: number): number;
	GetVerticalFieldOfView(): number;
	GetUrl(): string;
	GetTrackLanguage(TrackType: EMediaPlayerTrack,TrackIndex: number): string;
	GetTrackFormat(TrackType: EMediaPlayerTrack,TrackIndex: number): number;
	GetTrackDisplayName(TrackType: EMediaPlayerTrack,TrackIndex: number): string;
	GetTimeStamp(): MediaTimeStampInfo;
	GetTimeDelay(): Timespan;
	GetTime(): Timespan;
	GetSupportedRates(OutRates?: FloatRange[],Unthinned?: boolean): {OutRates: FloatRange[]};
	GetSelectedTrack(TrackType: EMediaPlayerTrack): number;
	GetRate(): number;
	GetPlaylistIndex(): number;
	GetPlaylist(): MediaPlaylist;
	GetPlayerName(): string;
	GetNumTracks(TrackType: EMediaPlayerTrack): number;
	GetNumTrackFormats(TrackType: EMediaPlayerTrack,TrackIndex: number): number;
	GetMediaName(): string;
	GetHorizontalFieldOfView(): number;
	GetDuration(): Timespan;
	GetDesiredPlayerName(): string;
	GetAudioTrackType(TrackIndex: number,FormatIndex: number): string;
	GetAudioTrackSampleRate(TrackIndex: number,FormatIndex: number): number;
	GetAudioTrackChannels(TrackIndex: number,FormatIndex: number): number;
	Close(): void;
	CanPlayUrl(URL: string): boolean;
	CanPlaySource(MediaSource: MediaSource): boolean;
	CanPause(): boolean;
	static C(Other: UObject | any): MediaPlayer;
}

declare type EMediaSoundComponentFFTSize = 'Min_64' | 'Small_256' | 'Medium_512' | 'Large_1024' | 'EMediaSoundComponentFFTSize_MAX';
declare var EMediaSoundComponentFFTSize : { Min_64:'Min_64',Small_256:'Small_256',Medium_512:'Medium_512',Large_1024:'Large_1024',EMediaSoundComponentFFTSize_MAX:'EMediaSoundComponentFFTSize_MAX', };
declare class MediaSoundComponentSpectralData { 
	FrequencyHz: number;
	Magnitude: number;
	clone() : MediaSoundComponentSpectralData;
	static C(Other: UObject | any): MediaSoundComponentSpectralData;
}

declare class MediaSoundComponent extends SynthComponent { 
	Channels: EMediaSoundChannels;
	DynamicRateAdjustment: boolean;
	RateAdjustmentFactor: number;
	RateAdjustmentRange: FloatRange;
	MediaPlayer: MediaPlayer;
	static Load(ResourceName: string): MediaSoundComponent;
	static Find(Outer: UObject, ResourceName: string): MediaSoundComponent;
	static GetDefaultObject(): MediaSoundComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaSoundComponent;
	SetSpectralAnalysisSettings(InFrequenciesToAnalyze: number[],InFFTSize: EMediaSoundComponentFFTSize): void;
	SetMediaPlayer(NewMediaPlayer: MediaPlayer): void;
	SetEnvelopeFollowingsettings(AttackTimeMsec: number,ReleaseTimeMsec: number): void;
	SetEnableSpectralAnalysis(bInSpectralAnalysisEnabled: boolean): void;
	SetEnableEnvelopeFollowing(bInEnvelopeFollowing: boolean): void;
	GetSpectralData(): MediaSoundComponentSpectralData[];
	GetNormalizedSpectralData(): MediaSoundComponentSpectralData[];
	GetMediaPlayer(): MediaPlayer;
	GetEnvelopeValue(): number;
	BP_GetAttenuationSettingsToApply(OutAttenuationSettings?: SoundAttenuationSettings): {OutAttenuationSettings: SoundAttenuationSettings, $: boolean};
	static C(Other: UObject | any): MediaSoundComponent;
}

declare type MediaTextureOutputFormat = 'MTOF_Default' | 'MTOF_SRGB_LINOUT' | 'MTOF_MAX';
declare var MediaTextureOutputFormat : { MTOF_Default:'MTOF_Default',MTOF_SRGB_LINOUT:'MTOF_SRGB_LINOUT',MTOF_MAX:'MTOF_MAX', };
declare type MediaTextureOrientation = 'MTORI_Original' | 'MTORI_CW90' | 'MTORI_CW180' | 'MTORI_CW270' | 'MTORI_MAX';
declare var MediaTextureOrientation : { MTORI_Original:'MTORI_Original',MTORI_CW90:'MTORI_CW90',MTORI_CW180:'MTORI_CW180',MTORI_CW270:'MTORI_CW270',MTORI_MAX:'MTORI_MAX', };
declare class MediaTexture extends Texture { 
	AddressX: TextureAddress;
	AddressY: TextureAddress;
	AutoClear: boolean;
	ClearColor: LinearColor;
	EnableGenMips: boolean;
	NumMips: number;
	NewStyleOutput: boolean;
	OutputFormat: MediaTextureOutputFormat;
	CurrentAspectRatio: number;
	CurrentOrientation: MediaTextureOrientation;
	MediaPlayer: MediaPlayer;
	static Load(ResourceName: string): MediaTexture;
	static Find(Outer: UObject, ResourceName: string): MediaTexture;
	static GetDefaultObject(): MediaTexture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaTexture;
	UpdateResource(): void;
	SetMediaPlayer(NewMediaPlayer: MediaPlayer): void;
	GetWidth(): number;
	GetTextureNumMips(): number;
	GetMediaPlayer(): MediaPlayer;
	GetHeight(): number;
	GetAspectRatio(): number;
	static C(Other: UObject | any): MediaTexture;
}

declare class BaseMediaSource extends MediaSource { 
	PlatformPlayerNames: Map<string, string>;
	PlayerName: string;
	static Load(ResourceName: string): BaseMediaSource;
	static Find(Outer: UObject, ResourceName: string): BaseMediaSource;
	static GetDefaultObject(): BaseMediaSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseMediaSource;
	static C(Other: UObject | any): BaseMediaSource;
}

declare class FileMediaSource extends BaseMediaSource { 
	FilePath: string;
	PrecacheFile: boolean;
	static Load(ResourceName: string): FileMediaSource;
	static Find(Outer: UObject, ResourceName: string): FileMediaSource;
	static GetDefaultObject(): FileMediaSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FileMediaSource;
	SetFilePath(Path: string): void;
	static C(Other: UObject | any): FileMediaSource;
}

declare class MediaComponent extends ActorComponent { 
	MediaTexture: MediaTexture;
	MediaPlayer: MediaPlayer;
	static Load(ResourceName: string): MediaComponent;
	static Find(Outer: UObject, ResourceName: string): MediaComponent;
	static GetDefaultObject(): MediaComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaComponent;
	GetMediaTexture(): MediaTexture;
	GetMediaPlayer(): MediaPlayer;
	static C(Other: UObject | any): MediaComponent;
}

declare class PlatformMediaSource extends MediaSource { 
	PlatformMediaSources: Map<string, MediaSource>;
	MediaSource: MediaSource;
	static Load(ResourceName: string): PlatformMediaSource;
	static Find(Outer: UObject, ResourceName: string): PlatformMediaSource;
	static GetDefaultObject(): PlatformMediaSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlatformMediaSource;
	static C(Other: UObject | any): PlatformMediaSource;
}

declare class StreamMediaSource extends BaseMediaSource { 
	StreamUrl: string;
	static Load(ResourceName: string): StreamMediaSource;
	static Find(Outer: UObject, ResourceName: string): StreamMediaSource;
	static GetDefaultObject(): StreamMediaSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StreamMediaSource;
	static C(Other: UObject | any): StreamMediaSource;
}

declare class TimeSynchronizableMediaSource extends BaseMediaSource { 
	bUseTimeSynchronization: boolean;
	FrameDelay: number;
	TimeDelay: number;
	bAutoDetectInput: boolean;
	static Load(ResourceName: string): TimeSynchronizableMediaSource;
	static Find(Outer: UObject, ResourceName: string): TimeSynchronizableMediaSource;
	static GetDefaultObject(): TimeSynchronizableMediaSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimeSynchronizableMediaSource;
	static C(Other: UObject | any): TimeSynchronizableMediaSource;
}

declare class MediaCaptureDevice { 
	DisplayName: string;
	URL: string;
	clone() : MediaCaptureDevice;
	static C(Other: UObject | any): MediaCaptureDevice;
}

declare class MediaBlueprintFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MediaBlueprintFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): MediaBlueprintFunctionLibrary;
	static GetDefaultObject(): MediaBlueprintFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaBlueprintFunctionLibrary;
	static EnumerateWebcamCaptureDevices(OutDevices?: MediaCaptureDevice[],Filter?: number): {OutDevices: MediaCaptureDevice[]};
	static EnumerateVideoCaptureDevices(OutDevices?: MediaCaptureDevice[],Filter?: number): {OutDevices: MediaCaptureDevice[]};
	static EnumerateAudioCaptureDevices(OutDevices?: MediaCaptureDevice[],Filter?: number): {OutDevices: MediaCaptureDevice[]};
	static C(Other: UObject | any): MediaBlueprintFunctionLibrary;
}

declare class DefaultLevelSequenceInstanceData extends UObject { 
	TransformOriginActor: Actor;
	TransformOrigin: Transform;
	static Load(ResourceName: string): DefaultLevelSequenceInstanceData;
	static Find(Outer: UObject, ResourceName: string): DefaultLevelSequenceInstanceData;
	static GetDefaultObject(): DefaultLevelSequenceInstanceData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DefaultLevelSequenceInstanceData;
	static C(Other: UObject | any): DefaultLevelSequenceInstanceData;
}

declare class LevelSequenceMetaData extends Interface { 
	static Load(ResourceName: string): LevelSequenceMetaData;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceMetaData;
	static GetDefaultObject(): LevelSequenceMetaData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceMetaData;
	static C(Other: UObject | any): LevelSequenceMetaData;
}

declare class ReplicatedLevelSequenceActor extends LevelSequenceActor { 
	static GetDefaultObject(): ReplicatedLevelSequenceActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReplicatedLevelSequenceActor;
	static C(Other: UObject | any): ReplicatedLevelSequenceActor;
}

declare class LevelSequenceDirector extends UObject { 
	Player: LevelSequencePlayer;
	SubSequenceID: number;
	MovieScenePlayerIndex: number;
	static Load(ResourceName: string): LevelSequenceDirector;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceDirector;
	static GetDefaultObject(): LevelSequenceDirector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceDirector;
	OnCreated(): void;
	GetSequence(): MovieSceneSequence;
	GetMasterSequenceTime(): QualifiedFrameTime;
	GetCurrentTime(): QualifiedFrameTime;
	GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): UObject[];
	GetBoundObject(ObjectBinding: MovieSceneObjectBindingID): UObject;
	GetBoundActors(ObjectBinding: MovieSceneObjectBindingID): Actor[];
	GetBoundActor(ObjectBinding: MovieSceneObjectBindingID): Actor;
	static C(Other: UObject | any): LevelSequenceDirector;
}

declare class LegacyLevelSequenceDirectorBlueprint extends Blueprint { 
	static Load(ResourceName: string): LegacyLevelSequenceDirectorBlueprint;
	static Find(Outer: UObject, ResourceName: string): LegacyLevelSequenceDirectorBlueprint;
	static GetDefaultObject(): LegacyLevelSequenceDirectorBlueprint;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyLevelSequenceDirectorBlueprint;
	static C(Other: UObject | any): LegacyLevelSequenceDirectorBlueprint;
}

declare class LevelSequenceProjectSettings extends DeveloperSettings { 
	bDefaultLockEngineToDisplayRate: boolean;
	DefaultDisplayRate: string;
	DefaultTickResolution: string;
	DefaultClockSource: EUpdateClockSource;
	static Load(ResourceName: string): LevelSequenceProjectSettings;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceProjectSettings;
	static GetDefaultObject(): LevelSequenceProjectSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceProjectSettings;
	static C(Other: UObject | any): LevelSequenceProjectSettings;
}

declare class LevelSequenceMediaController extends Actor { 
	Sequence: LevelSequenceActor;
	MediaComponent: MediaComponent;
	ServerStartTimeSeconds: number;
	static GetDefaultObject(): LevelSequenceMediaController;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceMediaController;
	SynchronizeToServer(DesyncThresholdSeconds: number): void;
	Play(): void;
	OnRep_ServerStartTimeSeconds(): void;
	GetSequence(): LevelSequenceActor;
	GetMediaComponent(): MediaComponent;
	static C(Other: UObject | any): LevelSequenceMediaController;
}

declare class ActorEditorContextSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): ActorEditorContextSubsystem;
	static Find(Outer: UObject, ResourceName: string): ActorEditorContextSubsystem;
	static GetDefaultObject(): ActorEditorContextSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorEditorContextSubsystem;
	static C(Other: UObject | any): ActorEditorContextSubsystem;
}

declare class ActorElementDetailsInterface extends UObject { 
	static Load(ResourceName: string): ActorElementDetailsInterface;
	static Find(Outer: UObject, ResourceName: string): ActorElementDetailsInterface;
	static GetDefaultObject(): ActorElementDetailsInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorElementDetailsInterface;
	static C(Other: UObject | any): ActorElementDetailsInterface;
}

declare class ActorElementAssetDataInterface extends UObject { 
	static Load(ResourceName: string): ActorElementAssetDataInterface;
	static Find(Outer: UObject, ResourceName: string): ActorElementAssetDataInterface;
	static GetDefaultObject(): ActorElementAssetDataInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorElementAssetDataInterface;
	static C(Other: UObject | any): ActorElementAssetDataInterface;
}

declare class ActorElementEditorAssetDataInterface extends ActorElementAssetDataInterface { 
	static Load(ResourceName: string): ActorElementEditorAssetDataInterface;
	static Find(Outer: UObject, ResourceName: string): ActorElementEditorAssetDataInterface;
	static GetDefaultObject(): ActorElementEditorAssetDataInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorElementEditorAssetDataInterface;
	static C(Other: UObject | any): ActorElementEditorAssetDataInterface;
}

declare class ActorElementSelectionInterface extends UObject { 
	static Load(ResourceName: string): ActorElementSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): ActorElementSelectionInterface;
	static GetDefaultObject(): ActorElementSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorElementSelectionInterface;
	static C(Other: UObject | any): ActorElementSelectionInterface;
}

declare class ActorElementEditorSelectionInterface extends ActorElementSelectionInterface { 
	static Load(ResourceName: string): ActorElementEditorSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): ActorElementEditorSelectionInterface;
	static GetDefaultObject(): ActorElementEditorSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorElementEditorSelectionInterface;
	static C(Other: UObject | any): ActorElementEditorSelectionInterface;
}

declare class ActorElementWorldInterface extends UObject { 
	static Load(ResourceName: string): ActorElementWorldInterface;
	static Find(Outer: UObject, ResourceName: string): ActorElementWorldInterface;
	static GetDefaultObject(): ActorElementWorldInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorElementWorldInterface;
	static C(Other: UObject | any): ActorElementWorldInterface;
}

declare class ActorElementEditorWorldInterface extends ActorElementWorldInterface { 
	static Load(ResourceName: string): ActorElementEditorWorldInterface;
	static Find(Outer: UObject, ResourceName: string): ActorElementEditorWorldInterface;
	static GetDefaultObject(): ActorElementEditorWorldInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorElementEditorWorldInterface;
	static C(Other: UObject | any): ActorElementEditorWorldInterface;
}

declare class ActorFactoryAmbientSound extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryAmbientSound;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryAmbientSound;
	static GetDefaultObject(): ActorFactoryAmbientSound;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryAmbientSound;
	static C(Other: UObject | any): ActorFactoryAmbientSound;
}

declare class ActorFactorySkeletalMesh extends ActorFactory { 
	static Load(ResourceName: string): ActorFactorySkeletalMesh;
	static Find(Outer: UObject, ResourceName: string): ActorFactorySkeletalMesh;
	static GetDefaultObject(): ActorFactorySkeletalMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactorySkeletalMesh;
	static C(Other: UObject | any): ActorFactorySkeletalMesh;
}

declare class ActorFactoryAnimationAsset extends ActorFactorySkeletalMesh { 
	static Load(ResourceName: string): ActorFactoryAnimationAsset;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryAnimationAsset;
	static GetDefaultObject(): ActorFactoryAnimationAsset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryAnimationAsset;
	static C(Other: UObject | any): ActorFactoryAnimationAsset;
}

declare class ActorFactoryStaticMesh extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryStaticMesh;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryStaticMesh;
	static GetDefaultObject(): ActorFactoryStaticMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryStaticMesh;
	static C(Other: UObject | any): ActorFactoryStaticMesh;
}

declare class ActorFactoryBasicShape extends ActorFactoryStaticMesh { 
	static Load(ResourceName: string): ActorFactoryBasicShape;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryBasicShape;
	static GetDefaultObject(): ActorFactoryBasicShape;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryBasicShape;
	static C(Other: UObject | any): ActorFactoryBasicShape;
}

declare class ActorFactoryBlueprint extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryBlueprint;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryBlueprint;
	static GetDefaultObject(): ActorFactoryBlueprint;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryBlueprint;
	static C(Other: UObject | any): ActorFactoryBlueprint;
}

declare class ActorFactoryBoxReflectionCapture extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryBoxReflectionCapture;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryBoxReflectionCapture;
	static GetDefaultObject(): ActorFactoryBoxReflectionCapture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryBoxReflectionCapture;
	static C(Other: UObject | any): ActorFactoryBoxReflectionCapture;
}

declare class ActorFactoryCameraActor extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryCameraActor;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryCameraActor;
	static GetDefaultObject(): ActorFactoryCameraActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryCameraActor;
	static C(Other: UObject | any): ActorFactoryCameraActor;
}

declare class ActorFactoryCharacter extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryCharacter;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryCharacter;
	static GetDefaultObject(): ActorFactoryCharacter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryCharacter;
	static C(Other: UObject | any): ActorFactoryCharacter;
}

declare class ActorFactoryClass extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryClass;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryClass;
	static GetDefaultObject(): ActorFactoryClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryClass;
	static C(Other: UObject | any): ActorFactoryClass;
}

declare class ActorFactoryCylinderVolume extends ActorFactoryVolume { 
	static Load(ResourceName: string): ActorFactoryCylinderVolume;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryCylinderVolume;
	static GetDefaultObject(): ActorFactoryCylinderVolume;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryCylinderVolume;
	static C(Other: UObject | any): ActorFactoryCylinderVolume;
}

declare class ActorFactoryDeferredDecal extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryDeferredDecal;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryDeferredDecal;
	static GetDefaultObject(): ActorFactoryDeferredDecal;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryDeferredDecal;
	static C(Other: UObject | any): ActorFactoryDeferredDecal;
}

declare class ActorFactoryDirectionalLight extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryDirectionalLight;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryDirectionalLight;
	static GetDefaultObject(): ActorFactoryDirectionalLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryDirectionalLight;
	static C(Other: UObject | any): ActorFactoryDirectionalLight;
}

declare class ActorFactoryEmitter extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryEmitter;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryEmitter;
	static GetDefaultObject(): ActorFactoryEmitter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryEmitter;
	static C(Other: UObject | any): ActorFactoryEmitter;
}

declare class ActorFactoryEmptyActor extends ActorFactory { 
	bVisualizeActor: boolean;
	static Load(ResourceName: string): ActorFactoryEmptyActor;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryEmptyActor;
	static GetDefaultObject(): ActorFactoryEmptyActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryEmptyActor;
	static C(Other: UObject | any): ActorFactoryEmptyActor;
}

declare class ActorFactoryExponentialHeightFog extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryExponentialHeightFog;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryExponentialHeightFog;
	static GetDefaultObject(): ActorFactoryExponentialHeightFog;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryExponentialHeightFog;
	static C(Other: UObject | any): ActorFactoryExponentialHeightFog;
}

declare class ActorFactoryInteractiveFoliage extends ActorFactoryStaticMesh { 
	static Load(ResourceName: string): ActorFactoryInteractiveFoliage;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryInteractiveFoliage;
	static GetDefaultObject(): ActorFactoryInteractiveFoliage;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryInteractiveFoliage;
	static C(Other: UObject | any): ActorFactoryInteractiveFoliage;
}

declare class ActorFactoryLevelSequence extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryLevelSequence;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryLevelSequence;
	static GetDefaultObject(): ActorFactoryLevelSequence;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryLevelSequence;
	static C(Other: UObject | any): ActorFactoryLevelSequence;
}

declare class ActorFactoryNote extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryNote;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryNote;
	static GetDefaultObject(): ActorFactoryNote;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryNote;
	static C(Other: UObject | any): ActorFactoryNote;
}

declare class ActorFactoryPawn extends ActorFactoryEmptyActor { 
	static Load(ResourceName: string): ActorFactoryPawn;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryPawn;
	static GetDefaultObject(): ActorFactoryPawn;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryPawn;
	static C(Other: UObject | any): ActorFactoryPawn;
}

declare class ActorFactoryPhysicsAsset extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryPhysicsAsset;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryPhysicsAsset;
	static GetDefaultObject(): ActorFactoryPhysicsAsset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryPhysicsAsset;
	static C(Other: UObject | any): ActorFactoryPhysicsAsset;
}

declare class ActorFactoryPlanarReflection extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryPlanarReflection;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryPlanarReflection;
	static GetDefaultObject(): ActorFactoryPlanarReflection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryPlanarReflection;
	static C(Other: UObject | any): ActorFactoryPlanarReflection;
}

declare class ActorFactoryPlaneReflectionCapture extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryPlaneReflectionCapture;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryPlaneReflectionCapture;
	static GetDefaultObject(): ActorFactoryPlaneReflectionCapture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryPlaneReflectionCapture;
	static C(Other: UObject | any): ActorFactoryPlaneReflectionCapture;
}

declare class ActorFactoryPlayerStart extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryPlayerStart;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryPlayerStart;
	static GetDefaultObject(): ActorFactoryPlayerStart;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryPlayerStart;
	static C(Other: UObject | any): ActorFactoryPlayerStart;
}

declare class ActorFactoryPointLight extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryPointLight;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryPointLight;
	static GetDefaultObject(): ActorFactoryPointLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryPointLight;
	static C(Other: UObject | any): ActorFactoryPointLight;
}

declare class ActorFactoryRectLight extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryRectLight;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryRectLight;
	static GetDefaultObject(): ActorFactoryRectLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryRectLight;
	static C(Other: UObject | any): ActorFactoryRectLight;
}

declare class ActorFactoryRuntimeVirtualTextureVolume extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryRuntimeVirtualTextureVolume;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryRuntimeVirtualTextureVolume;
	static GetDefaultObject(): ActorFactoryRuntimeVirtualTextureVolume;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryRuntimeVirtualTextureVolume;
	static C(Other: UObject | any): ActorFactoryRuntimeVirtualTextureVolume;
}

declare class ActorFactorySkyAtmosphere extends ActorFactory { 
	static Load(ResourceName: string): ActorFactorySkyAtmosphere;
	static Find(Outer: UObject, ResourceName: string): ActorFactorySkyAtmosphere;
	static GetDefaultObject(): ActorFactorySkyAtmosphere;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactorySkyAtmosphere;
	static C(Other: UObject | any): ActorFactorySkyAtmosphere;
}

declare class ActorFactorySkyLight extends ActorFactory { 
	static Load(ResourceName: string): ActorFactorySkyLight;
	static Find(Outer: UObject, ResourceName: string): ActorFactorySkyLight;
	static GetDefaultObject(): ActorFactorySkyLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactorySkyLight;
	static C(Other: UObject | any): ActorFactorySkyLight;
}

declare class ActorFactorySphereReflectionCapture extends ActorFactory { 
	static Load(ResourceName: string): ActorFactorySphereReflectionCapture;
	static Find(Outer: UObject, ResourceName: string): ActorFactorySphereReflectionCapture;
	static GetDefaultObject(): ActorFactorySphereReflectionCapture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactorySphereReflectionCapture;
	static C(Other: UObject | any): ActorFactorySphereReflectionCapture;
}

declare class ActorFactorySphereVolume extends ActorFactoryVolume { 
	static Load(ResourceName: string): ActorFactorySphereVolume;
	static Find(Outer: UObject, ResourceName: string): ActorFactorySphereVolume;
	static GetDefaultObject(): ActorFactorySphereVolume;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactorySphereVolume;
	static C(Other: UObject | any): ActorFactorySphereVolume;
}

declare class ActorFactorySpotLight extends ActorFactory { 
	static Load(ResourceName: string): ActorFactorySpotLight;
	static Find(Outer: UObject, ResourceName: string): ActorFactorySpotLight;
	static GetDefaultObject(): ActorFactorySpotLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactorySpotLight;
	static C(Other: UObject | any): ActorFactorySpotLight;
}

declare class ActorFactoryTargetPoint extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryTargetPoint;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryTargetPoint;
	static GetDefaultObject(): ActorFactoryTargetPoint;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryTargetPoint;
	static C(Other: UObject | any): ActorFactoryTargetPoint;
}

declare class ActorFactoryTextRender extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryTextRender;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryTextRender;
	static GetDefaultObject(): ActorFactoryTextRender;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryTextRender;
	static C(Other: UObject | any): ActorFactoryTextRender;
}

declare class ActorFactoryTriggerBox extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryTriggerBox;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryTriggerBox;
	static GetDefaultObject(): ActorFactoryTriggerBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryTriggerBox;
	static C(Other: UObject | any): ActorFactoryTriggerBox;
}

declare class ActorFactoryTriggerCapsule extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryTriggerCapsule;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryTriggerCapsule;
	static GetDefaultObject(): ActorFactoryTriggerCapsule;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryTriggerCapsule;
	static C(Other: UObject | any): ActorFactoryTriggerCapsule;
}

declare class ActorFactoryTriggerSphere extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryTriggerSphere;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryTriggerSphere;
	static GetDefaultObject(): ActorFactoryTriggerSphere;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryTriggerSphere;
	static C(Other: UObject | any): ActorFactoryTriggerSphere;
}

declare class ActorFactoryVectorFieldVolume extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryVectorFieldVolume;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryVectorFieldVolume;
	static GetDefaultObject(): ActorFactoryVectorFieldVolume;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryVectorFieldVolume;
	static C(Other: UObject | any): ActorFactoryVectorFieldVolume;
}

declare class ActorFactoryVolumetricCloud extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryVolumetricCloud;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryVolumetricCloud;
	static GetDefaultObject(): ActorFactoryVolumetricCloud;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryVolumetricCloud;
	static C(Other: UObject | any): ActorFactoryVolumetricCloud;
}

declare class GroupActor extends Actor { 
	bLocked: boolean;
	GroupActors: Actor[];
	SubGroups: GroupActor[];
	static GetDefaultObject(): GroupActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroupActor;
	static C(Other: UObject | any): GroupActor;
}

declare class ActorGroupingUtils extends UObject { 
	static Load(ResourceName: string): ActorGroupingUtils;
	static Find(Outer: UObject, ResourceName: string): ActorGroupingUtils;
	static GetDefaultObject(): ActorGroupingUtils;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorGroupingUtils;
	UnlockSelectedGroups(): void;
	UngroupSelected(): void;
	UngroupActors(ActorsToUngroup: Actor[]): void;
	static SetGroupingActive(bInGroupingActive: boolean): void;
	RemoveSelectedFromGroup(): void;
	LockSelectedGroups(): void;
	static IsGroupingActive(): boolean;
	GroupSelected(): GroupActor;
	GroupActors(ActorsToGroup: Actor[]): GroupActor;
	static Get(): ActorGroupingUtils;
	AddSelectedToGroup(): void;
	static C(Other: UObject | any): ActorGroupingUtils;
}

declare class BlendSpaceFactory1D extends Factory { 
	TargetSkeleton: Skeleton;
	PreviewSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): BlendSpaceFactory1D;
	static Find(Outer: UObject, ResourceName: string): BlendSpaceFactory1D;
	static GetDefaultObject(): BlendSpaceFactory1D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendSpaceFactory1D;
	static C(Other: UObject | any): BlendSpaceFactory1D;
}

declare class AimOffsetBlendSpaceFactory1D extends BlendSpaceFactory1D { 
	static Load(ResourceName: string): AimOffsetBlendSpaceFactory1D;
	static Find(Outer: UObject, ResourceName: string): AimOffsetBlendSpaceFactory1D;
	static GetDefaultObject(): AimOffsetBlendSpaceFactory1D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AimOffsetBlendSpaceFactory1D;
	static C(Other: UObject | any): AimOffsetBlendSpaceFactory1D;
}

declare class BlendSpaceFactoryNew extends Factory { 
	TargetSkeleton: Skeleton;
	PreviewSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): BlendSpaceFactoryNew;
	static Find(Outer: UObject, ResourceName: string): BlendSpaceFactoryNew;
	static GetDefaultObject(): BlendSpaceFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendSpaceFactoryNew;
	static C(Other: UObject | any): BlendSpaceFactoryNew;
}

declare class AimOffsetBlendSpaceFactoryNew extends BlendSpaceFactoryNew { 
	static Load(ResourceName: string): AimOffsetBlendSpaceFactoryNew;
	static Find(Outer: UObject, ResourceName: string): AimOffsetBlendSpaceFactoryNew;
	static GetDefaultObject(): AimOffsetBlendSpaceFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AimOffsetBlendSpaceFactoryNew;
	static C(Other: UObject | any): AimOffsetBlendSpaceFactoryNew;
}

declare class AnalyticsPrivacySettings extends UObject { 
	bSendUsageData: boolean;
	bSuppressIndustryPopup: boolean;
	static Load(ResourceName: string): AnalyticsPrivacySettings;
	static Find(Outer: UObject, ResourceName: string): AnalyticsPrivacySettings;
	static GetDefaultObject(): AnalyticsPrivacySettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnalyticsPrivacySettings;
	static C(Other: UObject | any): AnalyticsPrivacySettings;
}

declare class AnimationBlueprintEditorOptions extends UObject { 
	bHideUnrelatedNodes: boolean;
	static Load(ResourceName: string): AnimationBlueprintEditorOptions;
	static Find(Outer: UObject, ResourceName: string): AnimationBlueprintEditorOptions;
	static GetDefaultObject(): AnimationBlueprintEditorOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationBlueprintEditorOptions;
	static C(Other: UObject | any): AnimationBlueprintEditorOptions;
}

declare class AnimBlueprintFactory extends Factory { 
	BlueprintType: EBlueprintType;
	ParentClass: UnrealEngineClass;
	TargetSkeleton: Skeleton;
	PreviewSkeletalMesh: SkeletalMesh;
	bTemplate: boolean;
	static Load(ResourceName: string): AnimBlueprintFactory;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintFactory;
	static GetDefaultObject(): AnimBlueprintFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintFactory;
	static C(Other: UObject | any): AnimBlueprintFactory;
}

declare class AnimLayerInterfaceFactory extends AnimBlueprintFactory { 
	static Load(ResourceName: string): AnimLayerInterfaceFactory;
	static Find(Outer: UObject, ResourceName: string): AnimLayerInterfaceFactory;
	static GetDefaultObject(): AnimLayerInterfaceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimLayerInterfaceFactory;
	static C(Other: UObject | any): AnimLayerInterfaceFactory;
}

declare class AnimBlueprintSettings extends UObject { 
	bAllowEventGraphs: boolean;
	bAllowMacros: boolean;
	bAllowDelegates: boolean;
	bRestrictBaseFunctionOverrides: boolean;
	BaseFunctionOverrideAllowList: string[];
	static Load(ResourceName: string): AnimBlueprintSettings;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintSettings;
	static GetDefaultObject(): AnimBlueprintSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintSettings;
	static C(Other: UObject | any): AnimBlueprintSettings;
}

declare class AnimBlueprintThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): AnimBlueprintThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintThumbnailRenderer;
	static GetDefaultObject(): AnimBlueprintThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintThumbnailRenderer;
	static C(Other: UObject | any): AnimBlueprintThumbnailRenderer;
}

declare class AnimBoneCompressionSettingsFactory extends Factory { 
	static Load(ResourceName: string): AnimBoneCompressionSettingsFactory;
	static Find(Outer: UObject, ResourceName: string): AnimBoneCompressionSettingsFactory;
	static GetDefaultObject(): AnimBoneCompressionSettingsFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBoneCompressionSettingsFactory;
	static C(Other: UObject | any): AnimBoneCompressionSettingsFactory;
}

declare class AnimCompositeFactory extends Factory { 
	TargetSkeleton: Skeleton;
	SourceAnimation: AnimSequence;
	PreviewSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): AnimCompositeFactory;
	static Find(Outer: UObject, ResourceName: string): AnimCompositeFactory;
	static GetDefaultObject(): AnimCompositeFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimCompositeFactory;
	static C(Other: UObject | any): AnimCompositeFactory;
}

declare class AnimCurveCompressionSettingsFactory extends Factory { 
	static Load(ResourceName: string): AnimCurveCompressionSettingsFactory;
	static Find(Outer: UObject, ResourceName: string): AnimCurveCompressionSettingsFactory;
	static GetDefaultObject(): AnimCurveCompressionSettingsFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimCurveCompressionSettingsFactory;
	static C(Other: UObject | any): AnimCurveCompressionSettingsFactory;
}

declare class AnimMontageFactory extends Factory { 
	TargetSkeleton: Skeleton;
	SourceAnimation: AnimSequence;
	PreviewSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): AnimMontageFactory;
	static Find(Outer: UObject, ResourceName: string): AnimMontageFactory;
	static GetDefaultObject(): AnimMontageFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimMontageFactory;
	static C(Other: UObject | any): AnimMontageFactory;
}

declare class ExporterFBX extends Exporter { 
	static Load(ResourceName: string): ExporterFBX;
	static Find(Outer: UObject, ResourceName: string): ExporterFBX;
	static GetDefaultObject(): ExporterFBX;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExporterFBX;
	static C(Other: UObject | any): ExporterFBX;
}

declare class AnimSequenceExporterFBX extends ExporterFBX { 
	static Load(ResourceName: string): AnimSequenceExporterFBX;
	static Find(Outer: UObject, ResourceName: string): AnimSequenceExporterFBX;
	static GetDefaultObject(): AnimSequenceExporterFBX;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSequenceExporterFBX;
	static C(Other: UObject | any): AnimSequenceExporterFBX;
}

declare class AnimSequenceFactory extends Factory { 
	TargetSkeleton: Skeleton;
	PreviewSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): AnimSequenceFactory;
	static Find(Outer: UObject, ResourceName: string): AnimSequenceFactory;
	static GetDefaultObject(): AnimSequenceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSequenceFactory;
	static C(Other: UObject | any): AnimSequenceFactory;
}

declare class AnimSequenceThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): AnimSequenceThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): AnimSequenceThumbnailRenderer;
	static GetDefaultObject(): AnimSequenceThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSequenceThumbnailRenderer;
	static C(Other: UObject | any): AnimSequenceThumbnailRenderer;
}

declare class AnimStreamableFactory extends Factory { 
	TargetSkeleton: Skeleton;
	SourceAnimation: AnimSequence;
	static Load(ResourceName: string): AnimStreamableFactory;
	static Find(Outer: UObject, ResourceName: string): AnimStreamableFactory;
	static GetDefaultObject(): AnimStreamableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStreamableFactory;
	static C(Other: UObject | any): AnimStreamableFactory;
}

declare class AssetEditorContextObject extends UObject { 
	static Load(ResourceName: string): AssetEditorContextObject;
	static Find(Outer: UObject, ResourceName: string): AssetEditorContextObject;
	static GetDefaultObject(): AssetEditorContextObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetEditorContextObject;
	static C(Other: UObject | any): AssetEditorContextObject;
}

declare class AssetEditor extends UObject { 
	static Load(ResourceName: string): AssetEditor;
	static Find(Outer: UObject, ResourceName: string): AssetEditor;
	static GetDefaultObject(): AssetEditor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetEditor;
	static C(Other: UObject | any): AssetEditor;
}

declare class AssetEditorSubsystem extends EditorSubsystem { 
	OwnedAssetEditors: AssetEditor[];
	static Load(ResourceName: string): AssetEditorSubsystem;
	static Find(Outer: UObject, ResourceName: string): AssetEditorSubsystem;
	static GetDefaultObject(): AssetEditorSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetEditorSubsystem;
	OpenEditorForAssets(Assets: UObject[]): boolean;
	CloseAllEditorsForAsset(Asset: UObject): number;
	static C(Other: UObject | any): AssetEditorSubsystem;
}

declare class AssetEditorToolkitMenuContext extends UObject { 
	static Load(ResourceName: string): AssetEditorToolkitMenuContext;
	static Find(Outer: UObject, ResourceName: string): AssetEditorToolkitMenuContext;
	static GetDefaultObject(): AssetEditorToolkitMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetEditorToolkitMenuContext;
	GetEditingObjects(): UObject[];
	static C(Other: UObject | any): AssetEditorToolkitMenuContext;
}

declare class IniStringValue { 
	Section: string;
	Key: string;
	Value: string;
	Filename: string;
	clone() : IniStringValue;
	static C(Other: UObject | any): IniStringValue;
}

declare class AssetGuideline extends AssetUserData { 
	Plugins: string[];
	ProjectSettings: IniStringValue[];
	GuidelineName: string;
	static Load(ResourceName: string): AssetGuideline;
	static Find(Outer: UObject, ResourceName: string): AssetGuideline;
	static GetDefaultObject(): AssetGuideline;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetGuideline;
	static C(Other: UObject | any): AssetGuideline;
}

declare class Commandlet extends UObject { 
	HelpDescription: string;
	HelpUsage: string;
	HelpWebLink: string;
	HelpParamNames: string[];
	HelpParamDescriptions: string[];
	IsServer: boolean;
	IsClient: boolean;
	IsEditor: boolean;
	LogToConsole: boolean;
	ShowErrorCount: boolean;
	ShowProgress: boolean;
	static Load(ResourceName: string): Commandlet;
	static Find(Outer: UObject, ResourceName: string): Commandlet;
	static GetDefaultObject(): Commandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Commandlet;
	static C(Other: UObject | any): Commandlet;
}

declare class AssetRegUtilCommandlet extends Commandlet { 
	static Load(ResourceName: string): AssetRegUtilCommandlet;
	static Find(Outer: UObject, ResourceName: string): AssetRegUtilCommandlet;
	static GetDefaultObject(): AssetRegUtilCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetRegUtilCommandlet;
	static C(Other: UObject | any): AssetRegUtilCommandlet;
}

declare class AssetRegistryDumpCommandlet extends Commandlet { 
	static Load(ResourceName: string): AssetRegistryDumpCommandlet;
	static Find(Outer: UObject, ResourceName: string): AssetRegistryDumpCommandlet;
	static GetDefaultObject(): AssetRegistryDumpCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetRegistryDumpCommandlet;
	static C(Other: UObject | any): AssetRegistryDumpCommandlet;
}

declare class AssetSizeQueryCommandlet extends Commandlet { 
	static Load(ResourceName: string): AssetSizeQueryCommandlet;
	static Find(Outer: UObject, ResourceName: string): AssetSizeQueryCommandlet;
	static GetDefaultObject(): AssetSizeQueryCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetSizeQueryCommandlet;
	static C(Other: UObject | any): AssetSizeQueryCommandlet;
}

declare class AudioMixerCommandlet extends Commandlet { 
	static Load(ResourceName: string): AudioMixerCommandlet;
	static Find(Outer: UObject, ResourceName: string): AudioMixerCommandlet;
	static GetDefaultObject(): AudioMixerCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioMixerCommandlet;
	static C(Other: UObject | any): AudioMixerCommandlet;
}

declare class AutoReimportManager extends UObject { 
	static Load(ResourceName: string): AutoReimportManager;
	static Find(Outer: UObject, ResourceName: string): AutoReimportManager;
	static GetDefaultObject(): AutoReimportManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutoReimportManager;
	static C(Other: UObject | any): AutoReimportManager;
}

declare class BaseIteratePackagesCommandlet extends Commandlet { 
	static Load(ResourceName: string): BaseIteratePackagesCommandlet;
	static Find(Outer: UObject, ResourceName: string): BaseIteratePackagesCommandlet;
	static GetDefaultObject(): BaseIteratePackagesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseIteratePackagesCommandlet;
	static C(Other: UObject | any): BaseIteratePackagesCommandlet;
}

declare class BaseWidgetBlueprint extends UserWidgetBlueprint { 
	WidgetTree: WidgetTree;
	static Load(ResourceName: string): BaseWidgetBlueprint;
	static Find(Outer: UObject, ResourceName: string): BaseWidgetBlueprint;
	static GetDefaultObject(): BaseWidgetBlueprint;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseWidgetBlueprint;
	static C(Other: UObject | any): BaseWidgetBlueprint;
}

declare class BlendSpaceThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): BlendSpaceThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): BlendSpaceThumbnailRenderer;
	static GetDefaultObject(): BlendSpaceThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendSpaceThumbnailRenderer;
	static C(Other: UObject | any): BlendSpaceThumbnailRenderer;
}

declare class BlueprintEditorProjectSettings extends DeveloperSettings { 
	bForceAllDependenciesToRecompile: boolean;
	bValidateUnloadedSoftActorReferences: boolean;
	bEnableChildActorExpansionInTreeView: boolean;
	DefaultChildActorTreeViewMode: EChildActorComponentTreeViewVisualizationMode;
	NamespacesToAlwaysInclude: string[];
	DisabledCompilerMessagesExceptEditor: string[];
	DisabledCompilerMessages: string[];
	SuppressedDeprecationMessages: string[];
	BaseClassesToAllowRecompilingDuringPlayInEditor: Class[];
	static Load(ResourceName: string): BlueprintEditorProjectSettings;
	static Find(Outer: UObject, ResourceName: string): BlueprintEditorProjectSettings;
	static GetDefaultObject(): BlueprintEditorProjectSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEditorProjectSettings;
	static C(Other: UObject | any): BlueprintEditorProjectSettings;
}

declare class BlueprintFactory extends Factory { 
	ParentClass: UnrealEngineClass;
	BlueprintType: EBlueprintType;
	bSkipClassPicker: boolean;
	static Load(ResourceName: string): BlueprintFactory;
	static Find(Outer: UObject, ResourceName: string): BlueprintFactory;
	static GetDefaultObject(): BlueprintFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFactory;
	static C(Other: UObject | any): BlueprintFactory;
}

declare class BlueprintFunctionLibraryFactory extends BlueprintFactory { 
	static Load(ResourceName: string): BlueprintFunctionLibraryFactory;
	static Find(Outer: UObject, ResourceName: string): BlueprintFunctionLibraryFactory;
	static GetDefaultObject(): BlueprintFunctionLibraryFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFunctionLibraryFactory;
	static C(Other: UObject | any): BlueprintFunctionLibraryFactory;
}

declare class BlueprintInterfaceFactory extends BlueprintFactory { 
	static Load(ResourceName: string): BlueprintInterfaceFactory;
	static Find(Outer: UObject, ResourceName: string): BlueprintInterfaceFactory;
	static GetDefaultObject(): BlueprintInterfaceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintInterfaceFactory;
	static C(Other: UObject | any): BlueprintInterfaceFactory;
}

declare class BlueprintMacroFactory extends BlueprintFactory { 
	static Load(ResourceName: string): BlueprintMacroFactory;
	static Find(Outer: UObject, ResourceName: string): BlueprintMacroFactory;
	static GetDefaultObject(): BlueprintMacroFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintMacroFactory;
	static C(Other: UObject | any): BlueprintMacroFactory;
}

declare class BrushEditingSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): BrushEditingSubsystem;
	static Find(Outer: UObject, ResourceName: string): BrushEditingSubsystem;
	static GetDefaultObject(): BrushEditingSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrushEditingSubsystem;
	static C(Other: UObject | any): BrushEditingSubsystem;
}

declare class CanvasRenderTarget2DFactoryNew extends Factory { 
	Width: number;
	Height: number;
	Format: number;
	static Load(ResourceName: string): CanvasRenderTarget2DFactoryNew;
	static Find(Outer: UObject, ResourceName: string): CanvasRenderTarget2DFactoryNew;
	static GetDefaultObject(): CanvasRenderTarget2DFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CanvasRenderTarget2DFactoryNew;
	static C(Other: UObject | any): CanvasRenderTarget2DFactoryNew;
}

declare class CascadeOptions extends UObject { 
	bShowModuleDump: boolean;
	BackgroundColor: Color;
	bUseSubMenus: boolean;
	bUseSpaceBarReset: boolean;
	bUseSpaceBarResetInLevel: boolean;
	Empty_Background: Color;
	Emitter_Background: Color;
	Emitter_Unselected: Color;
	Emitter_Selected: Color;
	ModuleColor_General_Unselected: Color;
	ModuleColor_General_Selected: Color;
	ModuleColor_TypeData_Unselected: Color;
	ModuleColor_TypeData_Selected: Color;
	ModuleColor_Beam_Unselected: Color;
	ModuleColor_Beam_Selected: Color;
	ModuleColor_Trail_Unselected: Color;
	ModuleColor_Trail_Selected: Color;
	ModuleColor_Spawn_Unselected: Color;
	ModuleColor_Spawn_Selected: Color;
	ModuleColor_Light_Unselected: Color;
	ModuleColor_Light_Selected: Color;
	ModuleColor_SubUV_Unselected: Color;
	ModuleColor_SubUV_Selected: Color;
	ModuleColor_Required_Unselected: Color;
	ModuleColor_Required_Selected: Color;
	ModuleColor_Event_Unselected: Color;
	ModuleColor_Event_Selected: Color;
	bShowGrid: boolean;
	GridColor_Hi: Color;
	GridColor_Low: Color;
	GridPerspectiveSize: number;
	bShowParticleCounts: boolean;
	bShowParticleEvents: boolean;
	bShowParticleTimes: boolean;
	bShowParticleDistance: boolean;
	bShowParticleMemory: boolean;
	ParticleMemoryUpdateTime: number;
	bShowFloor: boolean;
	FloorMesh: string;
	FloorPosition: Vector;
	FloorRotation: Rotator;
	FloorScale: number;
	FloorScale3D: Vector;
	ShowPPFlags: number;
	bUseSlimCascadeDraw: boolean;
	SlimCascadeDrawHeight: number;
	bCenterCascadeModuleText: boolean;
	Cascade_MouseMoveThreshold: number;
	MotionModeRadius: number;
	static Load(ResourceName: string): CascadeOptions;
	static Find(Outer: UObject, ResourceName: string): CascadeOptions;
	static GetDefaultObject(): CascadeOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CascadeOptions;
	static C(Other: UObject | any): CascadeOptions;
}

declare class ChunkDependency { 
	ChunkID: number;
	ParentChunkID: number;
	clone() : ChunkDependency;
	static C(Other: UObject | any): ChunkDependency;
}

declare class ChunkDependencyInfo extends UObject { 
	DependencyArray: ChunkDependency[];
	static Load(ResourceName: string): ChunkDependencyInfo;
	static Find(Outer: UObject, ResourceName: string): ChunkDependencyInfo;
	static GetDefaultObject(): ChunkDependencyInfo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ChunkDependencyInfo;
	static C(Other: UObject | any): ChunkDependencyInfo;
}

declare class ClassThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): ClassThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): ClassThumbnailRenderer;
	static GetDefaultObject(): ClassThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClassThumbnailRenderer;
	static C(Other: UObject | any): ClassThumbnailRenderer;
}

declare type EClassViewerDeveloperType = 'CVDT_None' | 'CVDT_CurrentUser' | 'CVDT_All' | 'CVDT_Max';
declare var EClassViewerDeveloperType : { CVDT_None:'CVDT_None',CVDT_CurrentUser:'CVDT_CurrentUser',CVDT_All:'CVDT_All',CVDT_Max:'CVDT_Max', };
declare class ClassViewerSettings extends UObject { 
	AllowedClasses: string[];
	DisplayInternalClasses: boolean;
	DeveloperFolderType: EClassViewerDeveloperType;
	static Load(ResourceName: string): ClassViewerSettings;
	static Find(Outer: UObject, ResourceName: string): ClassViewerSettings;
	static GetDefaultObject(): ClassViewerSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClassViewerSettings;
	static C(Other: UObject | any): ClassViewerSettings;
}

declare class CompileAllBlueprintsCommandlet extends Commandlet { 
	static Load(ResourceName: string): CompileAllBlueprintsCommandlet;
	static Find(Outer: UObject, ResourceName: string): CompileAllBlueprintsCommandlet;
	static GetDefaultObject(): CompileAllBlueprintsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompileAllBlueprintsCommandlet;
	static C(Other: UObject | any): CompileAllBlueprintsCommandlet;
}

declare class CompileShadersTestBedCommandlet extends Commandlet { 
	static Load(ResourceName: string): CompileShadersTestBedCommandlet;
	static Find(Outer: UObject, ResourceName: string): CompileShadersTestBedCommandlet;
	static GetDefaultObject(): CompileShadersTestBedCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompileShadersTestBedCommandlet;
	static C(Other: UObject | any): CompileShadersTestBedCommandlet;
}

declare class ComponentElementDetailsInterface extends UObject { 
	static Load(ResourceName: string): ComponentElementDetailsInterface;
	static Find(Outer: UObject, ResourceName: string): ComponentElementDetailsInterface;
	static GetDefaultObject(): ComponentElementDetailsInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentElementDetailsInterface;
	static C(Other: UObject | any): ComponentElementDetailsInterface;
}

declare class ComponentElementSelectionInterface extends UObject { 
	static Load(ResourceName: string): ComponentElementSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): ComponentElementSelectionInterface;
	static GetDefaultObject(): ComponentElementSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentElementSelectionInterface;
	static C(Other: UObject | any): ComponentElementSelectionInterface;
}

declare class ComponentElementEditorSelectionInterface extends ComponentElementSelectionInterface { 
	static Load(ResourceName: string): ComponentElementEditorSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): ComponentElementEditorSelectionInterface;
	static GetDefaultObject(): ComponentElementEditorSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentElementEditorSelectionInterface;
	static C(Other: UObject | any): ComponentElementEditorSelectionInterface;
}

declare class ComponentElementWorldInterface extends UObject { 
	static Load(ResourceName: string): ComponentElementWorldInterface;
	static Find(Outer: UObject, ResourceName: string): ComponentElementWorldInterface;
	static GetDefaultObject(): ComponentElementWorldInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentElementWorldInterface;
	static C(Other: UObject | any): ComponentElementWorldInterface;
}

declare class ComponentElementEditorWorldInterface extends ComponentElementWorldInterface { 
	static Load(ResourceName: string): ComponentElementEditorWorldInterface;
	static Find(Outer: UObject, ResourceName: string): ComponentElementEditorWorldInterface;
	static GetDefaultObject(): ComponentElementEditorWorldInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentElementEditorWorldInterface;
	static C(Other: UObject | any): ComponentElementEditorWorldInterface;
}

declare class CompositeCurveTableFactory extends Factory { 
	static Load(ResourceName: string): CompositeCurveTableFactory;
	static Find(Outer: UObject, ResourceName: string): CompositeCurveTableFactory;
	static GetDefaultObject(): CompositeCurveTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositeCurveTableFactory;
	static C(Other: UObject | any): CompositeCurveTableFactory;
}

declare class DataTableFactory extends Factory { 
	struct: ScriptStruct;
	static Load(ResourceName: string): DataTableFactory;
	static Find(Outer: UObject, ResourceName: string): DataTableFactory;
	static GetDefaultObject(): DataTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataTableFactory;
	static C(Other: UObject | any): DataTableFactory;
}

declare class CompositeDataTableFactory extends DataTableFactory { 
	static Load(ResourceName: string): CompositeDataTableFactory;
	static Find(Outer: UObject, ResourceName: string): CompositeDataTableFactory;
	static GetDefaultObject(): CompositeDataTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositeDataTableFactory;
	static C(Other: UObject | any): CompositeDataTableFactory;
}

declare class CompressAnimationsCommandlet extends Commandlet { 
	static Load(ResourceName: string): CompressAnimationsCommandlet;
	static Find(Outer: UObject, ResourceName: string): CompressAnimationsCommandlet;
	static GetDefaultObject(): CompressAnimationsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompressAnimationsCommandlet;
	static C(Other: UObject | any): CompressAnimationsCommandlet;
}

declare class EditorBrushBuilder extends BrushBuilder { 
	static Load(ResourceName: string): EditorBrushBuilder;
	static Find(Outer: UObject, ResourceName: string): EditorBrushBuilder;
	static GetDefaultObject(): EditorBrushBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorBrushBuilder;
	static C(Other: UObject | any): EditorBrushBuilder;
}

declare class ConeBuilder extends EditorBrushBuilder { 
	Z: number;
	CapZ: number;
	OuterRadius: number;
	InnerRadius: number;
	Sides: number;
	GroupName: string;
	AlignToSide: boolean;
	Hollow: boolean;
	static Load(ResourceName: string): ConeBuilder;
	static Find(Outer: UObject, ResourceName: string): ConeBuilder;
	static GetDefaultObject(): ConeBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConeBuilder;
	static C(Other: UObject | any): ConeBuilder;
}

declare class ContentBrowserSettings extends UObject { 
	NumObjectsToLoadBeforeWarning: number;
	bOpenSourcesPanelByDefault: boolean;
	RealTimeThumbnails: boolean;
	DisplayFolders: boolean;
	DisplayEmptyFolders: boolean;
	FilterRecursively: boolean;
	bShowAllFolder: boolean;
	bOrganizeFolders: boolean;
	bDisplayContentFolderSuffix: boolean;
	bDisplayFriendlyNameForPluginFolders: boolean;
	NumObjectsInRecentList: number;
	bEnableRealtimeMaterialInstanceThumbnails: boolean;
	DisplayEngineFolder: boolean;
	DisplayDevelopersFolder: boolean;
	DisplayL10NFolder: boolean;
	DisplayPluginFolders: boolean;
	DisplayFavorites: boolean;
	DockCollections: boolean;
	DisplayCppFolders: boolean;
	IncludeClassNames: boolean;
	IncludeAssetPaths: boolean;
	IncludeCollectionNames: boolean;
	static Load(ResourceName: string): ContentBrowserSettings;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserSettings;
	static GetDefaultObject(): ContentBrowserSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserSettings;
	static C(Other: UObject | any): ContentBrowserSettings;
}

declare class ConvertLevelsToExternalActorsCommandlet extends Commandlet { 
	static Load(ResourceName: string): ConvertLevelsToExternalActorsCommandlet;
	static Find(Outer: UObject, ResourceName: string): ConvertLevelsToExternalActorsCommandlet;
	static GetDefaultObject(): ConvertLevelsToExternalActorsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertLevelsToExternalActorsCommandlet;
	static C(Other: UObject | any): ConvertLevelsToExternalActorsCommandlet;
}

declare class CookCommandlet extends Commandlet { 
	FullGCAssetClassNames: string[];
	static Load(ResourceName: string): CookCommandlet;
	static Find(Outer: UObject, ResourceName: string): CookCommandlet;
	static GetDefaultObject(): CookCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CookCommandlet;
	static C(Other: UObject | any): CookCommandlet;
}

declare class CookGlobalShadersCommandlet extends Commandlet { 
	static Load(ResourceName: string): CookGlobalShadersCommandlet;
	static Find(Outer: UObject, ResourceName: string): CookGlobalShadersCommandlet;
	static GetDefaultObject(): CookGlobalShadersCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CookGlobalShadersCommandlet;
	static C(Other: UObject | any): CookGlobalShadersCommandlet;
}

declare class CookGlobalShadersDeviceHelperBase extends UObject { 
	static Load(ResourceName: string): CookGlobalShadersDeviceHelperBase;
	static Find(Outer: UObject, ResourceName: string): CookGlobalShadersDeviceHelperBase;
	static GetDefaultObject(): CookGlobalShadersDeviceHelperBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CookGlobalShadersDeviceHelperBase;
	static C(Other: UObject | any): CookGlobalShadersDeviceHelperBase;
}

declare class CookGlobalShadersDeviceHelperStaged extends CookGlobalShadersDeviceHelperBase { 
	static Load(ResourceName: string): CookGlobalShadersDeviceHelperStaged;
	static Find(Outer: UObject, ResourceName: string): CookGlobalShadersDeviceHelperStaged;
	static GetDefaultObject(): CookGlobalShadersDeviceHelperStaged;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CookGlobalShadersDeviceHelperStaged;
	static C(Other: UObject | any): CookGlobalShadersDeviceHelperStaged;
}

declare class CookOnTheFlyServer extends UObject { 
	static Load(ResourceName: string): CookOnTheFlyServer;
	static Find(Outer: UObject, ResourceName: string): CookOnTheFlyServer;
	static GetDefaultObject(): CookOnTheFlyServer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CookOnTheFlyServer;
	static C(Other: UObject | any): CookOnTheFlyServer;
}

declare class CrashReporterSettings extends UObject { 
	UploadSymbolsPath: string;
	DownstreamStorage: string;
	RemoteStorage: string[];
	static Load(ResourceName: string): CrashReporterSettings;
	static Find(Outer: UObject, ResourceName: string): CrashReporterSettings;
	static GetDefaultObject(): CrashReporterSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CrashReporterSettings;
	static C(Other: UObject | any): CrashReporterSettings;
}

declare class CrashReportsPrivacySettings extends UObject { 
	bSendUnattendedBugReports: boolean;
	static Load(ResourceName: string): CrashReportsPrivacySettings;
	static Find(Outer: UObject, ResourceName: string): CrashReportsPrivacySettings;
	static GetDefaultObject(): CrashReportsPrivacySettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CrashReportsPrivacySettings;
	static C(Other: UObject | any): CrashReportsPrivacySettings;
}

declare type ECSVImportType = 'ECSV_DataTable' | 'ECSV_CurveTable' | 'ECSV_CurveFloat' | 'ECSV_CurveVector' | 'ECSV_CurveLinearColor' | 'ECSV_MAX';
declare var ECSVImportType : { ECSV_DataTable:'ECSV_DataTable',ECSV_CurveTable:'ECSV_CurveTable',ECSV_CurveFloat:'ECSV_CurveFloat',ECSV_CurveVector:'ECSV_CurveVector',ECSV_CurveLinearColor:'ECSV_CurveLinearColor',ECSV_MAX:'ECSV_MAX', };
declare class CSVImportSettings { 
	ImportRowStruct: ScriptStruct;
	ImportType: ECSVImportType;
	ImportCurveInterpMode: ERichCurveInterpMode;
	clone() : CSVImportSettings;
	static C(Other: UObject | any): CSVImportSettings;
}

declare class CSVImportFactory extends Factory { 
	AutomatedImportSettings: CSVImportSettings;
	DataTableImportOptions: DataTable;
	static Load(ResourceName: string): CSVImportFactory;
	static Find(Outer: UObject, ResourceName: string): CSVImportFactory;
	static GetDefaultObject(): CSVImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CSVImportFactory;
	static C(Other: UObject | any): CSVImportFactory;
}

declare class CubeBuilder extends EditorBrushBuilder { 
	X: number;
	Y: number;
	Z: number;
	WallThickness: number;
	GroupName: string;
	Hollow: boolean;
	Tessellated: boolean;
	static Load(ResourceName: string): CubeBuilder;
	static Find(Outer: UObject, ResourceName: string): CubeBuilder;
	static GetDefaultObject(): CubeBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CubeBuilder;
	static C(Other: UObject | any): CubeBuilder;
}

declare class CurvedStairBuilder extends EditorBrushBuilder { 
	InnerRadius: number;
	StepHeight: number;
	StepWidth: number;
	AngleOfCurve: number;
	NumSteps: number;
	AddToFirstStep: number;
	GroupName: string;
	CounterClockwise: boolean;
	static Load(ResourceName: string): CurvedStairBuilder;
	static Find(Outer: UObject, ResourceName: string): CurvedStairBuilder;
	static GetDefaultObject(): CurvedStairBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurvedStairBuilder;
	static C(Other: UObject | any): CurvedStairBuilder;
}

declare class CurveEdOptions extends UObject { 
	MinViewRange: number;
	MaxViewRange: number;
	BackgroundColor: LinearColor;
	LabelColor: LinearColor;
	SelectedLabelColor: LinearColor;
	GridColor: LinearColor;
	GridTextColor: LinearColor;
	LabelBlockBkgColor: LinearColor;
	SelectedKeyColor: LinearColor;
	static Load(ResourceName: string): CurveEdOptions;
	static Find(Outer: UObject, ResourceName: string): CurveEdOptions;
	static GetDefaultObject(): CurveEdOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveEdOptions;
	static C(Other: UObject | any): CurveEdOptions;
}

declare class CurveFactory extends Factory { 
	CurveClass: UnrealEngineClass;
	static Load(ResourceName: string): CurveFactory;
	static Find(Outer: UObject, ResourceName: string): CurveFactory;
	static GetDefaultObject(): CurveFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveFactory;
	static C(Other: UObject | any): CurveFactory;
}

declare class CurveFloatFactory extends CurveFactory { 
	static Load(ResourceName: string): CurveFloatFactory;
	static Find(Outer: UObject, ResourceName: string): CurveFloatFactory;
	static GetDefaultObject(): CurveFloatFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveFloatFactory;
	static C(Other: UObject | any): CurveFloatFactory;
}

declare class CurveLinearColorFactory extends CurveFactory { 
	static Load(ResourceName: string): CurveLinearColorFactory;
	static Find(Outer: UObject, ResourceName: string): CurveLinearColorFactory;
	static GetDefaultObject(): CurveLinearColorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColorFactory;
	static C(Other: UObject | any): CurveLinearColorFactory;
}

declare class CurveVectorFactory extends CurveFactory { 
	static Load(ResourceName: string): CurveVectorFactory;
	static Find(Outer: UObject, ResourceName: string): CurveVectorFactory;
	static GetDefaultObject(): CurveVectorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveVectorFactory;
	static C(Other: UObject | any): CurveVectorFactory;
}

declare class CurveImportFactory extends Factory { 
	static Load(ResourceName: string): CurveImportFactory;
	static Find(Outer: UObject, ResourceName: string): CurveImportFactory;
	static GetDefaultObject(): CurveImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveImportFactory;
	static C(Other: UObject | any): CurveImportFactory;
}

declare class CurveLinearColorAtlasFactory extends Factory { 
	Width: number;
	Height: number;
	Format: number;
	static Load(ResourceName: string): CurveLinearColorAtlasFactory;
	static Find(Outer: UObject, ResourceName: string): CurveLinearColorAtlasFactory;
	static GetDefaultObject(): CurveLinearColorAtlasFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColorAtlasFactory;
	static C(Other: UObject | any): CurveLinearColorAtlasFactory;
}

declare class CurveLinearColorThumbnailRenderer extends ThumbnailRenderer { 
	static Load(ResourceName: string): CurveLinearColorThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): CurveLinearColorThumbnailRenderer;
	static GetDefaultObject(): CurveLinearColorThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColorThumbnailRenderer;
	static C(Other: UObject | any): CurveLinearColorThumbnailRenderer;
}

declare class CurveTableFactory extends Factory { 
	static Load(ResourceName: string): CurveTableFactory;
	static Find(Outer: UObject, ResourceName: string): CurveTableFactory;
	static GetDefaultObject(): CurveTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveTableFactory;
	static C(Other: UObject | any): CurveTableFactory;
}

declare class CylinderBuilder extends EditorBrushBuilder { 
	Z: number;
	OuterRadius: number;
	InnerRadius: number;
	Sides: number;
	GroupName: string;
	AlignToSide: boolean;
	Hollow: boolean;
	static Load(ResourceName: string): CylinderBuilder;
	static Find(Outer: UObject, ResourceName: string): CylinderBuilder;
	static GetDefaultObject(): CylinderBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CylinderBuilder;
	static C(Other: UObject | any): CylinderBuilder;
}

declare class DataAssetFactory extends Factory { 
	DataAssetClass: UnrealEngineClass;
	static Load(ResourceName: string): DataAssetFactory;
	static Find(Outer: UObject, ResourceName: string): DataAssetFactory;
	static GetDefaultObject(): DataAssetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataAssetFactory;
	static C(Other: UObject | any): DataAssetFactory;
}

declare class DDCCleanupCommandlet extends Commandlet { 
	static Load(ResourceName: string): DDCCleanupCommandlet;
	static Find(Outer: UObject, ResourceName: string): DDCCleanupCommandlet;
	static GetDefaultObject(): DDCCleanupCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DDCCleanupCommandlet;
	static C(Other: UObject | any): DDCCleanupCommandlet;
}

declare type ESkeletonDrawMode = 'Default' | 'Hidden' | 'GreyedOut' | 'ESkeletonDrawMode_MAX';
declare var ESkeletonDrawMode : { Default:'Default',Hidden:'Hidden',GreyedOut:'GreyedOut',ESkeletonDrawMode_MAX:'ESkeletonDrawMode_MAX', };
declare type EProcessRootMotionMode = 'Ignore' | 'Loop' | 'LoopAndReset' | 'EProcessRootMotionMode_MAX';
declare var EProcessRootMotionMode : { Ignore:'Ignore',Loop:'Loop',LoopAndReset:'LoopAndReset',EProcessRootMotionMode_MAX:'EProcessRootMotionMode_MAX', };
declare class DebugSkelMeshComponent extends SkeletalMeshComponent { 
	SkeletonDrawMode: ESkeletonDrawMode;
	bDrawMesh: boolean;
	bShowBoneNames: boolean;
	bDrawBoneInfluences: boolean;
	bDrawMorphTargetVerts: boolean;
	bDrawNormals: boolean;
	bDrawTangents: boolean;
	bDrawBinormals: boolean;
	bDrawSockets: boolean;
	bDrawAttributes: boolean;
	bSkeletonSocketsVisible: boolean;
	bMeshSocketsVisible: boolean;
	bDisplayRawAnimation: boolean;
	bDisplayNonRetargetedPose: boolean;
	bDisplayAdditiveBasePose: boolean;
	bDisplayBakedAnimation: boolean;
	bDisplaySourceAnimation: boolean;
	bDisplayBound: boolean;
	bDisplayVertexColors: boolean;
	WireframeMeshOverlayColor: LinearColor;
	bPreviewRootMotion: boolean;
	ProcessRootMotionMode: EProcessRootMotionMode;
	ConsumeRootMotionPreviousPlaybackTime: number;
	bShowClothData: boolean;
	MinClothPropertyView: number;
	MaxClothPropertyView: number;
	ClothMeshOpacity: number;
	bClothFlipNormal: boolean;
	bClothCullBackface: boolean;
	bRequiredBonesUpToDateDuringTick: boolean;
	BoneRadiusMultiplier: number;
	BonesOfInterest: number[];
	MorphTargetOfInterests: MorphTarget[];
	SkelMaterials: MaterialInterface[];
	PreviewInstance: AnimPreviewInstance;
	SavedAnimScriptInstance: AnimInstance;
	bIsUsingInGameBounds: boolean;
	bIsUsingPreSkinnedBounds: boolean;
	bPerformSingleClothingTick: boolean;
	bPauseClothingSimulationWithAnim: boolean;
	bTrackAttachedInstanceLOD: boolean;
	static Load(ResourceName: string): DebugSkelMeshComponent;
	static Find(Outer: UObject, ResourceName: string): DebugSkelMeshComponent;
	static GetDefaultObject(): DebugSkelMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DebugSkelMeshComponent;
	static C(Other: UObject | any): DebugSkelMeshComponent;
}

declare class DEditorParameterValue extends UObject { 
	bOverride: boolean;
	ParameterInfo: MaterialParameterInfo;
	ExpressionId: Guid;
	Description: string;
	AssetPath: string;
	SortPriority: number;
	static Load(ResourceName: string): DEditorParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorParameterValue;
	static GetDefaultObject(): DEditorParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorParameterValue;
	static C(Other: UObject | any): DEditorParameterValue;
}

declare class DEditorDoubleVectorParameterValue extends DEditorParameterValue { 
	ParameterValue: Vector4d;
	static Load(ResourceName: string): DEditorDoubleVectorParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorDoubleVectorParameterValue;
	static GetDefaultObject(): DEditorDoubleVectorParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorDoubleVectorParameterValue;
	static C(Other: UObject | any): DEditorDoubleVectorParameterValue;
}

declare class DFontParameters { 
	FontValue: Font;
	FontPage: number;
	clone() : DFontParameters;
	static C(Other: UObject | any): DFontParameters;
}

declare class DEditorFontParameterValue extends DEditorParameterValue { 
	ParameterValue: DFontParameters;
	static Load(ResourceName: string): DEditorFontParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorFontParameterValue;
	static GetDefaultObject(): DEditorFontParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorFontParameterValue;
	static C(Other: UObject | any): DEditorFontParameterValue;
}

declare class DEditorMaterialLayersParameterValue extends DEditorParameterValue { 
	ParameterValue: MaterialLayersFunctions;
	static Load(ResourceName: string): DEditorMaterialLayersParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorMaterialLayersParameterValue;
	static GetDefaultObject(): DEditorMaterialLayersParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorMaterialLayersParameterValue;
	static C(Other: UObject | any): DEditorMaterialLayersParameterValue;
}

declare class DEditorRuntimeVirtualTextureParameterValue extends DEditorParameterValue { 
	ParameterValue: RuntimeVirtualTexture;
	static Load(ResourceName: string): DEditorRuntimeVirtualTextureParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorRuntimeVirtualTextureParameterValue;
	static GetDefaultObject(): DEditorRuntimeVirtualTextureParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorRuntimeVirtualTextureParameterValue;
	static C(Other: UObject | any): DEditorRuntimeVirtualTextureParameterValue;
}

declare class ScalarParameterAtlasData { 
	bIsUsedAsAtlasPosition: boolean;
	Curve: CurveLinearColor;
	Atlas: CurveLinearColorAtlas;
	clone() : ScalarParameterAtlasData;
	static C(Other: UObject | any): ScalarParameterAtlasData;
}

declare class DEditorScalarParameterValue extends DEditorParameterValue { 
	ParameterValue: number;
	AtlasData: ScalarParameterAtlasData;
	static Load(ResourceName: string): DEditorScalarParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorScalarParameterValue;
	static GetDefaultObject(): DEditorScalarParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorScalarParameterValue;
	static C(Other: UObject | any): DEditorScalarParameterValue;
}

declare class DComponentMaskParameter { 
	R: boolean;
	G: boolean;
	B: boolean;
	A: boolean;
	clone() : DComponentMaskParameter;
	static C(Other: UObject | any): DComponentMaskParameter;
}

declare class DEditorStaticComponentMaskParameterValue extends DEditorParameterValue { 
	ParameterValue: DComponentMaskParameter;
	static Load(ResourceName: string): DEditorStaticComponentMaskParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorStaticComponentMaskParameterValue;
	static GetDefaultObject(): DEditorStaticComponentMaskParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorStaticComponentMaskParameterValue;
	static C(Other: UObject | any): DEditorStaticComponentMaskParameterValue;
}

declare class DEditorStaticSwitchParameterValue extends DEditorParameterValue { 
	ParameterValue: boolean;
	static Load(ResourceName: string): DEditorStaticSwitchParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorStaticSwitchParameterValue;
	static GetDefaultObject(): DEditorStaticSwitchParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorStaticSwitchParameterValue;
	static C(Other: UObject | any): DEditorStaticSwitchParameterValue;
}

declare class ParameterChannelNames { 
	R: string;
	G: string;
	B: string;
	A: string;
	clone() : ParameterChannelNames;
	static C(Other: UObject | any): ParameterChannelNames;
}

declare class DEditorTextureParameterValue extends DEditorParameterValue { 
	ParameterValue: Texture;
	ChannelNames: ParameterChannelNames;
	static Load(ResourceName: string): DEditorTextureParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorTextureParameterValue;
	static GetDefaultObject(): DEditorTextureParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorTextureParameterValue;
	static C(Other: UObject | any): DEditorTextureParameterValue;
}

declare class DEditorVectorParameterValue extends DEditorParameterValue { 
	ParameterValue: LinearColor;
	bIsUsedAsChannelMask: boolean;
	ChannelNames: ParameterChannelNames;
	static Load(ResourceName: string): DEditorVectorParameterValue;
	static Find(Outer: UObject, ResourceName: string): DEditorVectorParameterValue;
	static GetDefaultObject(): DEditorVectorParameterValue;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorVectorParameterValue;
	static C(Other: UObject | any): DEditorVectorParameterValue;
}

declare class BaseLegacyWidgetEdMode extends EdMode { 
	static Load(ResourceName: string): BaseLegacyWidgetEdMode;
	static Find(Outer: UObject, ResourceName: string): BaseLegacyWidgetEdMode;
	static GetDefaultObject(): BaseLegacyWidgetEdMode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseLegacyWidgetEdMode;
	static C(Other: UObject | any): BaseLegacyWidgetEdMode;
}

declare class EdModeDefault extends BaseLegacyWidgetEdMode { 
	static Load(ResourceName: string): EdModeDefault;
	static Find(Outer: UObject, ResourceName: string): EdModeDefault;
	static GetDefaultObject(): EdModeDefault;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdModeDefault;
	static C(Other: UObject | any): EdModeDefault;
}

declare class DerivedDataCacheCommandlet extends Commandlet { 
	static Load(ResourceName: string): DerivedDataCacheCommandlet;
	static Find(Outer: UObject, ResourceName: string): DerivedDataCacheCommandlet;
	static GetDefaultObject(): DerivedDataCacheCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DerivedDataCacheCommandlet;
	static C(Other: UObject | any): DerivedDataCacheCommandlet;
}

declare class DiffAssetBulkDataCommandlet extends Commandlet { 
	static Load(ResourceName: string): DiffAssetBulkDataCommandlet;
	static Find(Outer: UObject, ResourceName: string): DiffAssetBulkDataCommandlet;
	static GetDefaultObject(): DiffAssetBulkDataCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DiffAssetBulkDataCommandlet;
	static C(Other: UObject | any): DiffAssetBulkDataCommandlet;
}

declare class DiffAssetRegistriesCommandlet extends Commandlet { 
	AssetRegistrySearchPath: string[];
	P4Repository: string;
	P4EngineBasePath: string;
	P4EngineAssetPath: string;
	P4GameBasePath: string;
	P4GameAssetPath: string;
	RegexBranchCL: string;
	static Load(ResourceName: string): DiffAssetRegistriesCommandlet;
	static Find(Outer: UObject, ResourceName: string): DiffAssetRegistriesCommandlet;
	static GetDefaultObject(): DiffAssetRegistriesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DiffAssetRegistriesCommandlet;
	static C(Other: UObject | any): DiffAssetRegistriesCommandlet;
}

declare class DiffAssetsCommandlet extends Commandlet { 
	static Load(ResourceName: string): DiffAssetsCommandlet;
	static Find(Outer: UObject, ResourceName: string): DiffAssetsCommandlet;
	static GetDefaultObject(): DiffAssetsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DiffAssetsCommandlet;
	static C(Other: UObject | any): DiffAssetsCommandlet;
}

declare class DiffFilesCommandlet extends Commandlet { 
	static Load(ResourceName: string): DiffFilesCommandlet;
	static Find(Outer: UObject, ResourceName: string): DiffFilesCommandlet;
	static GetDefaultObject(): DiffFilesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DiffFilesCommandlet;
	static C(Other: UObject | any): DiffFilesCommandlet;
}

declare class DiffPackagesCommandlet extends Commandlet { 
	Packages: Package;
	static Load(ResourceName: string): DiffPackagesCommandlet;
	static Find(Outer: UObject, ResourceName: string): DiffPackagesCommandlet;
	static GetDefaultObject(): DiffPackagesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DiffPackagesCommandlet;
	static C(Other: UObject | any): DiffPackagesCommandlet;
}

declare class DumpAssetRegistryCommandlet extends Commandlet { 
	static Load(ResourceName: string): DumpAssetRegistryCommandlet;
	static Find(Outer: UObject, ResourceName: string): DumpAssetRegistryCommandlet;
	static GetDefaultObject(): DumpAssetRegistryCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DumpAssetRegistryCommandlet;
	static C(Other: UObject | any): DumpAssetRegistryCommandlet;
}

declare class DumpBlueprintsInfoCommandlet extends Commandlet { 
	static Load(ResourceName: string): DumpBlueprintsInfoCommandlet;
	static Find(Outer: UObject, ResourceName: string): DumpBlueprintsInfoCommandlet;
	static GetDefaultObject(): DumpBlueprintsInfoCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DumpBlueprintsInfoCommandlet;
	static C(Other: UObject | any): DumpBlueprintsInfoCommandlet;
}

declare class DumpHiddenCategoriesCommandlet extends Commandlet { 
	static Load(ResourceName: string): DumpHiddenCategoriesCommandlet;
	static Find(Outer: UObject, ResourceName: string): DumpHiddenCategoriesCommandlet;
	static GetDefaultObject(): DumpHiddenCategoriesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DumpHiddenCategoriesCommandlet;
	static C(Other: UObject | any): DumpHiddenCategoriesCommandlet;
}

declare class DumpMaterialExpressionsCommandlet extends Commandlet { 
	static Load(ResourceName: string): DumpMaterialExpressionsCommandlet;
	static Find(Outer: UObject, ResourceName: string): DumpMaterialExpressionsCommandlet;
	static GetDefaultObject(): DumpMaterialExpressionsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DumpMaterialExpressionsCommandlet;
	static C(Other: UObject | any): DumpMaterialExpressionsCommandlet;
}

declare class DumpMaterialShaderTypesCommandlet extends Commandlet { 
	static Load(ResourceName: string): DumpMaterialShaderTypesCommandlet;
	static Find(Outer: UObject, ResourceName: string): DumpMaterialShaderTypesCommandlet;
	static GetDefaultObject(): DumpMaterialShaderTypesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DumpMaterialShaderTypesCommandlet;
	static C(Other: UObject | any): DumpMaterialShaderTypesCommandlet;
}

declare class EdGraphNode_Comment extends EdGraphNode { 
	CommentColor: LinearColor;
	FontSize: number;
	bCommentBubbleVisible_InDetailsPanel: boolean;
	bColorCommentBubble: boolean;
	MoveMode: ECommentBoxMode;
	CommentDepth: number;
	static Load(ResourceName: string): EdGraphNode_Comment;
	static Find(Outer: UObject, ResourceName: string): EdGraphNode_Comment;
	static GetDefaultObject(): EdGraphNode_Comment;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdGraphNode_Comment;
	static C(Other: UObject | any): EdGraphNode_Comment;
}

declare class EditorActorSubsystem extends EditorSubsystem { 
	OnEditCutActorsBegin: UnrealEngineMulticastDelegate<() => void>;
	OnEditCutActorsEnd: UnrealEngineMulticastDelegate<() => void>;
	OnEditCopyActorsBegin: UnrealEngineMulticastDelegate<() => void>;
	OnEditCopyActorsEnd: UnrealEngineMulticastDelegate<() => void>;
	OnEditPasteActorsBegin: UnrealEngineMulticastDelegate<() => void>;
	OnEditPasteActorsEnd: UnrealEngineMulticastDelegate<() => void>;
	OnDuplicateActorsBegin: UnrealEngineMulticastDelegate<() => void>;
	OnDuplicateActorsEnd: UnrealEngineMulticastDelegate<() => void>;
	OnDeleteActorsBegin: UnrealEngineMulticastDelegate<() => void>;
	OnDeleteActorsEnd: UnrealEngineMulticastDelegate<() => void>;
	static Load(ResourceName: string): EditorActorSubsystem;
	static Find(Outer: UObject, ResourceName: string): EditorActorSubsystem;
	static GetDefaultObject(): EditorActorSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorActorSubsystem;
	SpawnActorFromObject(ObjectToUse: UObject,Location: Vector,Rotation: Rotator,bTransient: boolean): Actor;
	SpawnActorFromClass(ActorClass: UnrealEngineClass,Location: Vector,Rotation: Rotator,bTransient: boolean): Actor;
	SetSelectedLevelActors(ActorsToSelect: Actor[]): void;
	SetComponentTransform(InSceneComponent: SceneComponent,InWorldTransform: Transform): boolean;
	SetActorTransform(InActor: Actor,InWorldTransform: Transform): boolean;
	SetActorSelectionState(Actor: Actor,bShouldBeSelected: boolean): void;
	SelectNothing(): void;
	SelectAllChildren(bRecurseChildren: boolean): void;
	SelectAll(InWorld: World): void;
	InvertSelection(InWorld: World): void;
	GetSelectedLevelActors(): Actor[];
	GetAllLevelActorsComponents(): ActorComponent[];
	GetAllLevelActors(): Actor[];
	GetActorReference(PathToActor: string): Actor;
	DuplicateSelectedActors(InWorld: World): void;
	DuplicateActors(ActorsToDuplicate: Actor[],ToWorld: World,Offset: Vector): Actor[];
	DuplicateActor(ActorToDuplicate: Actor,ToWorld: World,Offset: Vector): Actor;
	DestroyActors(ActorsToDestroy: Actor[]): boolean;
	DestroyActor(ActorToDestroy: Actor): boolean;
	DeleteSelectedActors(InWorld: World): void;
	ConvertActors(Actors: Actor[],ActorClass: UnrealEngineClass,StaticMeshPackagePath: string): Actor[];
	ClearActorSelectionSet(): void;
	static C(Other: UObject | any): EditorActorSubsystem;
}

declare class EditorAnimBaseObj extends UObject { 
	static Load(ResourceName: string): EditorAnimBaseObj;
	static Find(Outer: UObject, ResourceName: string): EditorAnimBaseObj;
	static GetDefaultObject(): EditorAnimBaseObj;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorAnimBaseObj;
	static C(Other: UObject | any): EditorAnimBaseObj;
}

declare class EditorAnimCompositeSegment extends EditorAnimBaseObj { 
	AnimSegment: AnimSegment;
	static Load(ResourceName: string): EditorAnimCompositeSegment;
	static Find(Outer: UObject, ResourceName: string): EditorAnimCompositeSegment;
	static GetDefaultObject(): EditorAnimCompositeSegment;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorAnimCompositeSegment;
	static C(Other: UObject | any): EditorAnimCompositeSegment;
}

declare class EditorAnimCurveBoneLinks extends UObject { 
	CurveName: SmartName;
	ConnectedBones: BoneReference[];
	MaxLOD: number;
	static Load(ResourceName: string): EditorAnimCurveBoneLinks;
	static Find(Outer: UObject, ResourceName: string): EditorAnimCurveBoneLinks;
	static GetDefaultObject(): EditorAnimCurveBoneLinks;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorAnimCurveBoneLinks;
	static C(Other: UObject | any): EditorAnimCurveBoneLinks;
}

declare class EditorAnimSegment extends EditorAnimBaseObj { 
	AnimSegment: AnimSegment;
	static Load(ResourceName: string): EditorAnimSegment;
	static Find(Outer: UObject, ResourceName: string): EditorAnimSegment;
	static GetDefaultObject(): EditorAnimSegment;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorAnimSegment;
	static C(Other: UObject | any): EditorAnimSegment;
}

declare class EditorAssetSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): EditorAssetSubsystem;
	static Find(Outer: UObject, ResourceName: string): EditorAssetSubsystem;
	static GetDefaultObject(): EditorAssetSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorAssetSubsystem;
	SetMetadataTag(UObject: UObject,Tag: string,Value: string): void;
	SaveLoadedAssets(AssetsToSave: UObject[],bOnlyIfIsDirty: boolean): boolean;
	SaveLoadedAsset(AssetToSave: UObject,bOnlyIfIsDirty: boolean): boolean;
	SaveDirectory(DirectoryPath: string,bOnlyIfIsDirty: boolean,bRecursive: boolean): boolean;
	SaveAsset(AssetToSave: string,bOnlyIfIsDirty: boolean): boolean;
	RenameLoadedAsset(SourceAsset: UObject,DestinationAssetPath: string): boolean;
	RenameDirectory(SourceDirectoryPath: string,DestinationDirectoryPath: string): boolean;
	RenameAsset(SourceAssetPath: string,DestinationAssetPath: string): boolean;
	RemoveMetadataTag(UObject: UObject,Tag: string): void;
	MakeDirectory(DirectoryPath: string): boolean;
	LoadBlueprintClass(AssetPath: string): UnrealEngineClass;
	LoadAsset(AssetPath: string): UObject;
	ListAssetsByTagValue(TagName: string,TagValue: string): string[];
	ListAssets(DirectoryPath: string,bRecursive: boolean,bIncludeFolder: boolean): string[];
	GetTagValues(AssetPath: string): Map<string, string>;
	GetPathNameForLoadedAsset(LoadedAsset: UObject): string;
	GetMetadataTagValues(UObject: UObject): Map<string, string>;
	GetMetadataTag(UObject: UObject,Tag: string): string;
	FindPackageReferencersForAsset(AssetPath: string,bLoadAssetsToConfirm: boolean): string[];
	FindAssetData(AssetPath: string): AssetData;
	DuplicateLoadedAsset(SourceAsset: UObject,DestinationAssetPath: string): UObject;
	DuplicateDirectory(SourceDirectoryPath: string,DestinationDirectoryPath: string): boolean;
	DuplicateAsset(SourceAssetPath: string,DestinationAssetPath: string): UObject;
	DoesDirectoryExist(DirectoryPath: string): boolean;
	DoesDirectoryContainAssets(DirectoryPath: string,bRecursive: boolean): boolean;
	DoesAssetExist(AssetPath: string): boolean;
	DoAssetsExist(AssetPaths: string[]): boolean;
	DeleteLoadedAssets(AssetsToDelete: UObject[]): boolean;
	DeleteLoadedAsset(AssetToDelete: UObject): boolean;
	DeleteDirectory(DirectoryPath: string): boolean;
	DeleteAsset(AssetPathToDelete: string): boolean;
	ConsolidateAssets(AssetToConsolidateTo: UObject,AssetsToConsolidate: UObject[]): boolean;
	CheckoutLoadedAssets(AssetsToCheckout: UObject[]): boolean;
	CheckoutLoadedAsset(AssetToCheckout: UObject): boolean;
	CheckoutDirectory(DirectoryPath: string,bRecursive: boolean): boolean;
	CheckoutAsset(AssetToCheckout: string): boolean;
	static C(Other: UObject | any): EditorAssetSubsystem;
}

declare class EditorCompositeSection extends EditorAnimBaseObj { 
	CompositeSection: CompositeSection;
	static Load(ResourceName: string): EditorCompositeSection;
	static Find(Outer: UObject, ResourceName: string): EditorCompositeSection;
	static GetDefaultObject(): EditorCompositeSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorCompositeSection;
	static C(Other: UObject | any): EditorCompositeSection;
}

declare class EditorDomainSaveCommandlet extends Commandlet { 
	static Load(ResourceName: string): EditorDomainSaveCommandlet;
	static Find(Outer: UObject, ResourceName: string): EditorDomainSaveCommandlet;
	static GetDefaultObject(): EditorDomainSaveCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorDomainSaveCommandlet;
	static C(Other: UObject | any): EditorDomainSaveCommandlet;
}

declare type EWindowMode = 'Fullscreen' | 'WindowedFullscreen' | 'Windowed' | 'EWindowMode_MAX';
declare var EWindowMode : { Fullscreen:'Fullscreen',WindowedFullscreen:'WindowedFullscreen',Windowed:'Windowed',EWindowMode_MAX:'EWindowMode_MAX', };
declare class GameUserSettings extends UObject { 
	bUseVSync: boolean;
	bUseDynamicResolution: boolean;
	ResolutionSizeX: number;
	ResolutionSizeY: number;
	LastUserConfirmedResolutionSizeX: number;
	LastUserConfirmedResolutionSizeY: number;
	WindowPosX: number;
	WindowPosY: number;
	FullscreenMode: number;
	LastConfirmedFullscreenMode: number;
	PreferredFullscreenMode: number;
	Version: number;
	AudioQualityLevel: number;
	LastConfirmedAudioQualityLevel: number;
	FrameRateLimit: number;
	DesiredScreenWidth: number;
	bUseDesiredScreenHeight: boolean;
	DesiredScreenHeight: number;
	LastUserConfirmedDesiredScreenWidth: number;
	LastUserConfirmedDesiredScreenHeight: number;
	LastRecommendedScreenWidth: number;
	LastRecommendedScreenHeight: number;
	LastCPUBenchmarkResult: number;
	LastGPUBenchmarkResult: number;
	LastCPUBenchmarkSteps: number[];
	LastGPUBenchmarkSteps: number[];
	LastGPUBenchmarkMultiplier: number;
	bUseHDRDisplayOutput: boolean;
	HDRDisplayOutputNits: number;
	OnGameUserSettingsUINeedsUpdate: UnrealEngineMulticastDelegate<() => void>;
	static Load(ResourceName: string): GameUserSettings;
	static Find(Outer: UObject, ResourceName: string): GameUserSettings;
	static GetDefaultObject(): GameUserSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GameUserSettings;
	ValidateSettings(): void;
	SupportsHDRDisplayOutput(): boolean;
	SetVSyncEnabled(bEnable: boolean): void;
	SetVisualEffectQuality(Value: number): void;
	SetViewDistanceQuality(Value: number): void;
	SetToDefaults(): void;
	SetTextureQuality(Value: number): void;
	SetShadowQuality(Value: number): void;
	SetShadingQuality(Value: number): void;
	SetScreenResolution(Resolution: IntPoint): void;
	SetResolutionScaleValueEx(NewScaleValue: number): void;
	SetResolutionScaleValue(NewScaleValue: number): void;
	SetResolutionScaleNormalized(NewScaleNormalized: number): void;
	SetReflectionQuality(Value: number): void;
	SetPostProcessingQuality(Value: number): void;
	SetOverallScalabilityLevel(Value: number): void;
	SetGlobalIlluminationQuality(Value: number): void;
	SetFullscreenMode(InFullscreenMode: EWindowMode): void;
	SetFrameRateLimit(NewLimit: number): void;
	SetFoliageQuality(Value: number): void;
	SetDynamicResolutionEnabled(bEnable: boolean): void;
	SetBenchmarkFallbackValues(): void;
	SetAudioQualityLevel(QualityLevel: number): void;
	SetAntiAliasingQuality(Value: number): void;
	SaveSettings(): void;
	RunHardwareBenchmark(WorkScale: number,CPUMultiplier: number,GPUMultiplier: number): void;
	RevertVideoMode(): void;
	ResetToCurrentSettings(): void;
	LoadSettings(bForceReload: boolean): void;
	IsVSyncEnabled(): boolean;
	IsVSyncDirty(): boolean;
	IsScreenResolutionDirty(): boolean;
	IsHDREnabled(): boolean;
	IsFullscreenModeDirty(): boolean;
	IsDynamicResolutionEnabled(): boolean;
	IsDynamicResolutionDirty(): boolean;
	IsDirty(): boolean;
	GetVisualEffectQuality(): number;
	GetViewDistanceQuality(): number;
	GetTextureQuality(): number;
	static GetSyncInterval(): number;
	GetShadowQuality(): number;
	GetShadingQuality(): number;
	GetScreenResolution(): IntPoint;
	GetResolutionScaleNormalized(): number;
	GetResolutionScaleInformationEx(CurrentScaleNormalized?: number,CurrentScaleValue?: number,MinScaleValue?: number,MaxScaleValue?: number): {CurrentScaleNormalized: number, CurrentScaleValue: number, MinScaleValue: number, MaxScaleValue: number};
	GetResolutionScaleInformation(CurrentScaleNormalized?: number,CurrentScaleValue?: number,MinScaleValue?: number,MaxScaleValue?: number): {CurrentScaleNormalized: number, CurrentScaleValue: number, MinScaleValue: number, MaxScaleValue: number};
	GetReflectionQuality(): number;
	GetRecommendedResolutionScale(): number;
	GetPreferredFullscreenMode(): EWindowMode;
	GetPostProcessingQuality(): number;
	GetOverallScalabilityLevel(): number;
	GetLastConfirmedScreenResolution(): IntPoint;
	GetLastConfirmedFullscreenMode(): EWindowMode;
	GetGlobalIlluminationQuality(): number;
	static GetGameUserSettings(): GameUserSettings;
	GetFullscreenMode(): EWindowMode;
	GetFrameRateLimit(): number;
	static GetFramePace(): number;
	GetFoliageQuality(): number;
	GetDesktopResolution(): IntPoint;
	static GetDefaultWindowPosition(): IntPoint;
	static GetDefaultWindowMode(): EWindowMode;
	GetDefaultResolutionScale(): number;
	static GetDefaultResolution(): IntPoint;
	GetCurrentHDRDisplayNits(): number;
	GetAudioQualityLevel(): number;
	GetAntiAliasingQuality(): number;
	EnableHDRDisplayOutput(bEnable: boolean,DisplayNits: number): void;
	ConfirmVideoMode(): void;
	ApplySettings(bCheckForCommandLineOverrides: boolean): void;
	ApplyResolutionSettings(bCheckForCommandLineOverrides: boolean): void;
	ApplyNonResolutionSettings(): void;
	ApplyHardwareBenchmarkResults(): void;
	static C(Other: UObject | any): GameUserSettings;
}

declare class AssetManager extends UObject { 
	ObjectReferenceList: UObject[];
	bIsGlobalAsyncScanEnvironment: boolean;
	bShouldGuessTypeAndName: boolean;
	bShouldUseSynchronousLoad: boolean;
	bIsLoadingFromPakFiles: boolean;
	bShouldAcquireMissingChunksOnLoad: boolean;
	bOnlyCookProductionAssets: boolean;
	NumBulkScanRequests: number;
	bIsPrimaryAssetDirectoryCurrent: boolean;
	bIsManagementDatabaseCurrent: boolean;
	bUpdateManagementDatabaseAfterScan: boolean;
	bIncludeOnlyOnDiskAssets: boolean;
	bHasCompletedInitialScan: boolean;
	NumberOfSpawnedNotifications: number;
	static Load(ResourceName: string): AssetManager;
	static Find(Outer: UObject, ResourceName: string): AssetManager;
	static GetDefaultObject(): AssetManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetManager;
	static C(Other: UObject | any): AssetManager;
}

declare class StatColorMapEntry { 
	In: number;
	Out: Color;
	clone() : StatColorMapEntry;
	static C(Other: UObject | any): StatColorMapEntry;
}

declare class StatColorMapping { 
	StatName: string;
	ColorMap: StatColorMapEntry[];
	DisableBlend: boolean;
	clone() : StatColorMapping;
	static C(Other: UObject | any): StatColorMapping;
}

declare class GameNameRedirect { 
	OldGameName: string;
	NewGameName: string;
	clone() : GameNameRedirect;
	static C(Other: UObject | any): GameNameRedirect;
}

declare class ClassRedirect { 
	ObjectName: string;
	OldClassName: string;
	NewClassName: string;
	OldSubobjName: string;
	NewSubobjName: string;
	NewClassClass: string;
	NewClassPackage: string;
	InstanceOnly: boolean;
	clone() : ClassRedirect;
	static C(Other: UObject | any): ClassRedirect;
}

declare class PluginRedirect { 
	OldPluginName: string;
	NewPluginName: string;
	clone() : PluginRedirect;
	static C(Other: UObject | any): PluginRedirect;
}

declare class StructRedirect { 
	OldStructName: string;
	NewStructName: string;
	clone() : StructRedirect;
	static C(Other: UObject | any): StructRedirect;
}

declare type ETransitionType = 'None' | 'Paused' | 'Loading' | 'Saving' | 'Connecting' | 'Precaching' | 'WaitingToConnect' | 'MAX';
declare var ETransitionType : { None:'None',Paused:'Paused',Loading:'Loading',Saving:'Saving',Connecting:'Connecting',Precaching:'Precaching',WaitingToConnect:'WaitingToConnect',MAX:'MAX', };
declare class DropNoteInfo { 
	Location: Vector;
	Rotation: Rotator;
	Comment: string;
	clone() : DropNoteInfo;
	static C(Other: UObject | any): DropNoteInfo;
}

declare class NetDriverDefinition { 
	DefName: string;
	DriverClassName: string;
	DriverClassNameFallback: string;
	MaxChannelsOverride: number;
	clone() : NetDriverDefinition;
	static C(Other: UObject | any): NetDriverDefinition;
}

declare class IrisNetDriverConfig { 
	NetDriverDefinition: string;
	NetDriverName: string;
	NetDriverWildcardName: string;
	bEnableIris: boolean;
	clone() : IrisNetDriverConfig;
	static C(Other: UObject | any): IrisNetDriverConfig;
}

declare class Engine extends UObject { 
	TinyFont: Font;
	TinyFontName: SoftObjectPath;
	SmallFont: Font;
	SmallFontName: SoftObjectPath;
	MediumFont: Font;
	MediumFontName: SoftObjectPath;
	LargeFont: Font;
	LargeFontName: SoftObjectPath;
	SubtitleFont: Font;
	SubtitleFontName: SoftObjectPath;
	AdditionalFonts: Font[];
	AdditionalFontNames: string[];
	ConsoleClass: UnrealEngineClass;
	ConsoleClassName: SoftClassPath;
	GameViewportClientClass: UnrealEngineClass;
	GameViewportClientClassName: SoftClassPath;
	LocalPlayerClass: UnrealEngineClass;
	LocalPlayerClassName: SoftClassPath;
	WorldSettingsClass: UnrealEngineClass;
	WorldSettingsClassName: SoftClassPath;
	NavigationSystemClassName: SoftClassPath;
	NavigationSystemClass: UnrealEngineClass;
	NavigationSystemConfigClassName: SoftClassPath;
	NavigationSystemConfigClass: UnrealEngineClass;
	AvoidanceManagerClassName: SoftClassPath;
	AvoidanceManagerClass: UnrealEngineClass;
	AIControllerClassName: SoftClassPath;
	PhysicsCollisionHandlerClass: UnrealEngineClass;
	PhysicsCollisionHandlerClassName: SoftClassPath;
	GameUserSettingsClassName: SoftClassPath;
	GameUserSettingsClass: UnrealEngineClass;
	GameUserSettings: GameUserSettings;
	LevelScriptActorClass: UnrealEngineClass;
	LevelScriptActorClassName: SoftClassPath;
	DefaultBlueprintBaseClassName: SoftClassPath;
	GameSingletonClassName: SoftClassPath;
	GameSingleton: UObject;
	AssetManagerClassName: SoftClassPath;
	AssetManager: AssetManager;
	DefaultTexture: Texture2D;
	DefaultTextureName: SoftObjectPath;
	DefaultDiffuseTexture: Texture;
	DefaultDiffuseTextureName: SoftObjectPath;
	DefaultBSPVertexTexture: Texture2D;
	DefaultBSPVertexTextureName: SoftObjectPath;
	HighFrequencyNoiseTexture: Texture2D;
	HighFrequencyNoiseTextureName: SoftObjectPath;
	DefaultBokehTexture: Texture2D;
	DefaultBokehTextureName: SoftObjectPath;
	DefaultBloomKernelTexture: Texture2D;
	DefaultBloomKernelTextureName: SoftObjectPath;
	DefaultFilmGrainTexture: Texture2D;
	DefaultFilmGrainTextureName: SoftObjectPath;
	WireframeMaterial: Material;
	WireframeMaterialName: string;
	GeomMaterial: Material;
	GeomMaterialName: SoftObjectPath;
	DebugMeshMaterial: Material;
	DebugMeshMaterialName: SoftObjectPath;
	EmissiveMeshMaterial: Material;
	EmissiveMeshMaterialName: SoftObjectPath;
	LevelColorationLitMaterial: Material;
	LevelColorationLitMaterialName: string;
	LevelColorationUnlitMaterial: Material;
	LevelColorationUnlitMaterialName: string;
	LightingTexelDensityMaterial: Material;
	LightingTexelDensityName: string;
	ShadedLevelColorationLitMaterial: Material;
	ShadedLevelColorationLitMaterialName: string;
	ShadedLevelColorationUnlitMaterial: Material;
	ShadedLevelColorationUnlitMaterialName: string;
	RemoveSurfaceMaterial: Material;
	RemoveSurfaceMaterialName: SoftObjectPath;
	VertexColorMaterial: Material;
	VertexColorMaterialName: string;
	VertexColorViewModeMaterial_ColorOnly: Material;
	VertexColorViewModeMaterialName_ColorOnly: string;
	VertexColorViewModeMaterial_AlphaAsColor: Material;
	VertexColorViewModeMaterialName_AlphaAsColor: string;
	VertexColorViewModeMaterial_RedOnly: Material;
	VertexColorViewModeMaterialName_RedOnly: string;
	VertexColorViewModeMaterial_GreenOnly: Material;
	VertexColorViewModeMaterialName_GreenOnly: string;
	VertexColorViewModeMaterial_BlueOnly: Material;
	VertexColorViewModeMaterialName_BlueOnly: string;
	BoneWeightMaterial: Material;
	BoneWeightMaterialName: SoftObjectPath;
	ClothPaintMaterial: Material;
	ClothPaintMaterialWireframe: Material;
	ClothPaintMaterialInstance: MaterialInstanceDynamic;
	ClothPaintMaterialWireframeInstance: MaterialInstanceDynamic;
	ClothPaintMaterialName: SoftObjectPath;
	ClothPaintMaterialWireframeName: SoftObjectPath;
	PhysicalMaterialMaskMaterial: Material;
	PhysicalMaterialMaskMaterialName: SoftObjectPath;
	DebugEditorMaterial: Material;
	DefaultFlattenMaterialName: SoftObjectPath;
	DefaultHLODFlattenMaterialName: SoftObjectPath;
	DefaultLandscapeFlattenMaterialName: SoftObjectPath;
	DefaultFlattenMaterial: Material;
	DefaultHLODFlattenMaterial: Material;
	DefaultLandscapeFlattenMaterial: Material;
	DebugEditorMaterialName: SoftObjectPath;
	ConstraintLimitMaterial: Material;
	ConstraintLimitMaterialX: MaterialInstanceDynamic;
	ConstraintLimitMaterialXAxis: MaterialInstanceDynamic;
	ConstraintLimitMaterialY: MaterialInstanceDynamic;
	ConstraintLimitMaterialYAxis: MaterialInstanceDynamic;
	ConstraintLimitMaterialZ: MaterialInstanceDynamic;
	ConstraintLimitMaterialZAxis: MaterialInstanceDynamic;
	ConstraintLimitMaterialPrismatic: MaterialInstanceDynamic;
	InvalidLightmapSettingsMaterial: Material;
	InvalidLightmapSettingsMaterialName: SoftObjectPath;
	PreviewShadowsIndicatorMaterial: Material;
	PreviewShadowsIndicatorMaterialName: SoftObjectPath;
	ArrowMaterial: Material;
	ArrowMaterialYellow: MaterialInstanceDynamic;
	ArrowMaterialName: SoftObjectPath;
	LightingOnlyBrightness: LinearColor;
	ShaderComplexityColors: LinearColor[];
	QuadComplexityColors: LinearColor[];
	LightComplexityColors: LinearColor[];
	StationaryLightOverlapColors: LinearColor[];
	LODColorationColors: LinearColor[];
	HLODColorationColors: LinearColor[];
	StreamingAccuracyColors: LinearColor[];
	GPUSkinCacheVisualizationExcludedColor: LinearColor;
	GPUSkinCacheVisualizationIncludedColor: LinearColor;
	GPUSkinCacheVisualizationRecomputeTangentsColor: LinearColor;
	GPUSkinCacheVisualizationLowMemoryThresholdInMB: number;
	GPUSkinCacheVisualizationHighMemoryThresholdInMB: number;
	GPUSkinCacheVisualizationLowMemoryColor: LinearColor;
	GPUSkinCacheVisualizationMidMemoryColor: LinearColor;
	GPUSkinCacheVisualizationHighMemoryColor: LinearColor;
	GPUSkinCacheVisualizationRayTracingLODOffsetColors: LinearColor[];
	MaxPixelShaderAdditiveComplexityCount: number;
	MaxES3PixelShaderAdditiveComplexityCount: number;
	MinLightMapDensity: number;
	IdealLightMapDensity: number;
	MaxLightMapDensity: number;
	bRenderLightMapDensityGrayscale: boolean;
	RenderLightMapDensityGrayscaleScale: number;
	RenderLightMapDensityColorScale: number;
	LightMapDensityVertexMappedColor: LinearColor;
	LightMapDensitySelectedColor: LinearColor;
	StatColorMappings: StatColorMapping[];
	EditorBrushMaterial: Material;
	EditorBrushMaterialName: SoftObjectPath;
	DefaultPhysMaterial: PhysicalMaterial;
	DefaultPhysMaterialName: SoftObjectPath;
	DefaultDestructiblePhysMaterial: PhysicalMaterial;
	DefaultDestructiblePhysMaterialName: SoftObjectPath;
	ActiveGameNameRedirects: GameNameRedirect[];
	ActiveClassRedirects: ClassRedirect[];
	ActivePluginRedirects: PluginRedirect[];
	ActiveStructRedirects: StructRedirect[];
	PreIntegratedSkinBRDFTexture: Texture2D;
	PreIntegratedSkinBRDFTextureName: SoftObjectPath;
	BlueNoiseScalarTexture: Texture2D;
	BlueNoiseVec2Texture: Texture2D;
	BlueNoiseScalarTextureName: SoftObjectPath;
	BlueNoiseVec2TextureName: SoftObjectPath;
	MiniFontTexture: Texture2D;
	MiniFontTextureName: SoftObjectPath;
	WeightMapPlaceholderTexture: Texture;
	WeightMapPlaceholderTextureName: SoftObjectPath;
	LightMapDensityTexture: Texture2D;
	LightMapDensityTextureName: SoftObjectPath;
	GameViewport: GameViewportClient;
	DeferredCommands: string[];
	NearClipPlane: number;
	bSubtitlesEnabled: boolean;
	bSubtitlesForcedOff: boolean;
	MaximumLoopIterationCount: number;
	bCanBlueprintsTickByDefault: boolean;
	bOptimizeAnimBlueprintMemberVariableAccess: boolean;
	bAllowMultiThreadedAnimationUpdate: boolean;
	bEnableEditorPSysRealtimeLOD: boolean;
	bSmoothFrameRate: boolean;
	bUseFixedFrameRate: boolean;
	FixedFrameRate: number;
	SmoothedFrameRateRange: FloatRange;
	CustomTimeStep: EngineCustomTimeStep;
	CustomTimeStepClassName: SoftClassPath;
	TimecodeProvider: TimecodeProvider;
	TimecodeProviderClassName: SoftClassPath;
	bGenerateDefaultTimecode: boolean;
	GenerateDefaultTimecodeFrameRate: FrameRate;
	GenerateDefaultTimecodeFrameDelay: number;
	bCheckForMultiplePawnsSpawnedInAFrame: boolean;
	NumPawnsAllowedToBeSpawnedInAFrame: number;
	bShouldGenerateLowQualityLightmaps: boolean;
	C_WorldBox: Color;
	C_BrushWire: Color;
	C_AddWire: Color;
	C_SubtractWire: Color;
	C_SemiSolidWire: Color;
	C_NonSolidWire: Color;
	C_WireBackground: Color;
	C_ScaleBoxHi: Color;
	C_VolumeCollision: Color;
	C_BSPCollision: Color;
	C_OrthoBackground: Color;
	C_Volume: Color;
	C_BrushShape: Color;
	StreamingDistanceFactor: number;
	GameScreenshotSaveDirectory: DirectoryPath;
	UseStaticMeshMinLODPerQualityLevels: boolean;
	UseSkeletalMeshMinLODPerQualityLevels: boolean;
	TransitionType: ETransitionType;
	TransitionDescription: string;
	TransitionGameMode: string;
	bAllowMatureLanguage: boolean;
	CameraRotationThreshold: number;
	CameraTranslationThreshold: number;
	PrimitiveProbablyVisibleTime: number;
	MaxOcclusionPixelsFraction: number;
	bPauseOnLossOfFocus: boolean;
	MaxParticleResize: number;
	MaxParticleResizeWarn: number;
	PendingDroppedNotes: DropNoteInfo[];
	NetClientTicksPerSecond: number;
	DisplayGamma: number;
	MinDesiredFrameRate: number;
	DefaultSelectedMaterialColor: LinearColor;
	SelectedMaterialColor: LinearColor;
	SelectionOutlineColor: LinearColor;
	SubduedSelectionOutlineColor: LinearColor;
	SelectedMaterialColorOverride: LinearColor;
	bIsOverridingSelectedColor: boolean;
	bEnableOnScreenDebugMessages: boolean;
	bEnableOnScreenDebugMessagesDisplay: boolean;
	bSuppressMapWarnings: boolean;
	bDisableAILogging: boolean;
	bEnableVisualLogRecordingOnStart: number;
	ScreenSaverInhibitorSemaphore: number;
	bLockReadOnlyLevels: boolean;
	ParticleEventManagerClassPath: string;
	SelectionHighlightIntensity: number;
	BSPSelectionHighlightIntensity: number;
	SelectionHighlightIntensityBillboards: number;
	GlobalNetTravelCount: number;
	NetDriverDefinitions: NetDriverDefinition[];
	IrisNetDriverConfigs: IrisNetDriverConfig[];
	ServerActors: string[];
	RuntimeServerActors: string[];
	NetErrorLogInterval: number;
	bStartedLoadMapMovie: boolean;
	NextWorldContextHandle: number;
	static Load(ResourceName: string): Engine;
	static Find(Outer: UObject, ResourceName: string): Engine;
	static GetDefaultObject(): Engine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Engine;
	static C(Other: UObject | any): Engine;
	GetEditorWorld(): World;
	GetPIEWorld(): World;
	HasUndo(): boolean;
	SetClientTravel(InWorld: World,NextURL: string,InTravelType: ETravelType): void;
	static GetEditorWorld(Engine: Engine): World;
	static GetPIEWorld(Engine: Engine): World;
	static HasUndo(Engine: Engine): boolean;
	static SetClientTravel(Engine: Engine,InWorld: World,NextURL: string,InTravelType: ETravelType): void;
}

declare class JavascriptTransaction { 
	clone() : JavascriptTransaction;
	static C(Other: UObject | any): JavascriptTransaction;
	GetContext(): string;
	GetPrimaryObject(): UObject;
	GetTitle(): string;
	static GetContext(Transaction: JavascriptTransaction): string;
	static GetPrimaryObject(Transaction: JavascriptTransaction): UObject;
	static GetTitle(Transaction: JavascriptTransaction): string;
}

declare class Transactor extends UObject { 
	static Load(ResourceName: string): Transactor;
	static Find(Outer: UObject, ResourceName: string): Transactor;
	static GetDefaultObject(): Transactor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Transactor;
	static C(Other: UObject | any): Transactor;
	GetQueueLength(): number;
	GetTransaction(QueueIndex: number): JavascriptTransaction;
	IsActive(): boolean;
	static GetQueueLength(Transactor: Transactor): number;
	static GetTransaction(Transactor: Transactor,QueueIndex: number): JavascriptTransaction;
	static IsActive(Transactor: Transactor): boolean;
}

declare class EditorWorldExtensionCollection extends UObject { 
	static Load(ResourceName: string): EditorWorldExtensionCollection;
	static Find(Outer: UObject, ResourceName: string): EditorWorldExtensionCollection;
	static GetDefaultObject(): EditorWorldExtensionCollection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorWorldExtensionCollection;
	static C(Other: UObject | any): EditorWorldExtensionCollection;
}

declare class EditorWorldExtensionManager extends UObject { 
	EditorWorldExtensionCollection: EditorWorldExtensionCollection[];
	static Load(ResourceName: string): EditorWorldExtensionManager;
	static Find(Outer: UObject, ResourceName: string): EditorWorldExtensionManager;
	static GetDefaultObject(): EditorWorldExtensionManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorWorldExtensionManager;
	static C(Other: UObject | any): EditorWorldExtensionManager;
}

declare class LevelEditorDragDropHandler extends UObject { 
	static Load(ResourceName: string): LevelEditorDragDropHandler;
	static Find(Outer: UObject, ResourceName: string): LevelEditorDragDropHandler;
	static GetDefaultObject(): LevelEditorDragDropHandler;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelEditorDragDropHandler;
	static C(Other: UObject | any): LevelEditorDragDropHandler;
}

declare type ECsgOper = 'CSG_Active' | 'CSG_Add' | 'CSG_Subtract' | 'CSG_Intersect' | 'CSG_Deintersect' | 'CSG_None' | 'CSG_MAX';
declare var ECsgOper : { CSG_Active:'CSG_Active',CSG_Add:'CSG_Add',CSG_Subtract:'CSG_Subtract',CSG_Intersect:'CSG_Intersect',CSG_Deintersect:'CSG_Deintersect',CSG_None:'CSG_None',CSG_MAX:'CSG_MAX', };
declare class USelection extends UObject { 
	ElementSelectionSet: TypedElementSelectionSet;
	static Load(ResourceName: string): USelection;
	static Find(Outer: UObject, ResourceName: string): USelection;
	static GetDefaultObject(): USelection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): USelection;
	static C(Other: UObject | any): USelection;
	Deselect(InObject: UObject): void;
	DeselectAll(InClass: UnrealEngineClass): void;
	GetSelectedObjects(Out?: UObject[]): {Out: UObject[], $: number};
	Select(InObject: UObject): void;
	ToggleSelect(InObject: UObject): void;
	static Deselect(USelection: USelection,InObject: UObject): void;
	static DeselectAll(USelection: USelection,InClass: UnrealEngineClass): void;
	static GetSelectedObjects(USelection: USelection,Out?: UObject[]): {Out: UObject[], $: number};
	static Select(USelection: USelection,InObject: UObject): void;
	static ToggleSelect(USelection: USelection,InObject: UObject): void;
}

declare class EditorEngine extends Engine { 
	TempModel: Model;
	ConversionTempModel: Model;
	Trans: Transactor;
	Bad: Texture2D;
	EditorFont: Font;
	PreviewSoundCue: SoundCue;
	PreviewAudioComponent: AudioComponent;
	EditorCube: StaticMesh;
	EditorSphere: StaticMesh;
	EditorPlane: StaticMesh;
	EditorCylinder: StaticMesh;
	bFastRebuild: boolean;
	IsImportingT3D: boolean;
	ClickFlags: number;
	ParentContext: Package;
	UnsnappedClickLocation: Vector;
	ClickLocation: Vector;
	ClickPlane: Plane;
	MouseMovement: Vector;
	DetailMode: EDetailMode;
	UseSizingBox: boolean;
	UseAxisIndicator: boolean;
	GodMode: boolean;
	GameCommandLine: string;
	bShowBrushMarkerPolys: boolean;
	bEnableSocketSnapping: boolean;
	bEnableLODLocking: boolean;
	HeightMapExportClassName: string;
	ActorFactories: ActorFactory[];
	UserOpenedFile: string;
	InEditorGameURLOptions: string;
	PlayWorld: World;
	bIsToggleBetweenPIEandSIEQueued: boolean;
	bAllowMultiplePIEWorlds: boolean;
	bRequestEndPlayMapQueued: boolean;
	bIgnoreSelectionChange: boolean;
	bSuspendBroadcastPostUndoRedo: boolean;
	bSquelchTransactionNotification: boolean;
	bNotifyUndoRedoSelectionChange: boolean;
	PlayFromHerePlayerStartClass: UnrealEngineClass;
	EditorWorld: World;
	ActorsThatWereSelected: Actor[];
	PlayWorldDestination: number;
	CurrentPlayWorldDestination: number;
	bMobilePreviewPortrait: boolean;
	BuildPlayDevice: number;
	UserEditedPlayWorldURL: string;
	ScratchRenderTarget2048: TextureRenderTarget2D;
	ScratchRenderTarget1024: TextureRenderTarget2D;
	ScratchRenderTarget512: TextureRenderTarget2D;
	ScratchRenderTarget256: TextureRenderTarget2D;
	PreviewMeshComp: StaticMeshComponent;
	PreviewMeshIndex: number;
	bShowPreviewMesh: boolean;
	bCustomCameraAlignEmitter: boolean;
	CustomCameraAlignEmitterDistance: number;
	bDrawSocketsInGMode: boolean;
	bDrawParticleHelpers: boolean;
	BrushBuilders: BrushBuilder[];
	EditorWorldExtensionsManager: EditorWorldExtensionManager;
	DragDropHandler: LevelEditorDragDropHandler;
	ActorGroupingUtilsClassName: SoftClassPath;
	ActorGroupingUtils: ActorGroupingUtils;
	PlayWorldLocation: Vector;
	PlayWorldRotation: Rotator;
	bIsPlayWorldQueued: boolean;
	bIsSimulateInEditorQueued: boolean;
	bHasPlayWorldPlacement: boolean;
	bUseMobilePreviewForPlayWorld: boolean;
	bUseVRPreviewForPlayWorld: boolean;
	bIsSimulatingInEditor: boolean;
	PlayInEditorViewportIndex: number;
	static Load(ResourceName: string): EditorEngine;
	static Find(Outer: UObject, ResourceName: string): EditorEngine;
	static GetDefaultObject(): EditorEngine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorEngine;
	static C(Other: UObject | any): EditorEngine;
	bspBrushCSG(Actor: Brush,Model: Model,PolyFlags: number,BrushType: EBrushType,CSGOper: ECsgOper,bBuildBounds: boolean,bMergePolys: boolean,bReplaceNULLMaterialRefs: boolean,bShowProgressBar: boolean): number;
	CanSelectActor(Actor: Actor,bInSelected: boolean,bSelectEvenIfHidden: boolean,bWarnIfLevelLocked: boolean): boolean;
	Exec(InWorld: World,Command: string,Out?: string): {Out: string, $: boolean};
	FindBrushBuilder(BrushBuilderClass: UnrealEngineClass): BrushBuilder;
	GetSelectedActors(): USelection;
	GetSelectedComponents(): USelection;
	GetSelectedObjects(): USelection;
	GetSelectedSet(Class: UnrealEngineClass): USelection;
	RebuildLevel(Level: Level): void;
	RebuildStaticNavigableGeometry(Level: Level): void;
	RedrawAllViewports(bInvalidateHitProxies: boolean): void;
	SelectActor(Actor: Actor,bInSelected: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean,bForceRefresh: boolean): void;
	SelectComponent(Component: ActorComponent,bInSelected: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean): void;
	SelectGroup(InGroupActor: GroupActor,bForceSelection: boolean,bInSelected: boolean,bNotify: boolean): void;
	SelectNone(bNoteSelectionChange: boolean,bDeselectBSPSurfs: boolean,WarnAboutManyActors: boolean): void;
	SetMaterial(InModel: Model,Material: MaterialInterface,Surfaces: number[]): void;
	static bspBrushCSG(Engine: EditorEngine,Actor: Brush,Model: Model,PolyFlags: number,BrushType: EBrushType,CSGOper: ECsgOper,bBuildBounds: boolean,bMergePolys: boolean,bReplaceNULLMaterialRefs: boolean,bShowProgressBar: boolean): number;
	static CanSelectActor(Engine: EditorEngine,Actor: Actor,bInSelected: boolean,bSelectEvenIfHidden: boolean,bWarnIfLevelLocked: boolean): boolean;
	static Exec(Engine: EditorEngine,InWorld: World,Command: string,Out?: string): {Out: string, $: boolean};
	static FindBrushBuilder(Engine: EditorEngine,BrushBuilderClass: UnrealEngineClass): BrushBuilder;
	static GetSelectedActors(Engine: EditorEngine): USelection;
	static GetSelectedComponents(Engine: EditorEngine): USelection;
	static GetSelectedObjects(Engine: EditorEngine): USelection;
	static GetSelectedSet(Engine: EditorEngine,Class: UnrealEngineClass): USelection;
	static RebuildLevel(Engine: EditorEngine,Level: Level): void;
	static RebuildStaticNavigableGeometry(Engine: EditorEngine,Level: Level): void;
	static RedrawAllViewports(Engine: EditorEngine,bInvalidateHitProxies: boolean): void;
	static SelectActor(Engine: EditorEngine,Actor: Actor,bInSelected: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean,bForceRefresh: boolean): void;
	static SelectComponent(Engine: EditorEngine,Component: ActorComponent,bInSelected: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean): void;
	static SelectGroup(Engine: EditorEngine,InGroupActor: GroupActor,bForceSelection: boolean,bInSelected: boolean,bNotify: boolean): void;
	static SelectNone(Engine: EditorEngine,bNoteSelectionChange: boolean,bDeselectBSPSurfs: boolean,WarnAboutManyActors: boolean): void;
	static SetMaterial(Engine: EditorEngine,InModel: Model,Material: MaterialInterface,Surfaces: number[]): void;
}

declare type EConsoleForGamepadLabels = 'None' | 'XBoxOne' | 'PS4' | 'EConsoleForGamepadLabels_MAX';
declare var EConsoleForGamepadLabels : { None:'None',XBoxOne:'XBoxOne',PS4:'PS4',EConsoleForGamepadLabels_MAX:'EConsoleForGamepadLabels_MAX', };
declare class EditorExperimentalSettings extends UObject { 
	bEnableAsyncTextureCompilation: boolean;
	bEnableAsyncStaticMeshCompilation: boolean;
	bEnableAsyncSkeletalMeshCompilation: boolean;
	bEnableAsyncSkinnedAssetCompilation: boolean;
	bEnableAsyncSoundWaveCompilation: boolean;
	bHDREditor: boolean;
	HDREditorNITLevel: number;
	bProceduralFoliage: boolean;
	bEnableTranslationPicker: boolean;
	ConsoleForGamepadLabels: EConsoleForGamepadLabels;
	bToolbarCustomization: boolean;
	bBreakOnExceptions: boolean;
	bDrawMidpointArrowsInBlueprints: boolean;
	bContextMenuChunkAssignments: boolean;
	bDisableCookInEditor: boolean;
	bSharedCookedBuilds: boolean;
	MultiProcessCooking: number;
	bAllowLateJoinInPIE: boolean;
	bAllowVulkanPreview: boolean;
	bEnableMultithreadedLightmapEncoding: boolean;
	bEnableMultithreadedShadowmapEncoding: boolean;
	bUseOpenCLForConvexHullDecomp: boolean;
	bAllowPotentiallyUnsafePropertyEditing: boolean;
	bFacialAnimationImporter: boolean;
	bEnableOneFilePerActorSupport: boolean;
	bEnableActorFolderObjectSupport: boolean;
	bMobilePIEPreviewDeviceLaunch: boolean;
	bTextAssetFormatSupport: boolean;
	bVirtualizedAssetRehydration: boolean;
	bExampleLayersAndBlends: boolean;
	bEnableLongPathsSupport: boolean;
	bPackedLevelActor: boolean;
	bLevelInstance: boolean;
	static Load(ResourceName: string): EditorExperimentalSettings;
	static Find(Outer: UObject, ResourceName: string): EditorExperimentalSettings;
	static GetDefaultObject(): EditorExperimentalSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorExperimentalSettings;
	static C(Other: UObject | any): EditorExperimentalSettings;
}

declare type ELevelVisibilityDirtyMode = 'ModifyOnChange' | 'DontModify' | 'ELevelVisibilityDirtyMode_MAX';
declare var ELevelVisibilityDirtyMode : { ModifyOnChange:'ModifyOnChange',DontModify:'DontModify',ELevelVisibilityDirtyMode_MAX:'ELevelVisibilityDirtyMode_MAX', };
declare class EditorLevelUtils extends UObject { 
	static Load(ResourceName: string): EditorLevelUtils;
	static Find(Outer: UObject, ResourceName: string): EditorLevelUtils;
	static GetDefaultObject(): EditorLevelUtils;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorLevelUtils;
	static SetLevelVisibility(Level: Level,bShouldBeVisible: boolean,bForceLayersVisible: boolean,ModifyMode: ELevelVisibilityDirtyMode): void;
	static SetLevelsVisibility(Levels: Level[],bShouldBeVisible: boolean[],bForceLayersVisible: boolean,ModifyMode: ELevelVisibilityDirtyMode): void;
	static MoveSelectedActorsToLevel(DestLevel: LevelStreaming,bWarnAboutReferences: boolean): number;
	static MoveActorsToLevel(ActorsToMove: Actor[],DestStreamingLevel: LevelStreaming,bWarnAboutReferences: boolean,bWarnAboutRenaming: boolean): number;
	static MakeLevelCurrent(InStreamingLevel: LevelStreaming): void;
	static K2_AddLevelToWorldWithTransform(World: World,LevelPackageName: string,LevelStreamingClass: UnrealEngineClass,LevelTransform: Transform): LevelStreaming;
	static K2_AddLevelToWorld(World: World,LevelPackageName: string,LevelStreamingClass: UnrealEngineClass): LevelStreaming;
	static GetLevels(World: World): Level[];
	static CreateNewStreamingLevel(LevelStreamingClass: UnrealEngineClass,NewLevelPath: string,bMoveSelectedActorsIntoNewLevel: boolean): LevelStreaming;
	static C(Other: UObject | any): EditorLevelUtils;
}

declare type ELoadLevelAtStartup = 'None' | 'ProjectDefault' | 'LastOpened' | 'ELoadLevelAtStartup_MAX';
declare var ELoadLevelAtStartup : { None:'None',ProjectDefault:'ProjectDefault',LastOpened:'LastOpened',ELoadLevelAtStartup_MAX:'ELoadLevelAtStartup_MAX', };
declare class AutoReimportWildcard { 
	wildcard: string;
	bInclude: boolean;
	clone() : AutoReimportWildcard;
	static C(Other: UObject | any): AutoReimportWildcard;
}

declare class AutoReimportDirectoryConfig { 
	SourceDirectory: string;
	MountPoint: string;
	Wildcards: AutoReimportWildcard[];
	clone() : AutoReimportDirectoryConfig;
	static C(Other: UObject | any): AutoReimportDirectoryConfig;
}

declare class EditorLoadingSavingSettings extends UObject { 
	LoadLevelAtStartup: ELoadLevelAtStartup;
	bForceCompilationAtStartup: boolean;
	bRestoreOpenAssetTabsOnRestart: boolean;
	bEnableSourceControlCompatabilityCheck: boolean;
	bMonitorContentDirectories: boolean;
	AutoReimportDirectories: string[];
	AutoReimportDirectorySettings: AutoReimportDirectoryConfig[];
	AutoReimportThreshold: number;
	bAutoCreateAssets: boolean;
	bAutoDeleteAssets: boolean;
	bDetectChangesOnStartup: boolean;
	bPromptBeforeAutoImporting: boolean;
	bDeleteSourceFilesWithAssets: boolean;
	bAutoReimportTextures: boolean;
	bAutoReimportCSV: boolean;
	bDirtyMigratedBlueprints: boolean;
	bAutoSaveEnable: boolean;
	bAutoSaveMaps: boolean;
	bAutoSaveContent: boolean;
	AutoSaveTimeMinutes: number;
	AutoSaveInteractionDelayInSeconds: number;
	AutoSaveWarningInSeconds: number;
	bAutomaticallyCheckoutOnAssetModification: boolean;
	bPromptForCheckoutOnAssetModification: boolean;
	bSCCAutoAddNewFiles: boolean;
	bSCCUseGlobalSettings: boolean;
	TextDiffToolPath: FilePath;
	static Load(ResourceName: string): EditorLoadingSavingSettings;
	static Find(Outer: UObject, ResourceName: string): EditorLoadingSavingSettings;
	static GetDefaultObject(): EditorLoadingSavingSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorLoadingSavingSettings;
	static C(Other: UObject | any): EditorLoadingSavingSettings;
}

declare class EditorMiscSettings extends UObject { 
	static Load(ResourceName: string): EditorMiscSettings;
	static Find(Outer: UObject, ResourceName: string): EditorMiscSettings;
	static GetDefaultObject(): EditorMiscSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorMiscSettings;
	static C(Other: UObject | any): EditorMiscSettings;
}

declare class EditorNotifyObject extends EditorAnimBaseObj { 
	Event: AnimNotifyEvent;
	static Load(ResourceName: string): EditorNotifyObject;
	static Find(Outer: UObject, ResourceName: string): EditorNotifyObject;
	static GetDefaultObject(): EditorNotifyObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorNotifyObject;
	static C(Other: UObject | any): EditorNotifyObject;
}

declare class EditorParentPlayerListObj extends UObject { 
	Overrides: AnimParentNodeAssetOverride[];
	static Load(ResourceName: string): EditorParentPlayerListObj;
	static Find(Outer: UObject, ResourceName: string): EditorParentPlayerListObj;
	static GetDefaultObject(): EditorParentPlayerListObj;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorParentPlayerListObj;
	static C(Other: UObject | any): EditorParentPlayerListObj;
}

declare type EEditorUserScreenPercentageModeOverride = 'ProjectDefault' | 'Manual' | 'BasedOnDisplayResolution' | 'BasedOnDPIScale' | 'EEditorUserScreenPercentageModeOverride_MAX';
declare var EEditorUserScreenPercentageModeOverride : { ProjectDefault:'ProjectDefault',Manual:'Manual',BasedOnDisplayResolution:'BasedOnDisplayResolution',BasedOnDPIScale:'BasedOnDPIScale',EEditorUserScreenPercentageModeOverride_MAX:'EEditorUserScreenPercentageModeOverride_MAX', };
declare class EditorPerformanceSettings extends DeveloperSettings { 
	bShowFrameRateAndMemory: boolean;
	bThrottleCPUWhenNotForeground: boolean;
	bDisableRealtimeViewportsInRemoteSessions: boolean;
	bMonitorEditorPerformance: boolean;
	bEnableSharedDDCPerformanceNotifications: boolean;
	bEnableScalabilityWarningIndicator: boolean;
	bDisplayHighDPIViewports: boolean;
	bOverridePIEScreenPercentage: boolean;
	RealtimeScreenPercentageMode: EEditorUserScreenPercentageModeOverride;
	PathTracerScreenPercentageMode: EEditorUserScreenPercentageModeOverride;
	NonRealtimeScreenPercentageMode: EEditorUserScreenPercentageModeOverride;
	bOverrideManualScreenPercentage: boolean;
	ManualScreenPercentage: number;
	bOverrideMinViewportRenderingResolution: boolean;
	MinViewportRenderingResolution: number;
	bOverrideMaxViewportRenderingResolution: boolean;
	MaxViewportRenderingResolution: number;
	static Load(ResourceName: string): EditorPerformanceSettings;
	static Find(Outer: UObject, ResourceName: string): EditorPerformanceSettings;
	static GetDefaultObject(): EditorPerformanceSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorPerformanceSettings;
	static C(Other: UObject | any): EditorPerformanceSettings;
}

declare class EditorPerProjectUserSettings extends UObject { 
	bDisplayUIExtensionPoints: boolean;
	bDisplayDocumentationLink: boolean;
	bDisplayActionListItemRefIds: boolean;
	bAlwaysGatherBehaviorTreeDebuggerData: boolean;
	bDisplayBlackboardKeysInAlphabeticalOrder: boolean;
	bDisplayEngineVersionInBadge: boolean;
	bUseSimplygonSwarm: boolean;
	SimplygonServerIP: string;
	bEnableSwarmDebugging: boolean;
	SimplygonSwarmDelay: number;
	SwarmNumOfConcurrentJobs: number;
	SwarmMaxUploadChunkSizeInMB: number;
	SwarmIntermediateFolder: string;
	bAutomaticallyHotReloadNewClasses: boolean;
	bShowCompilerLogOnCompileError: boolean;
	bKeepFbxNamespace: boolean;
	bShowImportDialogAtReimport: boolean;
	DataSourceFolder: DirectoryPath;
	bKeepAttachHierarchy: boolean;
	bAnimationReimportWarnings: boolean;
	bUseCurvesForDistributions: boolean;
	PropertyMatrix_NumberOfPasteOperationsBeforeWarning: number;
	bSCSEditorShowGrid: boolean;
	bSCSEditorShowFloor: boolean;
	bGetAttentionOnUATCompletion: boolean;
	bAlwaysBuildUAT: boolean;
	SCSViewportCameraSpeed: number;
	bAutoloadCheckedOutPackages: boolean;
	bSuppressFullyLoadPrompt: boolean;
	bAllowSelectTranslucent: boolean;
	BlueprintFavorites: BlueprintPaletteFavorites;
	AssetViewerProfileIndex: number;
	AssetViewerProfileName: string;
	PreviewFeatureLevel: number;
	PreviewPlatformName: string;
	PreviewShaderFormatName: string;
	PreviewShaderPlatformName: string;
	bPreviewFeatureLevelActive: boolean;
	bPreviewFeatureLevelWasDefault: boolean;
	PreviewDeviceProfileName: string;
	static Load(ResourceName: string): EditorPerProjectUserSettings;
	static Find(Outer: UObject, ResourceName: string): EditorPerProjectUserSettings;
	static GetDefaultObject(): EditorPerProjectUserSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorPerProjectUserSettings;
	static C(Other: UObject | any): EditorPerProjectUserSettings;
}

declare class ISMComponentDescriptor { 
	Hash: number;
	ComponentClass: UnrealEngineClass;
	StaticMesh: StaticMesh;
	OverrideMaterials: MaterialInterface[];
	RuntimeVirtualTextures: RuntimeVirtualTexture[];
	Mobility: EComponentMobility;
	VirtualTextureRenderPassType: ERuntimeVirtualTextureMainPassType;
	LightmapType: ELightmapType;
	LightingChannels: LightingChannels;
	RayTracingGroupId: number;
	RayTracingGroupCullingPriority: ERayTracingGroupCullingPriority;
	bHasCustomNavigableGeometry: EHasCustomNavigableGeometry;
	CustomDepthStencilWriteMask: ERendererStencilMask;
	BodyInstance: BodyInstance;
	InstanceStartCullDistance: number;
	InstanceEndCullDistance: number;
	VirtualTextureCullMips: number;
	TranslucencySortPriority: number;
	OverriddenLightMapRes: number;
	CustomDepthStencilValue: number;
	HLODBatchingPolicy: EHLODBatchingPolicy;
	bCastShadow: boolean;
	bCastDynamicShadow: boolean;
	bCastStaticShadow: boolean;
	bCastContactShadow: boolean;
	bCastShadowAsTwoSided: boolean;
	bAffectDynamicIndirectLighting: boolean;
	bAffectDistanceFieldLighting: boolean;
	bReceivesDecals: boolean;
	bOverrideLightMapRes: boolean;
	bUseAsOccluder: boolean;
	bEnableDensityScaling: boolean;
	bEnableDiscardOnLoad: boolean;
	bRenderCustomDepth: boolean;
	bIncludeInHLOD: boolean;
	bVisibleInRayTracing: boolean;
	bHiddenInGame: boolean;
	bIsEditorOnly: boolean;
	bVisible: boolean;
	bConsiderForActorPlacementWhenHidden: boolean;
	bEvaluateWorldPositionOffset: boolean;
	bIsLocalToWorldDeterminantNegative: boolean;
	clone() : ISMComponentDescriptor;
	static C(Other: UObject | any): ISMComponentDescriptor;
}

declare class InstancedPlacemenClientSettings extends UObject { 
	UpdateGuid: Guid;
	ObjectPath: SoftObjectPath;
	InstancedComponentSettings: ISMComponentDescriptor;
	static Load(ResourceName: string): InstancedPlacemenClientSettings;
	static Find(Outer: UObject, ResourceName: string): InstancedPlacemenClientSettings;
	static GetDefaultObject(): InstancedPlacemenClientSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InstancedPlacemenClientSettings;
	static C(Other: UObject | any): InstancedPlacemenClientSettings;
}

declare class EditorInstancedPlacementSettings extends InstancedPlacemenClientSettings { 
	static Load(ResourceName: string): EditorInstancedPlacementSettings;
	static Find(Outer: UObject, ResourceName: string): EditorInstancedPlacementSettings;
	static GetDefaultObject(): EditorInstancedPlacementSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorInstancedPlacementSettings;
	static C(Other: UObject | any): EditorInstancedPlacementSettings;
}

declare type EUnit = 'Micrometers' | 'Millimeters' | 'Centimeters' | 'Meters' | 'Kilometers' | 'Inches' | 'Feet' | 'Yards' | 'Miles' | 'Lightyears' | 'Degrees' | 'Radians' | 'CentimetersPerSecond' | 'MetersPerSecond' | 'KilometersPerHour' | 'MilesPerHour' | 'Celsius' | 'Farenheit' | 'Kelvin' | 'Micrograms' | 'Milligrams' | 'Grams' | 'Kilograms' | 'MetricTons' | 'Ounces' | 'Pounds' | 'Stones' | 'Newtons' | 'PoundsForce' | 'KilogramsForce' | 'Hertz' | 'Kilohertz' | 'Megahertz' | 'Gigahertz' | 'RevolutionsPerMinute' | 'Bytes' | 'Kilobytes' | 'Megabytes' | 'Gigabytes' | 'Terabytes' | 'Lumens' | 'Milliseconds' | 'Seconds' | 'Minutes' | 'Hours' | 'Days' | 'Months' | 'Years' | 'Multiplier' | 'Percentage' | 'Unspecified' | 'EUnit_MAX';
declare var EUnit : { Micrometers:'Micrometers',Millimeters:'Millimeters',Centimeters:'Centimeters',Meters:'Meters',Kilometers:'Kilometers',Inches:'Inches',Feet:'Feet',Yards:'Yards',Miles:'Miles',Lightyears:'Lightyears',Degrees:'Degrees',Radians:'Radians',CentimetersPerSecond:'CentimetersPerSecond',MetersPerSecond:'MetersPerSecond',KilometersPerHour:'KilometersPerHour',MilesPerHour:'MilesPerHour',Celsius:'Celsius',Farenheit:'Farenheit',Kelvin:'Kelvin',Micrograms:'Micrograms',Milligrams:'Milligrams',Grams:'Grams',Kilograms:'Kilograms',MetricTons:'MetricTons',Ounces:'Ounces',Pounds:'Pounds',Stones:'Stones',Newtons:'Newtons',PoundsForce:'PoundsForce',KilogramsForce:'KilogramsForce',Hertz:'Hertz',Kilohertz:'Kilohertz',Megahertz:'Megahertz',Gigahertz:'Gigahertz',RevolutionsPerMinute:'RevolutionsPerMinute',Bytes:'Bytes',Kilobytes:'Kilobytes',Megabytes:'Megabytes',Gigabytes:'Gigabytes',Terabytes:'Terabytes',Lumens:'Lumens',Milliseconds:'Milliseconds',Seconds:'Seconds',Minutes:'Minutes',Hours:'Hours',Days:'Days',Months:'Months',Years:'Years',Multiplier:'Multiplier',Percentage:'Percentage',Unspecified:'Unspecified',EUnit_MAX:'EUnit_MAX', };
declare type EReferenceViewerSettingMode = 'NoPreference' | 'ShowByDefault' | 'HideByDefault' | 'EReferenceViewerSettingMode_MAX';
declare var EReferenceViewerSettingMode : { NoPreference:'NoPreference',ShowByDefault:'ShowByDefault',HideByDefault:'HideByDefault',EReferenceViewerSettingMode_MAX:'EReferenceViewerSettingMode_MAX', };
declare type EUnitDisplay = 'None' | 'Metric' | 'Imperial' | 'Invalid' | 'EUnitDisplay_MAX';
declare var EUnitDisplay : { None:'None',Metric:'Metric',Imperial:'Imperial',Invalid:'Invalid',EUnitDisplay_MAX:'EUnitDisplay_MAX', };
declare type EDefaultLocationUnit = 'Micrometers' | 'Millimeters' | 'Centimeters' | 'Meters' | 'Kilometers' | 'Inches' | 'Feet' | 'Yards' | 'Miles' | 'Invalid' | 'EDefaultLocationUnit_MAX';
declare var EDefaultLocationUnit : { Micrometers:'Micrometers',Millimeters:'Millimeters',Centimeters:'Centimeters',Meters:'Meters',Kilometers:'Kilometers',Inches:'Inches',Feet:'Feet',Yards:'Yards',Miles:'Miles',Invalid:'Invalid',EDefaultLocationUnit_MAX:'EDefaultLocationUnit_MAX', };
declare class EditorProjectAppearanceSettings extends DeveloperSettings { 
	bDisplayUnits: boolean;
	bDisplayUnitsOnComponentTransforms: boolean;
	DistanceUnits: EUnit[];
	MassUnits: EUnit[];
	TimeUnits: EUnit[];
	AngleUnits: EUnit;
	SpeedUnits: EUnit;
	TemperatureUnits: EUnit;
	ForceUnits: EUnit;
	ShowSearchableNames: EReferenceViewerSettingMode;
	ReferenceViewerDefaultMaxSearchBreadth: number;
	UnitDisplay: EUnitDisplay;
	DefaultInputUnits: EDefaultLocationUnit;
	static Load(ResourceName: string): EditorProjectAppearanceSettings;
	static Find(Outer: UObject, ResourceName: string): EditorProjectAppearanceSettings;
	static GetDefaultObject(): EditorProjectAppearanceSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorProjectAppearanceSettings;
	static C(Other: UObject | any): EditorProjectAppearanceSettings;
}

declare type ELevelEditor2DAxis = 'X' | 'Y' | 'Z' | 'ELevelEditor2DAxis_MAX';
declare var ELevelEditor2DAxis : { X:'X',Y:'Y',Z:'Z',ELevelEditor2DAxis_MAX:'ELevelEditor2DAxis_MAX', };
declare class Mode2DLayer { 
	Name: string;
	Depth: number;
	clone() : Mode2DLayer;
	static C(Other: UObject | any): Mode2DLayer;
}

declare class LevelEditor2DSettings extends DeveloperSettings { 
	bEnable2DWidget: boolean;
	bEnableSnapLayers: boolean;
	SnapAxis: ELevelEditor2DAxis;
	SnapLayers: Mode2DLayer[];
	static Load(ResourceName: string): LevelEditor2DSettings;
	static Find(Outer: UObject, ResourceName: string): LevelEditor2DSettings;
	static GetDefaultObject(): LevelEditor2DSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelEditor2DSettings;
	static C(Other: UObject | any): LevelEditor2DSettings;
}

declare type EScreenPercentageMode = 'Manual' | 'BasedOnDisplayResolution' | 'BasedOnDPIScale' | 'EScreenPercentageMode_MAX';
declare var EScreenPercentageMode : { Manual:'Manual',BasedOnDisplayResolution:'BasedOnDisplayResolution',BasedOnDPIScale:'BasedOnDPIScale',EScreenPercentageMode_MAX:'EScreenPercentageMode_MAX', };
declare class EditorPerformanceProjectSettings extends DeveloperSettings { 
	RealtimeScreenPercentageMode: EScreenPercentageMode;
	PathTracerScreenPercentageMode: EScreenPercentageMode;
	NonRealtimeScreenPercentageMode: EScreenPercentageMode;
	ManualScreenPercentage: number;
	MinViewportRenderingResolution: number;
	MaxViewportRenderingResolution: number;
	static Load(ResourceName: string): EditorPerformanceProjectSettings;
	static Find(Outer: UObject, ResourceName: string): EditorPerformanceProjectSettings;
	static GetDefaultObject(): EditorPerformanceProjectSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorPerformanceProjectSettings;
	static C(Other: UObject | any): EditorPerformanceProjectSettings;
}

declare class DDCProjectSettings extends DeveloperSettings { 
	EnableWarnings: boolean;
	RecommendEveryoneSetupAGlobalLocalDDCPath: boolean;
	RecommendEveryoneSetupAGlobalSharedDDCPath: boolean;
	RecommendEveryoneSetupAGlobalS3DDCPath: boolean;
	RecommendEveryoneEnableS3DDC: boolean;
	RecommendEveryoneUseUnrealCloudDDC: boolean;
	static Load(ResourceName: string): DDCProjectSettings;
	static Find(Outer: UObject, ResourceName: string): DDCProjectSettings;
	static GetDefaultObject(): DDCProjectSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DDCProjectSettings;
	static C(Other: UObject | any): DDCProjectSettings;
}

declare class RecentProjectFile { 
	ProjectName: string;
	LastOpenTime: DateTime;
	clone() : RecentProjectFile;
	static C(Other: UObject | any): RecentProjectFile;
}

declare class EditorSettings extends UObject { 
	GlobalLocalDDCPath: DirectoryPath;
	GlobalSharedDDCPath: DirectoryPath;
	LocalDerivedDataCache: DirectoryPath;
	SharedDerivedDataCache: DirectoryPath;
	bEnableDDCNotifications: boolean;
	bNotifyUseUnrealCloudDDC: boolean;
	bNotifySetupDDCPath: boolean;
	bNotifyEnableS3DD: boolean;
	bEnableS3DDC: boolean;
	GlobalS3DDCPath: DirectoryPath;
	bLoadTheMostRecentlyLoadedProjectAtStartup: boolean;
	bEditorAnalyticsEnabled: boolean;
	RecentlyOpenedProjectFiles: RecentProjectFile[];
	CreatedProjectPaths: string[];
	bCopyStarterContentPreference: boolean;
	CompletedSurveys: Guid[];
	InProgressSurveys: Guid[];
	AutoScalabilityWorkScaleAmount: number;
	static Load(ResourceName: string): EditorSettings;
	static Find(Outer: UObject, ResourceName: string): EditorSettings;
	static GetDefaultObject(): EditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorSettings;
	static C(Other: UObject | any): EditorSettings;
}

declare class EditorSkeletonNotifyObj extends UObject { 
	Name: string;
	static Load(ResourceName: string): EditorSkeletonNotifyObj;
	static Find(Outer: UObject, ResourceName: string): EditorSkeletonNotifyObj;
	static GetDefaultObject(): EditorSkeletonNotifyObj;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorSkeletonNotifyObj;
	static C(Other: UObject | any): EditorSkeletonNotifyObj;
}

declare class EditorStaticMeshFactory extends ActorFactoryStaticMesh { 
	static Load(ResourceName: string): EditorStaticMeshFactory;
	static Find(Outer: UObject, ResourceName: string): EditorStaticMeshFactory;
	static GetDefaultObject(): EditorStaticMeshFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorStaticMeshFactory;
	static C(Other: UObject | any): EditorStaticMeshFactory;
}

declare type EAssetEditorOpenLocation = 'Default' | 'NewWindow' | 'MainWindow' | 'ContentBrowser' | 'LastDockedWindowOrNewWindow' | 'LastDockedWindowOrMainWindow' | 'LastDockedWindowOrContentBrowser' | 'EAssetEditorOpenLocation_MAX';
declare var EAssetEditorOpenLocation : { Default:'Default',NewWindow:'NewWindow',MainWindow:'MainWindow',ContentBrowser:'ContentBrowser',LastDockedWindowOrNewWindow:'LastDockedWindowOrNewWindow',LastDockedWindowOrMainWindow:'LastDockedWindowOrMainWindow',LastDockedWindowOrContentBrowser:'LastDockedWindowOrContentBrowser',EAssetEditorOpenLocation_MAX:'EAssetEditorOpenLocation_MAX', };
declare class EditorStyleSettings extends UObject { 
	bEnableHighDPIAwareness: boolean;
	bEnableUserEditorLayoutManagement: boolean;
	ColorVisionDeficiencyPreviewType: EColorVisionDeficiency;
	ColorVisionDeficiencySeverity: number;
	bColorVisionDeficiencyCorrection: boolean;
	bColorVisionDeficiencyCorrectionPreviewWithDeficiency: boolean;
	SelectionColor: LinearColor;
	bEnableEditorWindowBackgroundColor: boolean;
	EditorWindowBackgroundColor: LinearColor;
	bUseSmallToolBarIcons: boolean;
	bUseGrid: boolean;
	RegularColor: LinearColor;
	RuleColor: LinearColor;
	CenterColor: LinearColor;
	GridSnapSize: number;
	GraphBackgroundBrush: SlateBrush;
	bShowFriendlyNames: boolean;
	bShowNativeComponentNames: boolean;
	bExpandConfigurationMenus: boolean;
	bShowProjectMenus: boolean;
	bShowLaunchMenus: boolean;
	bShowAllAdvancedDetails: boolean;
	bShowHiddenPropertiesWhilePlaying: boolean;
	AssetEditorOpenLocation: EAssetEditorOpenLocation;
	bEnableColorizedEditorTabs: boolean;
	CurrentAppliedTheme: Guid;
	static Load(ResourceName: string): EditorStyleSettings;
	static Find(Outer: UObject, ResourceName: string): EditorStyleSettings;
	static GetDefaultObject(): EditorStyleSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorStyleSettings;
	static C(Other: UObject | any): EditorStyleSettings;
}

declare class EditorSubsystemBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): EditorSubsystemBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): EditorSubsystemBlueprintLibrary;
	static GetDefaultObject(): EditorSubsystemBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorSubsystemBlueprintLibrary;
	static GetEditorSubsystem(Class: UnrealEngineClass): EditorSubsystem;
	static C(Other: UObject | any): EditorSubsystemBlueprintLibrary;
}

declare class EnumFactory extends Factory { 
	static Load(ResourceName: string): EnumFactory;
	static Find(Outer: UObject, ResourceName: string): EnumFactory;
	static GetDefaultObject(): EnumFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EnumFactory;
	static C(Other: UObject | any): EnumFactory;
}

declare class GatherTextCommandletBase extends Commandlet { 
	static Load(ResourceName: string): GatherTextCommandletBase;
	static Find(Outer: UObject, ResourceName: string): GatherTextCommandletBase;
	static GetDefaultObject(): GatherTextCommandletBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GatherTextCommandletBase;
	static C(Other: UObject | any): GatherTextCommandletBase;
}

declare class ExportDialogueScriptCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): ExportDialogueScriptCommandlet;
	static Find(Outer: UObject, ResourceName: string): ExportDialogueScriptCommandlet;
	static GetDefaultObject(): ExportDialogueScriptCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExportDialogueScriptCommandlet;
	static C(Other: UObject | any): ExportDialogueScriptCommandlet;
}

declare class ExportPakDependenciesCommandlet extends Commandlet { 
	static Load(ResourceName: string): ExportPakDependenciesCommandlet;
	static Find(Outer: UObject, ResourceName: string): ExportPakDependenciesCommandlet;
	static GetDefaultObject(): ExportPakDependenciesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExportPakDependenciesCommandlet;
	static C(Other: UObject | any): ExportPakDependenciesCommandlet;
}

declare class ExportTextContainer extends UObject { 
	ExportText: string;
	static Load(ResourceName: string): ExportTextContainer;
	static Find(Outer: UObject, ResourceName: string): ExportTextContainer;
	static GetDefaultObject(): ExportTextContainer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExportTextContainer;
	static C(Other: UObject | any): ExportTextContainer;
}

declare class ExternalActorsCommandlet extends Commandlet { 
	static Load(ResourceName: string): ExternalActorsCommandlet;
	static Find(Outer: UObject, ResourceName: string): ExternalActorsCommandlet;
	static GetDefaultObject(): ExternalActorsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExternalActorsCommandlet;
	static C(Other: UObject | any): ExternalActorsCommandlet;
}

declare class ExtractLocResCommandlet extends Commandlet { 
	static Load(ResourceName: string): ExtractLocResCommandlet;
	static Find(Outer: UObject, ResourceName: string): ExtractLocResCommandlet;
	static GetDefaultObject(): ExtractLocResCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExtractLocResCommandlet;
	static C(Other: UObject | any): ExtractLocResCommandlet;
}

declare class FbxSceneImportData extends UObject { 
	SourceFbxFile: string;
	static Load(ResourceName: string): FbxSceneImportData;
	static Find(Outer: UObject, ResourceName: string): FbxSceneImportData;
	static GetDefaultObject(): FbxSceneImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxSceneImportData;
	static C(Other: UObject | any): FbxSceneImportData;
}

declare class FbxAssetImportData extends AssetImportData { 
	ImportTranslation: Vector;
	ImportRotation: Rotator;
	ImportUniformScale: number;
	bConvertScene: boolean;
	bForceFrontXAxis: boolean;
	bConvertSceneUnit: boolean;
	bImportAsScene: boolean;
	FbxSceneImportDataReference: FbxSceneImportData;
	static Load(ResourceName: string): FbxAssetImportData;
	static Find(Outer: UObject, ResourceName: string): FbxAssetImportData;
	static GetDefaultObject(): FbxAssetImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxAssetImportData;
	static C(Other: UObject | any): FbxAssetImportData;
}

declare type EFBXAnimationLengthImportType = 'FBXALIT_ExportedTime' | 'FBXALIT_AnimatedKey' | 'FBXALIT_SetRange' | 'FBXALIT_MAX';
declare var EFBXAnimationLengthImportType : { FBXALIT_ExportedTime:'FBXALIT_ExportedTime',FBXALIT_AnimatedKey:'FBXALIT_AnimatedKey',FBXALIT_SetRange:'FBXALIT_SetRange',FBXALIT_MAX:'FBXALIT_MAX', };
declare class FbxAnimSequenceImportData extends FbxAssetImportData { 
	bImportMeshesInBoneHierarchy: boolean;
	AnimationLength: EFBXAnimationLengthImportType;
	StartFrame: number;
	EndFrame: number;
	FrameImportRange: Int32Interval;
	bUseDefaultSampleRate: boolean;
	CustomSampleRate: number;
	bSnapToClosestFrameBoundary: boolean;
	SourceAnimationName: string;
	bImportCustomAttribute: boolean;
	bDeleteExistingCustomAttributeCurves: boolean;
	bDeleteExistingNonCurveCustomAttributes: boolean;
	bImportBoneTracks: boolean;
	bSetMaterialDriveParameterOnCustomAttribute: boolean;
	MaterialCurveSuffixes: string[];
	bRemoveRedundantKeys: boolean;
	bDeleteExistingMorphTargetCurves: boolean;
	bDoNotImportCurveWithZero: boolean;
	bPreserveLocalTransform: boolean;
	static Load(ResourceName: string): FbxAnimSequenceImportData;
	static Find(Outer: UObject, ResourceName: string): FbxAnimSequenceImportData;
	static GetDefaultObject(): FbxAnimSequenceImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxAnimSequenceImportData;
	static C(Other: UObject | any): FbxAnimSequenceImportData;
}

declare type EFBXTestPlanActionType = 'Import' | 'Reimport' | 'AddLOD' | 'ReimportLOD' | 'ImportReload' | 'AddAlternateSkinnig' | 'EFBXTestPlanActionType_MAX';
declare var EFBXTestPlanActionType : { Import:'Import',Reimport:'Reimport',AddLOD:'AddLOD',ReimportLOD:'ReimportLOD',ImportReload:'ImportReload',AddAlternateSkinnig:'AddAlternateSkinnig',EFBXTestPlanActionType_MAX:'EFBXTestPlanActionType_MAX', };
declare type EFBXExpectedResultPreset = 'Error_Number' | 'Warning_Number' | 'Created_Staticmesh_Number' | 'Created_Skeletalmesh_Number' | 'Materials_Created_Number' | 'Material_Slot_Imported_Name' | 'Vertex_Number' | 'Lod_Number' | 'Vertex_Number_Lod' | 'Mesh_Materials_Number' | 'Mesh_LOD_Section_Number' | 'Mesh_LOD_Section_Vertex_Number' | 'Mesh_LOD_Section_Triangle_Number' | 'Mesh_LOD_Section_Material_Name' | 'Mesh_LOD_Section_Material_Index' | 'Mesh_LOD_Section_Material_Imported_Name' | 'Mesh_LOD_Vertex_Position' | 'Mesh_LOD_Vertex_Normal' | 'LOD_UV_Channel_Number' | 'Bone_Number' | 'Bone_Position' | 'Animation_Frame_Number' | 'Animation_Length' | 'Animation_CustomCurve_KeyValue' | 'Animation_CustomCurve_KeyArriveTangent' | 'Animation_CustomCurve_KeyLeaveTangent' | 'Skin_By_Bone_Vertex_Number' | 'Animation_CustomCurve_KeyArriveTangentWeight' | 'Animation_CustomCurve_KeyLeaveTangentWeight' | 'EFBXExpectedResultPreset_MAX';
declare var EFBXExpectedResultPreset : { Error_Number:'Error_Number',Warning_Number:'Warning_Number',Created_Staticmesh_Number:'Created_Staticmesh_Number',Created_Skeletalmesh_Number:'Created_Skeletalmesh_Number',Materials_Created_Number:'Materials_Created_Number',Material_Slot_Imported_Name:'Material_Slot_Imported_Name',Vertex_Number:'Vertex_Number',Lod_Number:'Lod_Number',Vertex_Number_Lod:'Vertex_Number_Lod',Mesh_Materials_Number:'Mesh_Materials_Number',Mesh_LOD_Section_Number:'Mesh_LOD_Section_Number',Mesh_LOD_Section_Vertex_Number:'Mesh_LOD_Section_Vertex_Number',Mesh_LOD_Section_Triangle_Number:'Mesh_LOD_Section_Triangle_Number',Mesh_LOD_Section_Material_Name:'Mesh_LOD_Section_Material_Name',Mesh_LOD_Section_Material_Index:'Mesh_LOD_Section_Material_Index',Mesh_LOD_Section_Material_Imported_Name:'Mesh_LOD_Section_Material_Imported_Name',Mesh_LOD_Vertex_Position:'Mesh_LOD_Vertex_Position',Mesh_LOD_Vertex_Normal:'Mesh_LOD_Vertex_Normal',LOD_UV_Channel_Number:'LOD_UV_Channel_Number',Bone_Number:'Bone_Number',Bone_Position:'Bone_Position',Animation_Frame_Number:'Animation_Frame_Number',Animation_Length:'Animation_Length',Animation_CustomCurve_KeyValue:'Animation_CustomCurve_KeyValue',Animation_CustomCurve_KeyArriveTangent:'Animation_CustomCurve_KeyArriveTangent',Animation_CustomCurve_KeyLeaveTangent:'Animation_CustomCurve_KeyLeaveTangent',Skin_By_Bone_Vertex_Number:'Skin_By_Bone_Vertex_Number',Animation_CustomCurve_KeyArriveTangentWeight:'Animation_CustomCurve_KeyArriveTangentWeight',Animation_CustomCurve_KeyLeaveTangentWeight:'Animation_CustomCurve_KeyLeaveTangentWeight',EFBXExpectedResultPreset_MAX:'EFBXExpectedResultPreset_MAX', };
declare class FbxTestPlanExpectedResult { 
	ExpectedPresetsType: EFBXExpectedResultPreset;
	ExpectedPresetsDataInteger: number[];
	ExpectedPresetsDataFloat: number[];
	ExpectedPresetsDataDouble: number[];
	ExpectedPresetsDataString: string[];
	clone() : FbxTestPlanExpectedResult;
	static C(Other: UObject | any): FbxTestPlanExpectedResult;
}

declare type EFBXImportType = 'FBXIT_StaticMesh' | 'FBXIT_SkeletalMesh' | 'FBXIT_Animation' | 'FBXIT_MAX';
declare var EFBXImportType : { FBXIT_StaticMesh:'FBXIT_StaticMesh',FBXIT_SkeletalMesh:'FBXIT_SkeletalMesh',FBXIT_Animation:'FBXIT_Animation',FBXIT_MAX:'FBXIT_MAX', };
declare type EFBXNormalImportMethod = 'FBXNIM_ComputeNormals' | 'FBXNIM_ImportNormals' | 'FBXNIM_ImportNormalsAndTangents' | 'FBXNIM_MAX';
declare var EFBXNormalImportMethod : { FBXNIM_ComputeNormals:'FBXNIM_ComputeNormals',FBXNIM_ImportNormals:'FBXNIM_ImportNormals',FBXNIM_ImportNormalsAndTangents:'FBXNIM_ImportNormalsAndTangents',FBXNIM_MAX:'FBXNIM_MAX', };
declare type EFBXNormalGenerationMethod = 'BuiltIn' | 'MikkTSpace' | 'EFBXNormalGenerationMethod_MAX';
declare var EFBXNormalGenerationMethod : { BuiltIn:'BuiltIn',MikkTSpace:'MikkTSpace',EFBXNormalGenerationMethod_MAX:'EFBXNormalGenerationMethod_MAX', };
declare class ImportMeshLodSectionsData { 
	SectionOriginalMaterialName: string[];
	clone() : ImportMeshLodSectionsData;
	static C(Other: UObject | any): ImportMeshLodSectionsData;
}

declare class FbxMeshImportData extends FbxAssetImportData { 
	bTransformVertexToAbsolute: boolean;
	bBakePivotInVertex: boolean;
	bImportMeshLODs: boolean;
	NormalImportMethod: EFBXNormalImportMethod;
	NormalGenerationMethod: EFBXNormalGenerationMethod;
	bComputeWeightedNormals: boolean;
	bReorderMaterialToFbxOrder: boolean;
	ImportMaterialOriginalNameData: string[];
	ImportMeshLodData: ImportMeshLodSectionsData[];
	static Load(ResourceName: string): FbxMeshImportData;
	static Find(Outer: UObject, ResourceName: string): FbxMeshImportData;
	static GetDefaultObject(): FbxMeshImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxMeshImportData;
	static C(Other: UObject | any): FbxMeshImportData;
}

declare type EVertexColorImportOption = 'Replace' | 'Ignore' | 'Override' | 'EVertexColorImportOption_MAX';
declare var EVertexColorImportOption : { Replace:'Replace',Ignore:'Ignore',Override:'Override',EVertexColorImportOption_MAX:'EVertexColorImportOption_MAX', };
declare class FbxStaticMeshImportData extends FbxMeshImportData { 
	StaticMeshLODGroup: string;
	VertexColorImportOption: EVertexColorImportOption;
	VertexOverrideColor: Color;
	bRemoveDegenerates: boolean;
	bBuildReversedIndexBuffer: boolean;
	bBuildNanite: boolean;
	bGenerateLightmapUVs: boolean;
	bOneConvexHullPerUCX: boolean;
	bAutoGenerateCollision: boolean;
	bCombineMeshes: boolean;
	DistanceFieldResolutionScale: number;
	static Load(ResourceName: string): FbxStaticMeshImportData;
	static Find(Outer: UObject, ResourceName: string): FbxStaticMeshImportData;
	static GetDefaultObject(): FbxStaticMeshImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxStaticMeshImportData;
	static C(Other: UObject | any): FbxStaticMeshImportData;
}

declare type EFBXImportContentType = 'FBXICT_All' | 'FBXICT_Geometry' | 'FBXICT_SkinningWeights' | 'FBXICT_MAX';
declare var EFBXImportContentType : { FBXICT_All:'FBXICT_All',FBXICT_Geometry:'FBXICT_Geometry',FBXICT_SkinningWeights:'FBXICT_SkinningWeights',FBXICT_MAX:'FBXICT_MAX', };
declare class FbxSkeletalMeshImportData extends FbxMeshImportData { 
	ImportContentType: EFBXImportContentType;
	LastImportContentType: EFBXImportContentType;
	VertexColorImportOption: EVertexColorImportOption;
	VertexOverrideColor: Color;
	bUpdateSkeletonReferencePose: boolean;
	bUseT0AsRefPose: boolean;
	bPreserveSmoothingGroups: boolean;
	bImportMeshesInBoneHierarchy: boolean;
	bImportMorphTargets: boolean;
	ThresholdPosition: number;
	ThresholdTangentNormal: number;
	ThresholdUV: number;
	MorphThresholdPosition: number;
	static Load(ResourceName: string): FbxSkeletalMeshImportData;
	static Find(Outer: UObject, ResourceName: string): FbxSkeletalMeshImportData;
	static GetDefaultObject(): FbxSkeletalMeshImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxSkeletalMeshImportData;
	static C(Other: UObject | any): FbxSkeletalMeshImportData;
}

declare type EMaterialSearchLocation = 'Local' | 'UnderParent' | 'UnderRoot' | 'AllAssets' | 'DoNotSearch' | 'EMaterialSearchLocation_MAX';
declare var EMaterialSearchLocation : { Local:'Local',UnderParent:'UnderParent',UnderRoot:'UnderRoot',AllAssets:'AllAssets',DoNotSearch:'DoNotSearch',EMaterialSearchLocation_MAX:'EMaterialSearchLocation_MAX', };
declare class FbxTextureImportData extends FbxAssetImportData { 
	bInvertNormalMaps: boolean;
	MaterialSearchLocation: EMaterialSearchLocation;
	BaseMaterialName: SoftObjectPath;
	BaseColorName: string;
	BaseDiffuseTextureName: string;
	BaseNormalTextureName: string;
	BaseEmissiveColorName: string;
	BaseEmmisiveTextureName: string;
	BaseSpecularTextureName: string;
	BaseOpacityTextureName: string;
	static Load(ResourceName: string): FbxTextureImportData;
	static Find(Outer: UObject, ResourceName: string): FbxTextureImportData;
	static GetDefaultObject(): FbxTextureImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxTextureImportData;
	static C(Other: UObject | any): FbxTextureImportData;
}

declare class FbxImportUI extends UObject { 
	bIsObjImport: boolean;
	OriginalImportType: EFBXImportType;
	MeshTypeToImport: EFBXImportType;
	bOverrideFullName: boolean;
	bImportAsSkeletal: boolean;
	bImportMesh: boolean;
	Skeleton: Skeleton;
	bCreatePhysicsAsset: boolean;
	PhysicsAsset: PhysicsAsset;
	bAutoComputeLodDistances: boolean;
	LodDistance0: number;
	LodDistance1: number;
	LodDistance2: number;
	LodDistance3: number;
	LodDistance4: number;
	LodDistance5: number;
	LodDistance6: number;
	LodDistance7: number;
	MinimumLodNumber: number;
	LodNumber: number;
	bImportAnimations: boolean;
	OverrideAnimationName: string;
	bImportRigidMesh: boolean;
	bImportMaterials: boolean;
	bImportTextures: boolean;
	bResetToFbxOnMaterialConflict: boolean;
	StaticMeshImportData: FbxStaticMeshImportData;
	SkeletalMeshImportData: FbxSkeletalMeshImportData;
	AnimSequenceImportData: FbxAnimSequenceImportData;
	TextureImportData: FbxTextureImportData;
	bAutomatedImportShouldDetectType: boolean;
	FileVersion: string;
	FileCreator: string;
	FileCreatorApplication: string;
	FileUnits: string;
	FileAxisDirection: string;
	FileSampleRate: string;
	AnimStartFrame: string;
	AnimEndFrame: string;
	static Load(ResourceName: string): FbxImportUI;
	static Find(Outer: UObject, ResourceName: string): FbxImportUI;
	static GetDefaultObject(): FbxImportUI;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxImportUI;
	ResetToDefault(): void;
	static C(Other: UObject | any): FbxImportUI;
}

declare class FbxTestPlan extends UObject { 
	TestPlanName: string;
	Action: EFBXTestPlanActionType;
	LODIndex: number;
	bDeleteFolderAssets: boolean;
	ExpectedResult: FbxTestPlanExpectedResult[];
	ImportUI: FbxImportUI;
	static Load(ResourceName: string): FbxTestPlan;
	static Find(Outer: UObject, ResourceName: string): FbxTestPlan;
	static GetDefaultObject(): FbxTestPlan;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxTestPlan;
	static C(Other: UObject | any): FbxTestPlan;
}

declare type EFbxExportCompatibility = 'FBX_2011' | 'FBX_2012' | 'FBX_2013' | 'FBX_2014' | 'FBX_2016' | 'FBX_2018' | 'FBX_2019' | 'FBX_2020' | 'FBX_MAX';
declare var EFbxExportCompatibility : { FBX_2011:'FBX_2011',FBX_2012:'FBX_2012',FBX_2013:'FBX_2013',FBX_2014:'FBX_2014',FBX_2016:'FBX_2016',FBX_2018:'FBX_2018',FBX_2019:'FBX_2019',FBX_2020:'FBX_2020',FBX_MAX:'FBX_MAX', };
declare class FbxExportOption extends UObject { 
	FbxExportCompatibility: EFbxExportCompatibility;
	bASCII: boolean;
	bForceFrontXAxis: boolean;
	VertexColor: boolean;
	LevelOfDetail: boolean;
	Collision: boolean;
	bExportMorphTargets: boolean;
	bExportPreviewMesh: boolean;
	MapSkeletalMotionToRoot: boolean;
	bExportLocalTime: boolean;
	static Load(ResourceName: string): FbxExportOption;
	static Find(Outer: UObject, ResourceName: string): FbxExportOption;
	static GetDefaultObject(): FbxExportOption;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxExportOption;
	static C(Other: UObject | any): FbxExportOption;
}

declare class FbxFactory extends Factory { 
	ImportUI: FbxImportUI;
	OriginalImportUI: FbxImportUI;
	static Load(ResourceName: string): FbxFactory;
	static Find(Outer: UObject, ResourceName: string): FbxFactory;
	static GetDefaultObject(): FbxFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxFactory;
	static C(Other: UObject | any): FbxFactory;
}

declare class SceneImportFactory extends Factory { 
	static Load(ResourceName: string): SceneImportFactory;
	static Find(Outer: UObject, ResourceName: string): SceneImportFactory;
	static GetDefaultObject(): SceneImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneImportFactory;
	static C(Other: UObject | any): SceneImportFactory;
}

declare type EFBXSceneOptionsCreateHierarchyType = 'FBXSOCHT_CreateLevelActors' | 'FBXSOCHT_CreateActorComponents' | 'FBXSOCHT_CreateBlueprint' | 'FBXSOCHT_MAX';
declare var EFBXSceneOptionsCreateHierarchyType : { FBXSOCHT_CreateLevelActors:'FBXSOCHT_CreateLevelActors',FBXSOCHT_CreateActorComponents:'FBXSOCHT_CreateActorComponents',FBXSOCHT_CreateBlueprint:'FBXSOCHT_CreateBlueprint',FBXSOCHT_MAX:'FBXSOCHT_MAX', };
declare class FbxSceneImportOptions extends UObject { 
	bCreateContentFolderHierarchy: boolean;
	bImportAsDynamic: boolean;
	HierarchyType: EFBXSceneOptionsCreateHierarchyType;
	bForceFrontXAxis: boolean;
	ImportTranslation: Vector;
	ImportRotation: Rotator;
	ImportUniformScale: number;
	bTransformVertexToAbsolute: boolean;
	bBakePivotInVertex: boolean;
	bImportStaticMeshLODs: boolean;
	bImportSkeletalMeshLODs: boolean;
	bInvertNormalMaps: boolean;
	static Load(ResourceName: string): FbxSceneImportOptions;
	static Find(Outer: UObject, ResourceName: string): FbxSceneImportOptions;
	static GetDefaultObject(): FbxSceneImportOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxSceneImportOptions;
	static C(Other: UObject | any): FbxSceneImportOptions;
}

declare type EFbxSceneVertexColorImportOption = 'Replace' | 'Ignore' | 'Override' | 'EFbxSceneVertexColorImportOption_MAX';
declare var EFbxSceneVertexColorImportOption : { Replace:'Replace',Ignore:'Ignore',Override:'Override',EFbxSceneVertexColorImportOption_MAX:'EFbxSceneVertexColorImportOption_MAX', };
declare type EFBXSceneNormalImportMethod = 'FBXSceneNIM_ComputeNormals' | 'FBXSceneNIM_ImportNormals' | 'FBXSceneNIM_ImportNormalsAndTangents' | 'FBXSceneNIM_MAX';
declare var EFBXSceneNormalImportMethod : { FBXSceneNIM_ComputeNormals:'FBXSceneNIM_ComputeNormals',FBXSceneNIM_ImportNormals:'FBXSceneNIM_ImportNormals',FBXSceneNIM_ImportNormalsAndTangents:'FBXSceneNIM_ImportNormalsAndTangents',FBXSceneNIM_MAX:'FBXSceneNIM_MAX', };
declare type EFBXSceneNormalGenerationMethod = 'BuiltIn' | 'MikkTSpace' | 'EFBXSceneNormalGenerationMethod_MAX';
declare var EFBXSceneNormalGenerationMethod : { BuiltIn:'BuiltIn',MikkTSpace:'MikkTSpace',EFBXSceneNormalGenerationMethod_MAX:'EFBXSceneNormalGenerationMethod_MAX', };
declare class FbxSceneImportOptionsStaticMesh extends UObject { 
	StaticMeshLODGroup: string;
	bAutoGenerateCollision: boolean;
	VertexColorImportOption: EFbxSceneVertexColorImportOption;
	VertexOverrideColor: Color;
	bRemoveDegenerates: boolean;
	bBuildReversedIndexBuffer: boolean;
	bGenerateLightmapUVs: boolean;
	bOneConvexHullPerUCX: boolean;
	NormalImportMethod: EFBXSceneNormalImportMethod;
	NormalGenerationMethod: EFBXSceneNormalGenerationMethod;
	static Load(ResourceName: string): FbxSceneImportOptionsStaticMesh;
	static Find(Outer: UObject, ResourceName: string): FbxSceneImportOptionsStaticMesh;
	static GetDefaultObject(): FbxSceneImportOptionsStaticMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxSceneImportOptionsStaticMesh;
	static C(Other: UObject | any): FbxSceneImportOptionsStaticMesh;
}

declare class FbxSceneImportOptionsSkeletalMesh extends UObject { 
	bUpdateSkeletonReferencePose: boolean;
	bCreatePhysicsAsset: boolean;
	bUseT0AsRefPose: boolean;
	bPreserveSmoothingGroups: boolean;
	bImportMeshesInBoneHierarchy: boolean;
	bImportMorphTargets: boolean;
	ThresholdPosition: number;
	ThresholdTangentNormal: number;
	ThresholdUV: number;
	MorphThresholdPosition: number;
	bImportAnimations: boolean;
	AnimationLength: EFBXAnimationLengthImportType;
	FrameImportRange: Int32Interval;
	bUseDefaultSampleRate: boolean;
	CustomSampleRate: number;
	bSnapToClosestFrameBoundary: boolean;
	bImportCustomAttribute: boolean;
	bDeleteExistingCustomAttributeCurves: boolean;
	bDeleteExistingNonCurveCustomAttributes: boolean;
	bPreserveLocalTransform: boolean;
	bDeleteExistingMorphTargetCurves: boolean;
	static Load(ResourceName: string): FbxSceneImportOptionsSkeletalMesh;
	static Find(Outer: UObject, ResourceName: string): FbxSceneImportOptionsSkeletalMesh;
	static GetDefaultObject(): FbxSceneImportOptionsSkeletalMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxSceneImportOptionsSkeletalMesh;
	static C(Other: UObject | any): FbxSceneImportOptionsSkeletalMesh;
}

declare class FbxSceneImportFactory extends SceneImportFactory { 
	SceneImportOptions: FbxSceneImportOptions;
	SceneImportOptionsStaticMesh: FbxSceneImportOptionsStaticMesh;
	SceneImportOptionsSkeletalMesh: FbxSceneImportOptionsSkeletalMesh;
	StaticMeshImportData: FbxStaticMeshImportData;
	SkeletalMeshImportData: FbxSkeletalMeshImportData;
	AnimSequenceImportData: FbxAnimSequenceImportData;
	TextureImportData: FbxTextureImportData;
	ReimportData: FbxSceneImportData;
	static Load(ResourceName: string): FbxSceneImportFactory;
	static Find(Outer: UObject, ResourceName: string): FbxSceneImportFactory;
	static GetDefaultObject(): FbxSceneImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxSceneImportFactory;
	static C(Other: UObject | any): FbxSceneImportFactory;
}

declare type EReloadPackagesInteractionMode = 'Interactive' | 'AssumePositive' | 'AssumeNegative' | 'EReloadPackagesInteractionMode_MAX';
declare var EReloadPackagesInteractionMode : { Interactive:'Interactive',AssumePositive:'AssumePositive',AssumeNegative:'AssumeNegative',EReloadPackagesInteractionMode_MAX:'EReloadPackagesInteractionMode_MAX', };
declare class EditorLoadingAndSavingUtils extends UObject { 
	static Load(ResourceName: string): EditorLoadingAndSavingUtils;
	static Find(Outer: UObject, ResourceName: string): EditorLoadingAndSavingUtils;
	static GetDefaultObject(): EditorLoadingAndSavingUtils;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorLoadingAndSavingUtils;
	static UnloadPackages(PackagesToUnload: Package[],bOutAnyPackagesUnloaded?: boolean,OutErrorMessage?: string): {bOutAnyPackagesUnloaded: boolean, OutErrorMessage: string};
	static SavePackagesWithDialog(PackagesToSave: Package[],bOnlyDirty: boolean): boolean;
	static SavePackages(PackagesToSave: Package[],bOnlyDirty: boolean): boolean;
	static SaveMap(World: World,AssetPath: string): boolean;
	static SaveDirtyPackagesWithDialog(bSaveMapPackages: boolean,bSaveContentPackages: boolean): boolean;
	static SaveDirtyPackages(bSaveMapPackages: boolean,bSaveContentPackages: boolean): boolean;
	static SaveCurrentLevel(): boolean;
	static ReloadPackages(PackagesToReload: Package[],bOutAnyPackagesReloaded?: boolean,OutErrorMessage?: string,InteractionMode?: EReloadPackagesInteractionMode): {bOutAnyPackagesReloaded: boolean, OutErrorMessage: string};
	static NewMapFromTemplate(PathToTemplateLevel: string,bSaveExistingMap: boolean): World;
	static NewBlankMap(bSaveExistingMap: boolean): World;
	static LoadMapWithDialog(): World;
	static LoadMap(Filename: string): World;
	static ImportScene(Filename: string): void;
	static GetDirtyMapPackages(OutDirtyPackages?: Package[]): {OutDirtyPackages: Package[]};
	static GetDirtyContentPackages(OutDirtyPackages?: Package[]): {OutDirtyPackages: Package[]};
	static ExportScene(bExportSelectedActorsOnly: boolean): void;
	static C(Other: UObject | any): EditorLoadingAndSavingUtils;
}

declare class FileServerCommandlet extends Commandlet { 
	static Load(ResourceName: string): FileServerCommandlet;
	static Find(Outer: UObject, ResourceName: string): FileServerCommandlet;
	static GetDefaultObject(): FileServerCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FileServerCommandlet;
	static C(Other: UObject | any): FileServerCommandlet;
}

declare class FixConflictingLocalizationKeysCommandlet extends Commandlet { 
	static Load(ResourceName: string): FixConflictingLocalizationKeysCommandlet;
	static Find(Outer: UObject, ResourceName: string): FixConflictingLocalizationKeysCommandlet;
	static GetDefaultObject(): FixConflictingLocalizationKeysCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FixConflictingLocalizationKeysCommandlet;
	static C(Other: UObject | any): FixConflictingLocalizationKeysCommandlet;
}

declare class ResavePackagesCommandlet extends Commandlet { 
	static Load(ResourceName: string): ResavePackagesCommandlet;
	static Find(Outer: UObject, ResourceName: string): ResavePackagesCommandlet;
	static GetDefaultObject(): ResavePackagesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ResavePackagesCommandlet;
	static C(Other: UObject | any): ResavePackagesCommandlet;
}

declare class FixupNeedsLoadForEditorGameCommandlet extends ResavePackagesCommandlet { 
	static Load(ResourceName: string): FixupNeedsLoadForEditorGameCommandlet;
	static Find(Outer: UObject, ResourceName: string): FixupNeedsLoadForEditorGameCommandlet;
	static GetDefaultObject(): FixupNeedsLoadForEditorGameCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FixupNeedsLoadForEditorGameCommandlet;
	static C(Other: UObject | any): FixupNeedsLoadForEditorGameCommandlet;
}

declare class FontFactory extends Factory { 
	static Load(ResourceName: string): FontFactory;
	static Find(Outer: UObject, ResourceName: string): FontFactory;
	static GetDefaultObject(): FontFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FontFactory;
	static C(Other: UObject | any): FontFactory;
}

declare class FontFileImportFactory extends Factory { 
	static Load(ResourceName: string): FontFileImportFactory;
	static Find(Outer: UObject, ResourceName: string): FontFileImportFactory;
	static GetDefaultObject(): FontFileImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FontFileImportFactory;
	static C(Other: UObject | any): FontFileImportFactory;
}

declare class FontThumbnailRenderer extends TextureThumbnailRenderer { 
	static Load(ResourceName: string): FontThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): FontThumbnailRenderer;
	static GetDefaultObject(): FontThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FontThumbnailRenderer;
	static C(Other: UObject | any): FontThumbnailRenderer;
}

declare class ForceFeedbackAttenuationFactory extends Factory { 
	static Load(ResourceName: string): ForceFeedbackAttenuationFactory;
	static Find(Outer: UObject, ResourceName: string): ForceFeedbackAttenuationFactory;
	static GetDefaultObject(): ForceFeedbackAttenuationFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ForceFeedbackAttenuationFactory;
	static C(Other: UObject | any): ForceFeedbackAttenuationFactory;
}

declare class ForceFeedbackEffectFactory extends Factory { 
	static Load(ResourceName: string): ForceFeedbackEffectFactory;
	static Find(Outer: UObject, ResourceName: string): ForceFeedbackEffectFactory;
	static GetDefaultObject(): ForceFeedbackEffectFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ForceFeedbackEffectFactory;
	static C(Other: UObject | any): ForceFeedbackEffectFactory;
}

declare class GatherTextCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GatherTextCommandlet;
	static Find(Outer: UObject, ResourceName: string): GatherTextCommandlet;
	static GetDefaultObject(): GatherTextCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GatherTextCommandlet;
	static C(Other: UObject | any): GatherTextCommandlet;
}

declare class GatherTextFromAssetsCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GatherTextFromAssetsCommandlet;
	static Find(Outer: UObject, ResourceName: string): GatherTextFromAssetsCommandlet;
	static GetDefaultObject(): GatherTextFromAssetsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GatherTextFromAssetsCommandlet;
	static C(Other: UObject | any): GatherTextFromAssetsCommandlet;
}

declare class GatherTextFromMetaDataCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GatherTextFromMetaDataCommandlet;
	static Find(Outer: UObject, ResourceName: string): GatherTextFromMetaDataCommandlet;
	static GetDefaultObject(): GatherTextFromMetaDataCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GatherTextFromMetaDataCommandlet;
	static C(Other: UObject | any): GatherTextFromMetaDataCommandlet;
}

declare class GatherTextFromSourceCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GatherTextFromSourceCommandlet;
	static Find(Outer: UObject, ResourceName: string): GatherTextFromSourceCommandlet;
	static GetDefaultObject(): GatherTextFromSourceCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GatherTextFromSourceCommandlet;
	static C(Other: UObject | any): GatherTextFromSourceCommandlet;
}

declare class GenerateAssetManifestCommandlet extends Commandlet { 
	static Load(ResourceName: string): GenerateAssetManifestCommandlet;
	static Find(Outer: UObject, ResourceName: string): GenerateAssetManifestCommandlet;
	static GetDefaultObject(): GenerateAssetManifestCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateAssetManifestCommandlet;
	static C(Other: UObject | any): GenerateAssetManifestCommandlet;
}

declare class GenerateBlueprintAPICommandlet extends Commandlet { 
	static Load(ResourceName: string): GenerateBlueprintAPICommandlet;
	static Find(Outer: UObject, ResourceName: string): GenerateBlueprintAPICommandlet;
	static GetDefaultObject(): GenerateBlueprintAPICommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateBlueprintAPICommandlet;
	static C(Other: UObject | any): GenerateBlueprintAPICommandlet;
}

declare class GenerateDistillFileSetsCommandlet extends Commandlet { 
	static Load(ResourceName: string): GenerateDistillFileSetsCommandlet;
	static Find(Outer: UObject, ResourceName: string): GenerateDistillFileSetsCommandlet;
	static GetDefaultObject(): GenerateDistillFileSetsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateDistillFileSetsCommandlet;
	static C(Other: UObject | any): GenerateDistillFileSetsCommandlet;
}

declare class GenerateGatherArchiveCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GenerateGatherArchiveCommandlet;
	static Find(Outer: UObject, ResourceName: string): GenerateGatherArchiveCommandlet;
	static GetDefaultObject(): GenerateGatherArchiveCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateGatherArchiveCommandlet;
	static C(Other: UObject | any): GenerateGatherArchiveCommandlet;
}

declare class GenerateGatherManifestCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GenerateGatherManifestCommandlet;
	static Find(Outer: UObject, ResourceName: string): GenerateGatherManifestCommandlet;
	static GetDefaultObject(): GenerateGatherManifestCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateGatherManifestCommandlet;
	static C(Other: UObject | any): GenerateGatherManifestCommandlet;
}

declare class GenerateTextLocalizationReportCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GenerateTextLocalizationReportCommandlet;
	static Find(Outer: UObject, ResourceName: string): GenerateTextLocalizationReportCommandlet;
	static GetDefaultObject(): GenerateTextLocalizationReportCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateTextLocalizationReportCommandlet;
	static C(Other: UObject | any): GenerateTextLocalizationReportCommandlet;
}

declare class GenerateTextLocalizationResourceCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): GenerateTextLocalizationResourceCommandlet;
	static Find(Outer: UObject, ResourceName: string): GenerateTextLocalizationResourceCommandlet;
	static GetDefaultObject(): GenerateTextLocalizationResourceCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateTextLocalizationResourceCommandlet;
	static C(Other: UObject | any): GenerateTextLocalizationResourceCommandlet;
}

declare class HapticFeedbackEffectBufferFactory extends Factory { 
	static Load(ResourceName: string): HapticFeedbackEffectBufferFactory;
	static Find(Outer: UObject, ResourceName: string): HapticFeedbackEffectBufferFactory;
	static GetDefaultObject(): HapticFeedbackEffectBufferFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HapticFeedbackEffectBufferFactory;
	static C(Other: UObject | any): HapticFeedbackEffectBufferFactory;
}

declare class HapticFeedbackEffectCurveFactory extends Factory { 
	static Load(ResourceName: string): HapticFeedbackEffectCurveFactory;
	static Find(Outer: UObject, ResourceName: string): HapticFeedbackEffectCurveFactory;
	static GetDefaultObject(): HapticFeedbackEffectCurveFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HapticFeedbackEffectCurveFactory;
	static C(Other: UObject | any): HapticFeedbackEffectCurveFactory;
}

declare class HapticFeedbackEffectSoundWaveFactory extends Factory { 
	static Load(ResourceName: string): HapticFeedbackEffectSoundWaveFactory;
	static Find(Outer: UObject, ResourceName: string): HapticFeedbackEffectSoundWaveFactory;
	static GetDefaultObject(): HapticFeedbackEffectSoundWaveFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HapticFeedbackEffectSoundWaveFactory;
	static C(Other: UObject | any): HapticFeedbackEffectSoundWaveFactory;
}

declare class HierarchicalLODSettings extends DeveloperSettings { 
	bForceSettingsInAllMaps: boolean;
	bSaveLODActorsToHLODPackages: boolean;
	DefaultSetup: Class;
	DirectoriesForHLODCommandlet: DirectoryPath[];
	MapsToBuild: FilePath[];
	BaseMaterial: MaterialInterface;
	static Load(ResourceName: string): HierarchicalLODSettings;
	static Find(Outer: UObject, ResourceName: string): HierarchicalLODSettings;
	static GetDefaultObject(): HierarchicalLODSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HierarchicalLODSettings;
	static C(Other: UObject | any): HierarchicalLODSettings;
}

declare class HierarchicalLODVolume extends Volume { 
	bIncludeOverlappingActors: boolean;
	ApplyOnlyToSpecificHLODLevels: number[];
	static GetDefaultObject(): HierarchicalLODVolume;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HierarchicalLODVolume;
	static C(Other: UObject | any): HierarchicalLODVolume;
}

declare class ImportAssetsCommandlet extends Commandlet { 
	GlobalImportData: AutomatedAssetImportData;
	ImportDataList: AutomatedAssetImportData[];
	static Load(ResourceName: string): ImportAssetsCommandlet;
	static Find(Outer: UObject, ResourceName: string): ImportAssetsCommandlet;
	static GetDefaultObject(): ImportAssetsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImportAssetsCommandlet;
	static C(Other: UObject | any): ImportAssetsCommandlet;
}

declare class ImportDialogueScriptCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): ImportDialogueScriptCommandlet;
	static Find(Outer: UObject, ResourceName: string): ImportDialogueScriptCommandlet;
	static GetDefaultObject(): ImportDialogueScriptCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImportDialogueScriptCommandlet;
	static C(Other: UObject | any): ImportDialogueScriptCommandlet;
}

declare class ImportLocalizedDialogueCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): ImportLocalizedDialogueCommandlet;
	static Find(Outer: UObject, ResourceName: string): ImportLocalizedDialogueCommandlet;
	static GetDefaultObject(): ImportLocalizedDialogueCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImportLocalizedDialogueCommandlet;
	static C(Other: UObject | any): ImportLocalizedDialogueCommandlet;
}

declare class ImportSubsystem extends EditorSubsystem { 
	OnAssetPreImport_BP: UnrealEngineMulticastDelegate<(InFactory: Factory, InClass: UnrealEngineClass, InParent: UObject, Name: string, Type: string) => void>;
	OnAssetPostImport_BP: UnrealEngineMulticastDelegate<(InFactory: Factory, InCreatedObject: UObject) => void>;
	OnAssetReimport_BP: UnrealEngineMulticastDelegate<(InCreatedObject: UObject) => void>;
	OnAssetPostLODImport_BP: UnrealEngineMulticastDelegate<(InObject: UObject, InLODIndex: number) => void>;
	static Load(ResourceName: string): ImportSubsystem;
	static Find(Outer: UObject, ResourceName: string): ImportSubsystem;
	static GetDefaultObject(): ImportSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImportSubsystem;
	static C(Other: UObject | any): ImportSubsystem;
}

declare class InterchangeReimportHandler extends UObject { 
	static Load(ResourceName: string): InterchangeReimportHandler;
	static Find(Outer: UObject, ResourceName: string): InterchangeReimportHandler;
	static GetDefaultObject(): InterchangeReimportHandler;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeReimportHandler;
	static C(Other: UObject | any): InterchangeReimportHandler;
}

declare class InternationalizationConditioningCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): InternationalizationConditioningCommandlet;
	static Find(Outer: UObject, ResourceName: string): InternationalizationConditioningCommandlet;
	static GetDefaultObject(): InternationalizationConditioningCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InternationalizationConditioningCommandlet;
	static C(Other: UObject | any): InternationalizationConditioningCommandlet;
}

declare class InternationalizationExportCommandlet extends GatherTextCommandletBase { 
	static Load(ResourceName: string): InternationalizationExportCommandlet;
	static Find(Outer: UObject, ResourceName: string): InternationalizationExportCommandlet;
	static GetDefaultObject(): InternationalizationExportCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InternationalizationExportCommandlet;
	static C(Other: UObject | any): InternationalizationExportCommandlet;
}

declare class IoStoreCommandlet extends Commandlet { 
	static Load(ResourceName: string): IoStoreCommandlet;
	static Find(Outer: UObject, ResourceName: string): IoStoreCommandlet;
	static GetDefaultObject(): IoStoreCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IoStoreCommandlet;
	static C(Other: UObject | any): IoStoreCommandlet;
}

declare class LayersSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): LayersSubsystem;
	static Find(Outer: UObject, ResourceName: string): LayersSubsystem;
	static GetDefaultObject(): LayersSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LayersSubsystem;
	UpdateAllViewVisibility(LayerThatChanged: string): void;
	UpdateAllActorsVisibility(bNotifySelectionChange: boolean,bRedrawViewports: boolean): boolean;
	UpdateActorVisibility(Actor: Actor,bOutSelectionChanged?: boolean,bOutActorModified?: boolean,bNotifySelectionChange?: boolean,bRedrawViewports?: boolean): {bOutSelectionChanged: boolean, bOutActorModified: boolean, $: boolean};
	UpdateActorAllViewsVisibility(Actor: Actor): void;
	TryGetLayer(LayerName: string,OutLayer?: Layer): {OutLayer: Layer, $: boolean};
	ToggleLayerVisibility(LayerName: string): void;
	ToggleLayersVisibility(LayerNames: string[]): void;
	SetLayerVisibility(LayerName: string,bIsVisible: boolean): void;
	SetLayersVisibility(LayerNames: string[],bIsVisible: boolean): void;
	SelectActorsInLayers(LayerNames: string[],bSelect: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean): boolean;
	SelectActorsInLayer(LayerName: string,bSelect: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean): boolean;
	RenameLayer(OriginalLayerName: string,NewLayerName: string): boolean;
	RemoveSelectedActorsFromLayers(LayerNames: string[]): boolean;
	RemoveSelectedActorsFromLayer(LayerName: string): boolean;
	RemoveLevelLayerInformation(Level: Level): void;
	RemoveActorsFromLayers(Actors: Actor[],LayerNames: string[],bUpdateStats: boolean): boolean;
	RemoveActorsFromLayer(Actors: Actor[],LayerName: string,bUpdateStats: boolean): boolean;
	RemoveActorFromLayers(Actor: Actor,LayerNames: string[],bUpdateStats: boolean): boolean;
	RemoveActorFromLayer(Actor: Actor,LayerToRemove: string,bUpdateStats: boolean): boolean;
	MakeAllLayersVisible(): void;
	IsLayer(LayerName: string): boolean;
	IsActorValidForLayer(Actor: Actor): boolean;
	InitializeNewActorLayers(Actor: Actor): boolean;
	GetWorld(): World;
	GetSelectedActors(): Actor[];
	GetLayer(LayerName: string): Layer;
	GetActorsFromLayers(LayerNames: string[]): Actor[];
	GetActorsFromLayer(LayerName: string): Actor[];
	EditorRefreshLayerBrowser(): void;
	EditorMapChange(): void;
	DisassociateActorsFromLayers(Actors: Actor[]): boolean;
	DisassociateActorFromLayers(Actor: Actor): boolean;
	DeleteLayers(LayersToDelete: string[]): void;
	DeleteLayer(LayerToDelete: string): void;
	CreateLayer(LayerName: string): Layer;
	AppendActorsFromLayers(LayerNames: string[],InOutActors?: Actor[]): {InOutActors: Actor[]};
	AppendActorsFromLayer(LayerName: string,InOutActors?: Actor[]): {InOutActors: Actor[]};
	AddSelectedActorsToLayers(LayerNames: string[]): boolean;
	AddSelectedActorsToLayer(LayerName: string): boolean;
	AddLevelLayerInformation(Level: Level): void;
	AddAllLayersTo(OutLayers?: Layer[]): {OutLayers: Layer[]};
	AddAllLayerNamesTo(OutLayerNames?: string[]): {OutLayerNames: string[]};
	AddActorToLayers(Actor: Actor,LayerNames: string[]): boolean;
	AddActorToLayer(Actor: Actor,LayerName: string): boolean;
	AddActorsToLayers(Actors: Actor[],LayerNames: string[]): boolean;
	AddActorsToLayer(Actors: Actor[],LayerName: string): boolean;
	static C(Other: UObject | any): LayersSubsystem;
}

declare class LegacyEdModeWrapper extends EdMode { 
	static Load(ResourceName: string): LegacyEdModeWrapper;
	static Find(Outer: UObject, ResourceName: string): LegacyEdModeWrapper;
	static GetDefaultObject(): LegacyEdModeWrapper;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyEdModeWrapper;
	static C(Other: UObject | any): LegacyEdModeWrapper;
}

declare class LegacyEdModeSelectInterface extends Interface { 
	static Load(ResourceName: string): LegacyEdModeSelectInterface;
	static Find(Outer: UObject, ResourceName: string): LegacyEdModeSelectInterface;
	static GetDefaultObject(): LegacyEdModeSelectInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyEdModeSelectInterface;
	static C(Other: UObject | any): LegacyEdModeSelectInterface;
}

declare class LegacyEdModeWidgetInterface extends Interface { 
	static Load(ResourceName: string): LegacyEdModeWidgetInterface;
	static Find(Outer: UObject, ResourceName: string): LegacyEdModeWidgetInterface;
	static GetDefaultObject(): LegacyEdModeWidgetInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyEdModeWidgetInterface;
	static C(Other: UObject | any): LegacyEdModeWidgetInterface;
}

declare class LegacyEdModeToolInterface extends Interface { 
	static Load(ResourceName: string): LegacyEdModeToolInterface;
	static Find(Outer: UObject, ResourceName: string): LegacyEdModeToolInterface;
	static GetDefaultObject(): LegacyEdModeToolInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyEdModeToolInterface;
	static C(Other: UObject | any): LegacyEdModeToolInterface;
}

declare class LegacyEdModeDrawHelperInterface extends Interface { 
	static Load(ResourceName: string): LegacyEdModeDrawHelperInterface;
	static Find(Outer: UObject, ResourceName: string): LegacyEdModeDrawHelperInterface;
	static GetDefaultObject(): LegacyEdModeDrawHelperInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyEdModeDrawHelperInterface;
	static C(Other: UObject | any): LegacyEdModeDrawHelperInterface;
}

declare class LegacyEdModeViewportInterface extends Interface { 
	static Load(ResourceName: string): LegacyEdModeViewportInterface;
	static Find(Outer: UObject, ResourceName: string): LegacyEdModeViewportInterface;
	static GetDefaultObject(): LegacyEdModeViewportInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyEdModeViewportInterface;
	static C(Other: UObject | any): LegacyEdModeViewportInterface;
}

declare class LevelEditorMiscSettings extends DeveloperSettings { 
	bAutoApplyLightingEnable: boolean;
	bBSPAutoUpdate: boolean;
	bAutoMoveBSPPivotOffset: boolean;
	bNavigationAutoUpdate: boolean;
	bReplaceRespectsScale: boolean;
	bEnableExperimentalLevelEditor: boolean;
	bAvoidRelabelOnPasteSelected: boolean;
	bAllowBackgroundAudio: boolean;
	bCreateNewAudioDeviceForPlayInEditor: boolean;
	bEnableRealTimeAudio: boolean;
	EditorVolumeLevel: number;
	bEnableEditorSounds: boolean;
	DefaultLevelStreamingClass: UnrealEngineClass;
	bPromptWhenAddingToLevelBeforeCheckout: boolean;
	bPromptWhenAddingToLevelOutsideBounds: boolean;
	PercentageThresholdForPrompt: number;
	MinimumBoundsForCheckingSize: Vector;
	EditorScreenshotSaveDirectory: DirectoryPath;
	static Load(ResourceName: string): LevelEditorMiscSettings;
	static Find(Outer: UObject, ResourceName: string): LevelEditorMiscSettings;
	static GetDefaultObject(): LevelEditorMiscSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelEditorMiscSettings;
	static C(Other: UObject | any): LevelEditorMiscSettings;
}

declare class CommonResolutionMenuContext extends ToolMenuContextBase { 
	static Load(ResourceName: string): CommonResolutionMenuContext;
	static Find(Outer: UObject, ResourceName: string): CommonResolutionMenuContext;
	static GetDefaultObject(): CommonResolutionMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CommonResolutionMenuContext;
	static C(Other: UObject | any): CommonResolutionMenuContext;
}

declare type ELabelAnchorMode = 'LabelAnchorMode_TopLeft' | 'LabelAnchorMode_TopCenter' | 'LabelAnchorMode_TopRight' | 'LabelAnchorMode_CenterLeft' | 'LabelAnchorMode_Centered' | 'LabelAnchorMode_CenterRight' | 'LabelAnchorMode_BottomLeft' | 'LabelAnchorMode_BottomCenter' | 'LabelAnchorMode_BottomRight' | 'LabelAnchorMode_MAX';
declare var ELabelAnchorMode : { LabelAnchorMode_TopLeft:'LabelAnchorMode_TopLeft',LabelAnchorMode_TopCenter:'LabelAnchorMode_TopCenter',LabelAnchorMode_TopRight:'LabelAnchorMode_TopRight',LabelAnchorMode_CenterLeft:'LabelAnchorMode_CenterLeft',LabelAnchorMode_Centered:'LabelAnchorMode_Centered',LabelAnchorMode_CenterRight:'LabelAnchorMode_CenterRight',LabelAnchorMode_BottomLeft:'LabelAnchorMode_BottomLeft',LabelAnchorMode_BottomCenter:'LabelAnchorMode_BottomCenter',LabelAnchorMode_BottomRight:'LabelAnchorMode_BottomRight',LabelAnchorMode_MAX:'LabelAnchorMode_MAX', };
declare type EPlayOnBuildMode = 'PlayOnBuild_Always' | 'PlayOnBuild_Never' | 'PlayOnBuild_Default' | 'PlayOnBuild_IfEditorBuiltLocally' | 'PlayOnBuild_MAX';
declare var EPlayOnBuildMode : { PlayOnBuild_Always:'PlayOnBuild_Always',PlayOnBuild_Never:'PlayOnBuild_Never',PlayOnBuild_Default:'PlayOnBuild_Default',PlayOnBuild_IfEditorBuiltLocally:'PlayOnBuild_IfEditorBuiltLocally',PlayOnBuild_MAX:'PlayOnBuild_MAX', };
declare type EPlayOnLaunchConfiguration = 'LaunchConfig_Default' | 'LaunchConfig_Debug' | 'LaunchConfig_Development' | 'LaunchConfig_Test' | 'LaunchConfig_Shipping' | 'LaunchConfig_MAX';
declare var EPlayOnLaunchConfiguration : { LaunchConfig_Default:'LaunchConfig_Default',LaunchConfig_Debug:'LaunchConfig_Debug',LaunchConfig_Development:'LaunchConfig_Development',LaunchConfig_Test:'LaunchConfig_Test',LaunchConfig_Shipping:'LaunchConfig_Shipping',LaunchConfig_MAX:'LaunchConfig_MAX', };
declare type EPlayOnPakFileMode = 'NoPak' | 'PakNoCompress' | 'PakCompress' | 'EPlayOnPakFileMode_MAX';
declare var EPlayOnPakFileMode : { NoPak:'NoPak',PakNoCompress:'PakNoCompress',PakCompress:'PakCompress',EPlayOnPakFileMode_MAX:'EPlayOnPakFileMode_MAX', };
declare type EPlayNetMode = 'PIE_Standalone' | 'PIE_ListenServer' | 'PIE_Client' | 'PIE_MAX';
declare var EPlayNetMode : { PIE_Standalone:'PIE_Standalone',PIE_ListenServer:'PIE_ListenServer',PIE_Client:'PIE_Client',PIE_MAX:'PIE_MAX', };
declare type NetworkEmulationTarget = 'Server' | 'Client' | 'Any' | 'NetworkEmulationTarget_MAX';
declare var NetworkEmulationTarget : { Server:'Server',Client:'Client',Any:'Any',NetworkEmulationTarget_MAX:'NetworkEmulationTarget_MAX', };
declare class NetworkEmulationPacketSettings { 
	MinLatency: number;
	MaxLatency: number;
	PacketLossPercentage: number;
	clone() : NetworkEmulationPacketSettings;
	static C(Other: UObject | any): NetworkEmulationPacketSettings;
}

declare class LevelEditorPlayNetworkEmulationSettings { 
	bIsNetworkEmulationEnabled: boolean;
	EmulationTarget: NetworkEmulationTarget;
	CurrentProfile: string;
	OutPackets: NetworkEmulationPacketSettings;
	InPackets: NetworkEmulationPacketSettings;
	clone() : LevelEditorPlayNetworkEmulationSettings;
	static C(Other: UObject | any): LevelEditorPlayNetworkEmulationSettings;
}

declare type ELaunchModeType = 'LaunchMode_OnDevice' | 'LaunchMode_MAX';
declare var ELaunchModeType : { LaunchMode_OnDevice:'LaunchMode_OnDevice',LaunchMode_MAX:'LaunchMode_MAX', };
declare type EPlayModeLocations = 'PlayLocation_CurrentCameraLocation' | 'PlayLocation_DefaultPlayerStart' | 'PlayLocation_MAX';
declare var EPlayModeLocations : { PlayLocation_CurrentCameraLocation:'PlayLocation_CurrentCameraLocation',PlayLocation_DefaultPlayerStart:'PlayLocation_DefaultPlayerStart',PlayLocation_MAX:'PlayLocation_MAX', };
declare type EPlayModeType = 'PlayMode_InViewPort' | 'PlayMode_InEditorFloating' | 'PlayMode_InMobilePreview' | 'PlayMode_InTargetedMobilePreview' | 'PlayMode_InVulkanPreview' | 'PlayMode_InNewProcess' | 'PlayMode_InVR' | 'PlayMode_Simulate' | 'PlayMode_QuickLaunch' | 'PlayMode_Count' | 'PlayMode_MAX';
declare var EPlayModeType : { PlayMode_InViewPort:'PlayMode_InViewPort',PlayMode_InEditorFloating:'PlayMode_InEditorFloating',PlayMode_InMobilePreview:'PlayMode_InMobilePreview',PlayMode_InTargetedMobilePreview:'PlayMode_InTargetedMobilePreview',PlayMode_InVulkanPreview:'PlayMode_InVulkanPreview',PlayMode_InNewProcess:'PlayMode_InNewProcess',PlayMode_InVR:'PlayMode_InVR',PlayMode_Simulate:'PlayMode_Simulate',PlayMode_QuickLaunch:'PlayMode_QuickLaunch',PlayMode_Count:'PlayMode_Count',PlayMode_MAX:'PlayMode_MAX', };
declare class PlayScreenResolution { 
	Description: string;
	Width: number;
	Height: number;
	AspectRatio: string;
	bCanSwapAspectRatio: boolean;
	ProfileName: string;
	ScaleFactor: number;
	LogicalHeight: number;
	LogicalWidth: number;
	clone() : PlayScreenResolution;
	static C(Other: UObject | any): PlayScreenResolution;
}

declare class LevelEditorPlaySettings extends UObject { 
	PlayFromHerePlayerStartClassName: string;
	GameGetsMouseControl: boolean;
	UseMouseForTouch: boolean;
	ShowMouseControlLabel: boolean;
	MouseControlLabelPosition: ELabelAnchorMode;
	ViewportGetsHMDControl: boolean;
	ShouldMinimizeEditorOnVRPIE: boolean;
	bShouldMinimizeEditorOnNonVRPIE: boolean;
	bEmulateStereo: boolean;
	AutoRecompileBlueprints: boolean;
	EnableGameSound: boolean;
	SoloAudioInFirstPIEClient: boolean;
	EnablePIEEnterAndExitSounds: boolean;
	PlayInEditorSoundQualityLevel: number;
	bUseNonRealtimeAudioDevice: boolean;
	bOnlyLoadVisibleLevelsInPIE: boolean;
	bPreferToStreamLevelsInPIE: boolean;
	bPromoteOutputLogWarningsDuringPIE: boolean;
	NewWindowWidth: number;
	NewWindowHeight: number;
	NewWindowPosition: IntPoint;
	CenterNewWindow: boolean;
	PIEAlwaysOnTop: boolean;
	DisableStandaloneSound: boolean;
	AdditionalLaunchParameters: string;
	BuildGameBeforeLaunch: EPlayOnBuildMode;
	LaunchConfiguration: EPlayOnLaunchConfiguration;
	PackFilesForLaunch: EPlayOnPakFileMode;
	bAutoCompileBlueprintsOnLaunch: boolean;
	bLaunchSeparateServer: boolean;
	PlayNetMode: EPlayNetMode;
	RunUnderOneProcess: boolean;
	PlayNetDedicated: boolean;
	PlayNumberOfClients: number;
	PrimaryPIEClientIndex: number;
	ServerPort: number;
	ClientWindowWidth: number;
	AutoConnectToServer: boolean;
	RouteGamepadToSecondWindow: boolean;
	CreateAudioDeviceForEveryPlayer: boolean;
	ClientWindowHeight: number;
	ServerMapNameOverride: string;
	AdditionalServerGameOptions: string;
	AdditionalLaunchOptions: string;
	bShowServerDebugDrawingByDefault: boolean;
	ServerDebugDrawingColorTintStrength: number;
	ServerDebugDrawingColorTint: LinearColor;
	AdditionalServerLaunchParameters: string;
	ServerFixedFPS: number;
	ClientFixedFPS: number[];
	NetworkEmulationSettings: LevelEditorPlayNetworkEmulationSettings;
	LastSize: IntPoint;
	MultipleInstancePositions: IntPoint[];
	LastExecutedLaunchDevice: string;
	LastExecutedLaunchName: string;
	LastExecutedLaunchModeType: ELaunchModeType;
	LastExecutedPlayModeLocation: EPlayModeLocations;
	LastExecutedPlayModeType: EPlayModeType;
	LastExecutedPIEPreviewDevice: string;
	LaptopScreenResolutions: PlayScreenResolution[];
	MonitorScreenResolutions: PlayScreenResolution[];
	PhoneScreenResolutions: PlayScreenResolution[];
	TabletScreenResolutions: PlayScreenResolution[];
	TelevisionScreenResolutions: PlayScreenResolution[];
	DeviceToEmulate: string;
	PIESafeZoneOverride: Margin;
	CustomUnsafeZoneStarts: Vector2D[];
	CustomUnsafeZoneDimensions: Vector2D[];
	static Load(ResourceName: string): LevelEditorPlaySettings;
	static Find(Outer: UObject, ResourceName: string): LevelEditorPlaySettings;
	static GetDefaultObject(): LevelEditorPlaySettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelEditorPlaySettings;
	static C(Other: UObject | any): LevelEditorPlaySettings;
}

declare type EWASDType = 'WASD_Always' | 'WASD_RMBOnly' | 'WASD_Never' | 'WASD_MAX';
declare var EWASDType : { WASD_Always:'WASD_Always',WASD_RMBOnly:'WASD_RMBOnly',WASD_Never:'WASD_Never',WASD_MAX:'WASD_MAX', };
declare type ELandscapeFoliageEditorControlType = 'IgnoreCtrl' | 'RequireCtrl' | 'RequireNoCtrl' | 'ELandscapeFoliageEditorControlType_MAX';
declare var ELandscapeFoliageEditorControlType : { IgnoreCtrl:'IgnoreCtrl',RequireCtrl:'RequireCtrl',RequireNoCtrl:'RequireNoCtrl',ELandscapeFoliageEditorControlType_MAX:'ELandscapeFoliageEditorControlType_MAX', };
declare type EScrollGestureDirection = 'UseSystemSetting' | 'Standard' | 'Natural' | 'EScrollGestureDirection_MAX';
declare var EScrollGestureDirection : { UseSystemSetting:'UseSystemSetting',Standard:'Standard',Natural:'Natural',EScrollGestureDirection_MAX:'EScrollGestureDirection_MAX', };
declare class SnapToSurfaceSettings { 
	bEnabled: boolean;
	SnapOffsetExtent: number;
	bSnapRotation: boolean;
	clone() : SnapToSurfaceSettings;
	static C(Other: UObject | any): SnapToSurfaceSettings;
}

declare type ERotationGridMode = 'GridMode_DivisionsOf360' | 'GridMode_Common' | 'GridMode_MAX';
declare var ERotationGridMode : { GridMode_DivisionsOf360:'GridMode_DivisionsOf360',GridMode_Common:'GridMode_Common',GridMode_MAX:'GridMode_MAX', };
declare type EMeasuringToolUnits = 'MeasureUnits_Centimeters' | 'MeasureUnits_Meters' | 'MeasureUnits_Kilometers' | 'MeasureUnits_MAX';
declare var EMeasuringToolUnits : { MeasureUnits_Centimeters:'MeasureUnits_Centimeters',MeasureUnits_Meters:'MeasureUnits_Meters',MeasureUnits_Kilometers:'MeasureUnits_Kilometers',MeasureUnits_MAX:'MeasureUnits_MAX', };
declare type EMaterialKind = 'Unknown' | 'Base' | 'Normal' | 'Specular' | 'Emissive' | 'EMaterialKind_MAX';
declare var EMaterialKind : { Unknown:'Unknown',Base:'Base',Normal:'Normal',Specular:'Specular',Emissive:'Emissive',EMaterialKind_MAX:'EMaterialKind_MAX', };
declare type ELevelViewportType = 'LVT_OrthoXY' | 'LVT_OrthoXZ' | 'LVT_OrthoYZ' | 'LVT_Perspective' | 'LVT_OrthoFreelook' | 'LVT_OrthoNegativeXY' | 'LVT_OrthoNegativeXZ' | 'LVT_OrthoNegativeYZ' | 'LVT_MAX' | 'LVT_None';
declare var ELevelViewportType : { LVT_OrthoXY:'LVT_OrthoXY',LVT_OrthoXZ:'LVT_OrthoXZ',LVT_OrthoYZ:'LVT_OrthoYZ',LVT_Perspective:'LVT_Perspective',LVT_OrthoFreelook:'LVT_OrthoFreelook',LVT_OrthoNegativeXY:'LVT_OrthoNegativeXY',LVT_OrthoNegativeXZ:'LVT_OrthoNegativeXZ',LVT_OrthoNegativeYZ:'LVT_OrthoNegativeYZ',LVT_MAX:'LVT_MAX',LVT_None:'LVT_None', };
declare type EViewModeIndex = 'VMI_BrushWireframe' | 'VMI_Wireframe' | 'VMI_Unlit' | 'VMI_Lit' | 'VMI_Lit_DetailLighting' | 'VMI_LightingOnly' | 'VMI_LightComplexity' | 'VMI_ShaderComplexity' | 'VMI_LightmapDensity' | 'VMI_LitLightmapDensity' | 'VMI_ReflectionOverride' | 'VMI_VisualizeBuffer' | 'VMI_StationaryLightOverlap' | 'VMI_CollisionPawn' | 'VMI_CollisionVisibility' | 'VMI_LODColoration' | 'VMI_QuadOverdraw' | 'VMI_PrimitiveDistanceAccuracy' | 'VMI_MeshUVDensityAccuracy' | 'VMI_ShaderComplexityWithQuadOverdraw' | 'VMI_HLODColoration' | 'VMI_GroupLODColoration' | 'VMI_MaterialTextureScaleAccuracy' | 'VMI_RequiredTextureResolution' | 'VMI_PathTracing' | 'VMI_RayTracingDebug' | 'VMI_VisualizeNanite' | 'VMI_VirtualTexturePendingMips' | 'VMI_VisualizeLumen' | 'VMI_VisualizeVirtualShadowMap' | 'VMI_VisualizeGPUSkinCache' | 'VMI_Max' | 'VMI_Unknown';
declare var EViewModeIndex : { VMI_BrushWireframe:'VMI_BrushWireframe',VMI_Wireframe:'VMI_Wireframe',VMI_Unlit:'VMI_Unlit',VMI_Lit:'VMI_Lit',VMI_Lit_DetailLighting:'VMI_Lit_DetailLighting',VMI_LightingOnly:'VMI_LightingOnly',VMI_LightComplexity:'VMI_LightComplexity',VMI_ShaderComplexity:'VMI_ShaderComplexity',VMI_LightmapDensity:'VMI_LightmapDensity',VMI_LitLightmapDensity:'VMI_LitLightmapDensity',VMI_ReflectionOverride:'VMI_ReflectionOverride',VMI_VisualizeBuffer:'VMI_VisualizeBuffer',VMI_StationaryLightOverlap:'VMI_StationaryLightOverlap',VMI_CollisionPawn:'VMI_CollisionPawn',VMI_CollisionVisibility:'VMI_CollisionVisibility',VMI_LODColoration:'VMI_LODColoration',VMI_QuadOverdraw:'VMI_QuadOverdraw',VMI_PrimitiveDistanceAccuracy:'VMI_PrimitiveDistanceAccuracy',VMI_MeshUVDensityAccuracy:'VMI_MeshUVDensityAccuracy',VMI_ShaderComplexityWithQuadOverdraw:'VMI_ShaderComplexityWithQuadOverdraw',VMI_HLODColoration:'VMI_HLODColoration',VMI_GroupLODColoration:'VMI_GroupLODColoration',VMI_MaterialTextureScaleAccuracy:'VMI_MaterialTextureScaleAccuracy',VMI_RequiredTextureResolution:'VMI_RequiredTextureResolution',VMI_PathTracing:'VMI_PathTracing',VMI_RayTracingDebug:'VMI_RayTracingDebug',VMI_VisualizeNanite:'VMI_VisualizeNanite',VMI_VirtualTexturePendingMips:'VMI_VirtualTexturePendingMips',VMI_VisualizeLumen:'VMI_VisualizeLumen',VMI_VisualizeVirtualShadowMap:'VMI_VisualizeVirtualShadowMap',VMI_VisualizeGPUSkinCache:'VMI_VisualizeGPUSkinCache',VMI_Max:'VMI_Max',VMI_Unknown:'VMI_Unknown', };
declare class ExposureSettings { 
	FixedEV100: number;
	bFixed: boolean;
	clone() : ExposureSettings;
	static C(Other: UObject | any): ExposureSettings;
}

declare class LevelEditorViewportInstanceSettings { 
	ViewportType: ELevelViewportType;
	PerspViewModeIndex: EViewModeIndex;
	OrthoViewModeIndex: EViewModeIndex;
	EditorShowFlagsString: string;
	GameShowFlagsString: string;
	BufferVisualizationMode: string;
	NaniteVisualizationMode: string;
	LumenVisualizationMode: string;
	VirtualShadowMapVisualizationMode: string;
	RayTracingDebugVisualizationMode: string;
	GPUSkinCacheVisualizationMode: string;
	ExposureSettings: ExposureSettings;
	FOVAngle: number;
	FarViewPlane: number;
	bIsRealtime: boolean;
	bShowFPS: boolean;
	bShowOnScreenStats: boolean;
	EnabledStats: string[];
	bShowFullToolbar: boolean;
	clone() : LevelEditorViewportInstanceSettings;
	static C(Other: UObject | any): LevelEditorViewportInstanceSettings;
}

declare class LevelEditorViewportInstanceSettingsKeyValuePair { 
	ConfigName: string;
	ConfigSettings: LevelEditorViewportInstanceSettings;
	clone() : LevelEditorViewportInstanceSettingsKeyValuePair;
	static C(Other: UObject | any): LevelEditorViewportInstanceSettingsKeyValuePair;
}

declare class LevelEditorViewportSettings extends UObject { 
	FlightCameraControlType: EWASDType;
	FlightCameraControlExperimentalNavigation: boolean;
	LandscapeEditorControlType: ELandscapeFoliageEditorControlType;
	FoliageEditorControlType: ELandscapeFoliageEditorControlType;
	bPanMovesCanvas: boolean;
	bCenterZoomAroundCursor: boolean;
	MinimumOrthographicZoom: number;
	bAllowTranslateRotateZWidget: boolean;
	bAllowArcballRotate: boolean;
	bAllowScreenRotate: boolean;
	bClickBSPSelectsBrush: boolean;
	bShowActorEditorContext: boolean;
	CameraSpeed: number;
	CameraSpeedScalar: number;
	MouseScrollCameraSpeed: number;
	MouseSensitivty: number;
	bInvertMouseLookYAxis: boolean;
	bInvertOrbitYAxis: boolean;
	bInvertMiddleMousePan: boolean;
	bInvertRightMouseDollyYAxis: boolean;
	bUseAbsoluteTranslation: boolean;
	bLevelStreamingVolumePrevis: boolean;
	bUseUE3OrbitControls: boolean;
	ScrollGestureDirectionFor3DViewports: EScrollGestureDirection;
	ScrollGestureDirectionForOrthoViewports: EScrollGestureDirection;
	bLevelEditorJoystickControls: boolean;
	bUseDistanceScaledCameraSpeed: boolean;
	bOrbitCameraAroundSelection: boolean;
	bUsePowerOf2SnapSize: boolean;
	DecimalGridSizes: number[];
	DecimalGridIntervals: number[];
	Pow2GridSizes: number[];
	Pow2GridIntervals: number[];
	CommonRotGridSizes: number[];
	DivisionsOf360RotGridSizes: number[];
	ScalingGridSizes: number[];
	GridEnabled: boolean;
	RotGridEnabled: boolean;
	SnapScaleEnabled: boolean;
	SnapToSurface: SnapToSurfaceSettings;
	bUsePercentageBasedScaling: boolean;
	bEnableLayerSnap: boolean;
	ActiveSnapLayerIndex: number;
	bEnableActorSnap: boolean;
	ActorSnapScale: number;
	ActorSnapDistance: number;
	bSnapVertices: boolean;
	SnapDistance: number;
	CurrentPosGridSize: number;
	CurrentRotGridSize: number;
	CurrentScalingGridSize: number;
	PreserveNonUniformScale: boolean;
	CurrentRotGridMode: ERotationGridMode;
	AspectRatioAxisConstraint: EAspectRatioAxisConstraint;
	bEnableViewportHoverFeedback: boolean;
	bHighlightWithBrackets: boolean;
	bUseLinkedOrthographicViewports: boolean;
	bStrictBoxSelection: boolean;
	bTransparentBoxSelection: boolean;
	bUseSelectionOutline: boolean;
	SelectionHighlightIntensity: number;
	BSPSelectionHighlightIntensity: number;
	bEnableViewportCameraToUpdateFromPIV: boolean;
	bPreviewSelectedCameras: boolean;
	CameraPreviewSize: number;
	BackgroundDropDistance: number;
	PreviewMeshes: SoftObjectPath[];
	BillboardScale: number;
	TransformWidgetSizeAdjustment: number;
	bSaveEngineStats: boolean;
	MeasuringToolUnits: EMeasuringToolUnits;
	SelectedSplinePointSizeAdjustment: number;
	SplineLineThicknessAdjustment: number;
	SplineTangentHandleSizeAdjustment: number;
	SplineTangentScale: number;
	LastInViewportMenuLocation: Vector2D;
	MaterialForDroppedTextures: MaterialInterface;
	MaterialParamsForDroppedTextures: Map<EMaterialKind, string>;
	PerInstanceSettings: LevelEditorViewportInstanceSettingsKeyValuePair[];
	static Load(ResourceName: string): LevelEditorViewportSettings;
	static Find(Outer: UObject, ResourceName: string): LevelEditorViewportSettings;
	static GetDefaultObject(): LevelEditorViewportSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelEditorViewportSettings;
	static C(Other: UObject | any): LevelEditorViewportSettings;
}

declare class LevelExporterFBX extends ExporterFBX { 
	static Load(ResourceName: string): LevelExporterFBX;
	static Find(Outer: UObject, ResourceName: string): LevelExporterFBX;
	static GetDefaultObject(): LevelExporterFBX;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelExporterFBX;
	static C(Other: UObject | any): LevelExporterFBX;
}

declare class LevelExporterLOD extends Exporter { 
	static Load(ResourceName: string): LevelExporterLOD;
	static Find(Outer: UObject, ResourceName: string): LevelExporterLOD;
	static GetDefaultObject(): LevelExporterLOD;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelExporterLOD;
	static C(Other: UObject | any): LevelExporterLOD;
}

declare class LevelExporterOBJ extends Exporter { 
	static Load(ResourceName: string): LevelExporterOBJ;
	static Find(Outer: UObject, ResourceName: string): LevelExporterOBJ;
	static GetDefaultObject(): LevelExporterOBJ;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelExporterOBJ;
	static C(Other: UObject | any): LevelExporterOBJ;
}

declare class LevelExporterSTL extends Exporter { 
	static Load(ResourceName: string): LevelExporterSTL;
	static Find(Outer: UObject, ResourceName: string): LevelExporterSTL;
	static GetDefaultObject(): LevelExporterSTL;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelExporterSTL;
	static C(Other: UObject | any): LevelExporterSTL;
}

declare class LevelExporterT3D extends Exporter { 
	static Load(ResourceName: string): LevelExporterT3D;
	static Find(Outer: UObject, ResourceName: string): LevelExporterT3D;
	static GetDefaultObject(): LevelExporterT3D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelExporterT3D;
	static C(Other: UObject | any): LevelExporterT3D;
}

declare class LevelFactory extends Factory { 
	static Load(ResourceName: string): LevelFactory;
	static Find(Outer: UObject, ResourceName: string): LevelFactory;
	static GetDefaultObject(): LevelFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelFactory;
	static C(Other: UObject | any): LevelFactory;
}

declare class LevelThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): LevelThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): LevelThumbnailRenderer;
	static GetDefaultObject(): LevelThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelThumbnailRenderer;
	static C(Other: UObject | any): LevelThumbnailRenderer;
}

declare class LightmassDebugOptions { 
	bDebugMode: boolean;
	bStatsEnabled: boolean;
	bGatherBSPSurfacesAcrossComponents: boolean;
	CoplanarTolerance: number;
	bUseImmediateImport: boolean;
	bImmediateProcessMappings: boolean;
	bSortMappings: boolean;
	bDumpBinaryFiles: boolean;
	bDebugMaterials: boolean;
	bPadMappings: boolean;
	bDebugPaddings: boolean;
	bOnlyCalcDebugTexelMappings: boolean;
	bUseRandomColors: boolean;
	bColorBordersGreen: boolean;
	bColorByExecutionTime: boolean;
	ExecutionTimeDivisor: number;
	clone() : LightmassDebugOptions;
	static C(Other: UObject | any): LightmassDebugOptions;
}

declare class SwarmDebugOptions { 
	bDistributionEnabled: boolean;
	bForceContentExport: boolean;
	bInitialized: boolean;
	clone() : SwarmDebugOptions;
	static C(Other: UObject | any): SwarmDebugOptions;
}

declare class LightmassOptionsObject extends UObject { 
	DebugSettings: LightmassDebugOptions;
	SwarmSettings: SwarmDebugOptions;
	static Load(ResourceName: string): LightmassOptionsObject;
	static Find(Outer: UObject, ResourceName: string): LightmassOptionsObject;
	static GetDefaultObject(): LightmassOptionsObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightmassOptionsObject;
	static C(Other: UObject | any): LightmassOptionsObject;
}

declare class LightWeightInstanceFactory extends Factory { 
	ParentClass: UnrealEngineClass;
	static Load(ResourceName: string): LightWeightInstanceFactory;
	static Find(Outer: UObject, ResourceName: string): LightWeightInstanceFactory;
	static GetDefaultObject(): LightWeightInstanceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightWeightInstanceFactory;
	static C(Other: UObject | any): LightWeightInstanceFactory;
}

declare class LinearStairBuilder extends EditorBrushBuilder { 
	StepLength: number;
	StepHeight: number;
	StepWidth: number;
	NumSteps: number;
	AddToFirstStep: number;
	GroupName: string;
	static Load(ResourceName: string): LinearStairBuilder;
	static Find(Outer: UObject, ResourceName: string): LinearStairBuilder;
	static GetDefaultObject(): LinearStairBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LinearStairBuilder;
	static C(Other: UObject | any): LinearStairBuilder;
}

declare class ListMaterialsUsedWithMeshEmittersCommandlet extends Commandlet { 
	static Load(ResourceName: string): ListMaterialsUsedWithMeshEmittersCommandlet;
	static Find(Outer: UObject, ResourceName: string): ListMaterialsUsedWithMeshEmittersCommandlet;
	static GetDefaultObject(): ListMaterialsUsedWithMeshEmittersCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ListMaterialsUsedWithMeshEmittersCommandlet;
	static C(Other: UObject | any): ListMaterialsUsedWithMeshEmittersCommandlet;
}

declare class ListStaticMeshesImportedFromSpeedTreesCommandlet extends Commandlet { 
	static Load(ResourceName: string): ListStaticMeshesImportedFromSpeedTreesCommandlet;
	static Find(Outer: UObject, ResourceName: string): ListStaticMeshesImportedFromSpeedTreesCommandlet;
	static GetDefaultObject(): ListStaticMeshesImportedFromSpeedTreesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ListStaticMeshesImportedFromSpeedTreesCommandlet;
	static C(Other: UObject | any): ListStaticMeshesImportedFromSpeedTreesCommandlet;
}

declare class LoadPackageCommandlet extends Commandlet { 
	static Load(ResourceName: string): LoadPackageCommandlet;
	static Find(Outer: UObject, ResourceName: string): LoadPackageCommandlet;
	static GetDefaultObject(): LoadPackageCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LoadPackageCommandlet;
	static C(Other: UObject | any): LoadPackageCommandlet;
}

declare class MakeBinaryConfigCommandlet extends Commandlet { 
	static Load(ResourceName: string): MakeBinaryConfigCommandlet;
	static Find(Outer: UObject, ResourceName: string): MakeBinaryConfigCommandlet;
	static GetDefaultObject(): MakeBinaryConfigCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MakeBinaryConfigCommandlet;
	static C(Other: UObject | any): MakeBinaryConfigCommandlet;
}

declare class EditorParameterGroup { 
	GroupName: string;
	GroupAssociation: EMaterialParameterAssociation;
	Parameters: DEditorParameterValue[];
	GroupSortPriority: number;
	clone() : EditorParameterGroup;
	static C(Other: UObject | any): EditorParameterGroup;
}

declare class MaterialFunctionInstance extends MaterialFunctionInterface { 
	Parent: MaterialFunctionInterface;
	Base: MaterialFunctionInterface;
	ScalarParameterValues: ScalarParameterValue[];
	VectorParameterValues: VectorParameterValue[];
	DoubleVectorParameterValues: DoubleVectorParameterValue[];
	TextureParameterValues: TextureParameterValue[];
	FontParameterValues: FontParameterValue[];
	StaticSwitchParameterValues: StaticSwitchParameter[];
	StaticComponentMaskParameterValues: StaticComponentMaskParameter[];
	RuntimeVirtualTextureParameterValues: RuntimeVirtualTextureParameterValue[];
	PreviewMaterial: MaterialInstanceConstant;
	static Load(ResourceName: string): MaterialFunctionInstance;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionInstance;
	static GetDefaultObject(): MaterialFunctionInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionInstance;
	static C(Other: UObject | any): MaterialFunctionInstance;
}

declare class LightmassParameterValue { 
	bOverride: boolean;
	clone() : LightmassParameterValue;
	static C(Other: UObject | any): LightmassParameterValue;
}

declare class LightmassBooleanParameterValue extends LightmassParameterValue { 
	ParameterValue: boolean;
	clone() : LightmassBooleanParameterValue;
	static C(Other: UObject | any): LightmassBooleanParameterValue;
}

declare class LightmassScalarParameterValue extends LightmassParameterValue { 
	ParameterValue: number;
	clone() : LightmassScalarParameterValue;
	static C(Other: UObject | any): LightmassScalarParameterValue;
}

declare class LightmassParameterizedMaterialSettings { 
	CastShadowAsMasked: LightmassBooleanParameterValue;
	EmissiveBoost: LightmassScalarParameterValue;
	DiffuseBoost: LightmassScalarParameterValue;
	ExportResolutionScale: LightmassScalarParameterValue;
	clone() : LightmassParameterizedMaterialSettings;
	static C(Other: UObject | any): LightmassParameterizedMaterialSettings;
}

declare class MaterialEditorInstanceConstant extends UObject { 
	PhysMaterial: PhysicalMaterial;
	Parent: MaterialInterface;
	ParameterGroups: EditorParameterGroup[];
	RefractionDepthBias: number;
	SubsurfaceProfile: SubsurfaceProfile;
	bOverrideSubsurfaceProfile: boolean;
	bOverrideBaseProperties: boolean;
	bIsFunctionPreviewMaterial: boolean;
	bIsFunctionInstanceDirty: boolean;
	BasePropertyOverrides: MaterialInstanceBasePropertyOverrides;
	SourceInstance: MaterialInstanceConstant;
	SourceFunction: MaterialFunctionInstance;
	VisibleExpressions: MaterialParameterInfo[];
	LightmassSettings: LightmassParameterizedMaterialSettings;
	bUseOldStyleMICEditorGroups: boolean;
	bNaniteOverride: boolean;
	NaniteOverrideMaterial: MaterialInterface;
	StoredLayerPreviews: MaterialInstanceConstant[];
	StoredBlendPreviews: MaterialInstanceConstant[];
	static Load(ResourceName: string): MaterialEditorInstanceConstant;
	static Find(Outer: UObject, ResourceName: string): MaterialEditorInstanceConstant;
	static GetDefaultObject(): MaterialEditorInstanceConstant;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditorInstanceConstant;
	static C(Other: UObject | any): MaterialEditorInstanceConstant;
}

declare class MaterialEditorMeshComponent extends StaticMeshComponent { 
	static Load(ResourceName: string): MaterialEditorMeshComponent;
	static Find(Outer: UObject, ResourceName: string): MaterialEditorMeshComponent;
	static GetDefaultObject(): MaterialEditorMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditorMeshComponent;
	static C(Other: UObject | any): MaterialEditorMeshComponent;
}

declare class MaterialEditorOptions extends UObject { 
	bShowGrid: boolean;
	bHideUnusedConnectorsSetting: boolean;
	bRealtimeMaterialViewport: boolean;
	bRealtimeExpressionViewport: boolean;
	bLivePreviewUpdate: boolean;
	bHideUnrelatedNodes: boolean;
	bAlwaysRefreshAllPreviews: boolean;
	bUseUnsortedMenus: boolean;
	FavoriteExpressions: string[];
	static Load(ResourceName: string): MaterialEditorOptions;
	static Find(Outer: UObject, ResourceName: string): MaterialEditorOptions;
	static GetDefaultObject(): MaterialEditorOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditorOptions;
	static C(Other: UObject | any): MaterialEditorOptions;
}

declare class MaterialEditorPreviewParameters extends UObject { 
	ParameterGroups: EditorParameterGroup[];
	PreviewMaterial: Material;
	OriginalFunction: MaterialFunction;
	OriginalMaterial: Material;
	StoredLayerPreviews: MaterialInstanceConstant[];
	StoredBlendPreviews: MaterialInstanceConstant[];
	static Load(ResourceName: string): MaterialEditorPreviewParameters;
	static Find(Outer: UObject, ResourceName: string): MaterialEditorPreviewParameters;
	static GetDefaultObject(): MaterialEditorPreviewParameters;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditorPreviewParameters;
	static C(Other: UObject | any): MaterialEditorPreviewParameters;
}

declare class MaterialFactoryNew extends Factory { 
	InitialTexture: Texture;
	static Load(ResourceName: string): MaterialFactoryNew;
	static Find(Outer: UObject, ResourceName: string): MaterialFactoryNew;
	static GetDefaultObject(): MaterialFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFactoryNew;
	static C(Other: UObject | any): MaterialFactoryNew;
}

declare class MaterialFunctionFactoryNew extends Factory { 
	static Load(ResourceName: string): MaterialFunctionFactoryNew;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionFactoryNew;
	static GetDefaultObject(): MaterialFunctionFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionFactoryNew;
	static C(Other: UObject | any): MaterialFunctionFactoryNew;
}

declare class MaterialFunctionInstanceFactory extends Factory { 
	InitialParent: MaterialFunctionInterface;
	static Load(ResourceName: string): MaterialFunctionInstanceFactory;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionInstanceFactory;
	static GetDefaultObject(): MaterialFunctionInstanceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionInstanceFactory;
	static C(Other: UObject | any): MaterialFunctionInstanceFactory;
}

declare class MaterialFunctionMaterialLayerInstanceFactory extends MaterialFunctionInstanceFactory { 
	static Load(ResourceName: string): MaterialFunctionMaterialLayerInstanceFactory;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerInstanceFactory;
	static GetDefaultObject(): MaterialFunctionMaterialLayerInstanceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerInstanceFactory;
	static C(Other: UObject | any): MaterialFunctionMaterialLayerInstanceFactory;
}

declare class MaterialFunctionMaterialLayerBlendInstanceFactory extends MaterialFunctionInstanceFactory { 
	static Load(ResourceName: string): MaterialFunctionMaterialLayerBlendInstanceFactory;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerBlendInstanceFactory;
	static GetDefaultObject(): MaterialFunctionMaterialLayerBlendInstanceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerBlendInstanceFactory;
	static C(Other: UObject | any): MaterialFunctionMaterialLayerBlendInstanceFactory;
}

declare class MaterialFunctionMaterialLayerBlendFactory extends Factory { 
	static Load(ResourceName: string): MaterialFunctionMaterialLayerBlendFactory;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerBlendFactory;
	static GetDefaultObject(): MaterialFunctionMaterialLayerBlendFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerBlendFactory;
	static C(Other: UObject | any): MaterialFunctionMaterialLayerBlendFactory;
}

declare class MaterialFunctionMaterialLayerFactory extends Factory { 
	static Load(ResourceName: string): MaterialFunctionMaterialLayerFactory;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerFactory;
	static GetDefaultObject(): MaterialFunctionMaterialLayerFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerFactory;
	static C(Other: UObject | any): MaterialFunctionMaterialLayerFactory;
}

declare class MaterialFunctionThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): MaterialFunctionThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): MaterialFunctionThumbnailRenderer;
	static GetDefaultObject(): MaterialFunctionThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionThumbnailRenderer;
	static C(Other: UObject | any): MaterialFunctionThumbnailRenderer;
}

declare class MaterialGraphNode_Base extends EdGraphNode { 
	static Load(ResourceName: string): MaterialGraphNode_Base;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphNode_Base;
	static GetDefaultObject(): MaterialGraphNode_Base;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphNode_Base;
	static C(Other: UObject | any): MaterialGraphNode_Base;
}

declare class MaterialGraphNode_Root extends MaterialGraphNode_Base { 
	Material: Material;
	static Load(ResourceName: string): MaterialGraphNode_Root;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphNode_Root;
	static GetDefaultObject(): MaterialGraphNode_Root;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphNode_Root;
	static C(Other: UObject | any): MaterialGraphNode_Root;
}

declare class MaterialGraph extends EdGraph { 
	Material: Material;
	MaterialFunction: MaterialFunction;
	RootNode: MaterialGraphNode_Root;
	SubgraphExpression: MaterialExpression;
	OriginalMaterialFullName: string;
	static Load(ResourceName: string): MaterialGraph;
	static Find(Outer: UObject, ResourceName: string): MaterialGraph;
	static GetDefaultObject(): MaterialGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraph;
	static C(Other: UObject | any): MaterialGraph;
}

declare class MaterialGraphNode extends MaterialGraphNode_Base { 
	MaterialExpression: MaterialExpression;
	static Load(ResourceName: string): MaterialGraphNode;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphNode;
	static GetDefaultObject(): MaterialGraphNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphNode;
	static C(Other: UObject | any): MaterialGraphNode;
}

declare class MaterialGraphNode_Comment extends EdGraphNode_Comment { 
	MaterialExpressionComment: MaterialExpressionComment;
	static Load(ResourceName: string): MaterialGraphNode_Comment;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphNode_Comment;
	static GetDefaultObject(): MaterialGraphNode_Comment;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphNode_Comment;
	static C(Other: UObject | any): MaterialGraphNode_Comment;
}

declare class MaterialGraphNode_Composite extends MaterialGraphNode { 
	BoundGraph: MaterialGraph;
	static Load(ResourceName: string): MaterialGraphNode_Composite;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphNode_Composite;
	static GetDefaultObject(): MaterialGraphNode_Composite;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphNode_Composite;
	static C(Other: UObject | any): MaterialGraphNode_Composite;
}

declare class MaterialGraphNode_Knot extends MaterialGraphNode { 
	static Load(ResourceName: string): MaterialGraphNode_Knot;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphNode_Knot;
	static GetDefaultObject(): MaterialGraphNode_Knot;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphNode_Knot;
	static C(Other: UObject | any): MaterialGraphNode_Knot;
}

declare class MaterialGraphNode_PinBase extends MaterialGraphNode { 
	static Load(ResourceName: string): MaterialGraphNode_PinBase;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphNode_PinBase;
	static GetDefaultObject(): MaterialGraphNode_PinBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphNode_PinBase;
	static C(Other: UObject | any): MaterialGraphNode_PinBase;
}

declare class MaterialGraphSchema extends EdGraphSchema { 
	static Load(ResourceName: string): MaterialGraphSchema;
	static Find(Outer: UObject, ResourceName: string): MaterialGraphSchema;
	static GetDefaultObject(): MaterialGraphSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialGraphSchema;
	static C(Other: UObject | any): MaterialGraphSchema;
}

declare class MaterialImportHelpers extends UObject { 
	static Load(ResourceName: string): MaterialImportHelpers;
	static Find(Outer: UObject, ResourceName: string): MaterialImportHelpers;
	static GetDefaultObject(): MaterialImportHelpers;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialImportHelpers;
	static FindExistingMaterialFromSearchLocation(MaterialFullName: string,BasePackagePath: string,SearchLocation: EMaterialSearchLocation,OutError?: string): {OutError: string, $: MaterialInterface};
	static FindExistingMaterial(BasePath: string,MaterialFullName: string,bRecursivePaths: boolean,OutError?: string): {OutError: string, $: MaterialInterface};
	static C(Other: UObject | any): MaterialImportHelpers;
}

declare class MaterialInstanceConstantFactoryNew extends Factory { 
	InitialParent: MaterialInterface;
	static Load(ResourceName: string): MaterialInstanceConstantFactoryNew;
	static Find(Outer: UObject, ResourceName: string): MaterialInstanceConstantFactoryNew;
	static GetDefaultObject(): MaterialInstanceConstantFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialInstanceConstantFactoryNew;
	static C(Other: UObject | any): MaterialInstanceConstantFactoryNew;
}

declare class MaterialInstanceThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): MaterialInstanceThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): MaterialInstanceThumbnailRenderer;
	static GetDefaultObject(): MaterialInstanceThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialInstanceThumbnailRenderer;
	static C(Other: UObject | any): MaterialInstanceThumbnailRenderer;
}

declare class MaterialParameterCollectionFactoryNew extends Factory { 
	static Load(ResourceName: string): MaterialParameterCollectionFactoryNew;
	static Find(Outer: UObject, ResourceName: string): MaterialParameterCollectionFactoryNew;
	static GetDefaultObject(): MaterialParameterCollectionFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialParameterCollectionFactoryNew;
	static C(Other: UObject | any): MaterialParameterCollectionFactoryNew;
}

declare class MaterialStatsOptions extends UObject { 
	bPlatformUsed: number;
	bMaterialQualityUsed: number;
	static Load(ResourceName: string): MaterialStatsOptions;
	static Find(Outer: UObject, ResourceName: string): MaterialStatsOptions;
	static GetDefaultObject(): MaterialStatsOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialStatsOptions;
	static C(Other: UObject | any): MaterialStatsOptions;
}

declare class MergeShaderPipelineCachesCommandlet extends Commandlet { 
	static Load(ResourceName: string): MergeShaderPipelineCachesCommandlet;
	static Find(Outer: UObject, ResourceName: string): MergeShaderPipelineCachesCommandlet;
	static GetDefaultObject(): MergeShaderPipelineCachesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MergeShaderPipelineCachesCommandlet;
	static C(Other: UObject | any): MergeShaderPipelineCachesCommandlet;
}

declare class MirrorTableFindReplaceExpressions extends UObject { 
	FindReplaceExpressions: MirrorFindReplaceExpression[];
	static Load(ResourceName: string): MirrorTableFindReplaceExpressions;
	static Find(Outer: UObject, ResourceName: string): MirrorTableFindReplaceExpressions;
	static GetDefaultObject(): MirrorTableFindReplaceExpressions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MirrorTableFindReplaceExpressions;
	static C(Other: UObject | any): MirrorTableFindReplaceExpressions;
}

declare class MirrorDataTableFactory extends Factory { 
	struct: ScriptStruct;
	Skeleton: Skeleton;
	MirrorFindReplaceExpressions: MirrorTableFindReplaceExpressions;
	static Load(ResourceName: string): MirrorDataTableFactory;
	static Find(Outer: UObject, ResourceName: string): MirrorDataTableFactory;
	static GetDefaultObject(): MirrorDataTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MirrorDataTableFactory;
	static C(Other: UObject | any): MirrorDataTableFactory;
}

declare class ModelExporterT3D extends Exporter { 
	static Load(ResourceName: string): ModelExporterT3D;
	static Find(Outer: UObject, ResourceName: string): ModelExporterT3D;
	static GetDefaultObject(): ModelExporterT3D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelExporterT3D;
	static C(Other: UObject | any): ModelExporterT3D;
}

declare class ModelFactory extends Factory { 
	static Load(ResourceName: string): ModelFactory;
	static Find(Outer: UObject, ResourceName: string): ModelFactory;
	static GetDefaultObject(): ModelFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelFactory;
	static C(Other: UObject | any): ModelFactory;
}

declare class ObjectElementDetailsInterface extends UObject { 
	static Load(ResourceName: string): ObjectElementDetailsInterface;
	static Find(Outer: UObject, ResourceName: string): ObjectElementDetailsInterface;
	static GetDefaultObject(): ObjectElementDetailsInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ObjectElementDetailsInterface;
	static C(Other: UObject | any): ObjectElementDetailsInterface;
}

declare class ObjectElementSelectionInterface extends UObject { 
	static Load(ResourceName: string): ObjectElementSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): ObjectElementSelectionInterface;
	static GetDefaultObject(): ObjectElementSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ObjectElementSelectionInterface;
	static C(Other: UObject | any): ObjectElementSelectionInterface;
}

declare class ObjectElementEditorSelectionInterface extends ObjectElementSelectionInterface { 
	static Load(ResourceName: string): ObjectElementEditorSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): ObjectElementEditorSelectionInterface;
	static GetDefaultObject(): ObjectElementEditorSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ObjectElementEditorSelectionInterface;
	static C(Other: UObject | any): ObjectElementEditorSelectionInterface;
}

declare class ObjectExporterT3D extends Exporter { 
	static Load(ResourceName: string): ObjectExporterT3D;
	static Find(Outer: UObject, ResourceName: string): ObjectExporterT3D;
	static GetDefaultObject(): ObjectExporterT3D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ObjectExporterT3D;
	static C(Other: UObject | any): ObjectExporterT3D;
}

declare class ObjectLibraryFactory extends Factory { 
	static Load(ResourceName: string): ObjectLibraryFactory;
	static Find(Outer: UObject, ResourceName: string): ObjectLibraryFactory;
	static GetDefaultObject(): ObjectLibraryFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ObjectLibraryFactory;
	static C(Other: UObject | any): ObjectLibraryFactory;
}

declare class PackageFactory extends Factory { 
	static Load(ResourceName: string): PackageFactory;
	static Find(Outer: UObject, ResourceName: string): PackageFactory;
	static GetDefaultObject(): PackageFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PackageFactory;
	static C(Other: UObject | any): PackageFactory;
}

declare class PackageTools extends UObject { 
	static Load(ResourceName: string): PackageTools;
	static Find(Outer: UObject, ResourceName: string): PackageTools;
	static GetDefaultObject(): PackageTools;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PackageTools;
	static SanitizePackageName(InPackageName: string): string;
	static PackageNameToFilename(PackageName: string,Extension: string): string;
	static FilenameToPackageName(Filename: string): string;
	static C(Other: UObject | any): PackageTools;
}

declare class PackFactory extends Factory { 
	static Load(ResourceName: string): PackFactory;
	static Find(Outer: UObject, ResourceName: string): PackFactory;
	static GetDefaultObject(): PackFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PackFactory;
	static C(Other: UObject | any): PackFactory;
}

declare class PanelExtensionSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): PanelExtensionSubsystem;
	static Find(Outer: UObject, ResourceName: string): PanelExtensionSubsystem;
	static GetDefaultObject(): PanelExtensionSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PanelExtensionSubsystem;
	static C(Other: UObject | any): PanelExtensionSubsystem;
}

declare class ParticleSystemAuditCommandlet extends Commandlet { 
	HighSpawnRateOrBurstThreshold: number;
	FarLODDistanceTheshold: number;
	static Load(ResourceName: string): ParticleSystemAuditCommandlet;
	static Find(Outer: UObject, ResourceName: string): ParticleSystemAuditCommandlet;
	static GetDefaultObject(): ParticleSystemAuditCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleSystemAuditCommandlet;
	static C(Other: UObject | any): ParticleSystemAuditCommandlet;
}

declare class ParticleSystemFactoryNew extends Factory { 
	static Load(ResourceName: string): ParticleSystemFactoryNew;
	static Find(Outer: UObject, ResourceName: string): ParticleSystemFactoryNew;
	static GetDefaultObject(): ParticleSystemFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleSystemFactoryNew;
	static C(Other: UObject | any): ParticleSystemFactoryNew;
}

declare class ParticleSystemThumbnailRenderer extends TextureThumbnailRenderer { 
	NoImage: Texture2D;
	OutOfDate: Texture2D;
	static Load(ResourceName: string): ParticleSystemThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): ParticleSystemThumbnailRenderer;
	static GetDefaultObject(): ParticleSystemThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleSystemThumbnailRenderer;
	static C(Other: UObject | any): ParticleSystemThumbnailRenderer;
}

declare type EAnimationViewportCameraFollowMode = 'None' | 'Bounds' | 'Bone' | 'Root' | 'EAnimationViewportCameraFollowMode_MAX';
declare var EAnimationViewportCameraFollowMode : { None:'None',Bounds:'Bounds',Bone:'Bone',Root:'Root',EAnimationViewportCameraFollowMode_MAX:'EAnimationViewportCameraFollowMode_MAX', };
declare class ViewportConfigOptions { 
	ViewModeIndex: EViewModeIndex;
	ViewFOV: number;
	CameraSpeedSetting: number;
	CameraSpeedScalar: number;
	CameraFollowMode: EAnimationViewportCameraFollowMode;
	CameraFollowBoneName: string;
	clone() : ViewportConfigOptions;
	static C(Other: UObject | any): ViewportConfigOptions;
}

declare class AssetEditorOptions { 
	Context: string;
	ViewportConfigs: ViewportConfigOptions;
	clone() : AssetEditorOptions;
	static C(Other: UObject | any): AssetEditorOptions;
}

declare class PersonaOptions extends UObject { 
	bAutoAlignFloorToMesh: boolean;
	bAlwaysOpenAnimationAssetsInNewTab: boolean;
	bShowGrid: boolean;
	bHighlightOrigin: boolean;
	bMuteAudio: boolean;
	bUseAudioAttenuation: boolean;
	ShowMeshStats: number;
	DefaultLocalAxesSelection: number;
	DefaultBoneDrawSelection: number;
	DefaultBoneColor: LinearColor;
	SelectedBoneColor: LinearColor;
	AffectedBoneColor: LinearColor;
	DisabledBoneColor: LinearColor;
	ParentOfSelectedBoneColor: LinearColor;
	VirtualBoneColor: LinearColor;
	SectionTimingNodeColor: LinearColor;
	NotifyTimingNodeColor: LinearColor;
	BranchingPointTimingNodeColor: LinearColor;
	bPauseAnimationOnCameraMove: boolean;
	bUseInlineSocketEditor: boolean;
	bFlattenSkeletonHierarchyWhenFiltering: boolean;
	bHideParentsWhenFiltering: boolean;
	bExpandTreeOnSelection: boolean;
	bAllowPreviewMeshCollectionsToSelectFromDifferentSkeletons: boolean;
	bAllowPreviewMeshCollectionsToUseCustomAnimBP: boolean;
	bAllowMeshSectionSelection: boolean;
	NumFolderFiltersInAssetBrowser: number;
	AssetEditorOptions: AssetEditorOptions[];
	CurveEditorSnapInterval: number;
	TimelineScrubSnapValue: number;
	TimelineDisplayFormat: EFrameNumberDisplayFormats;
	bTimelineDisplayPercentage: boolean;
	bTimelineDisplayFormatSecondary: boolean;
	bTimelineDisplayCurveKeys: boolean;
	TimelineEnabledSnaps: string[];
	static Load(ResourceName: string): PersonaOptions;
	static Find(Outer: UObject, ResourceName: string): PersonaOptions;
	static GetDefaultObject(): PersonaOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersonaOptions;
	static C(Other: UObject | any): PersonaOptions;
}

declare class PhysicalMaterialFactoryNew extends Factory { 
	PhysicalMaterialClass: UnrealEngineClass;
	static Load(ResourceName: string): PhysicalMaterialFactoryNew;
	static Find(Outer: UObject, ResourceName: string): PhysicalMaterialFactoryNew;
	static GetDefaultObject(): PhysicalMaterialFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicalMaterialFactoryNew;
	static C(Other: UObject | any): PhysicalMaterialFactoryNew;
}

declare class PhysicalMaterialMaskFactory extends Factory { 
	PhysicalMaterialMaskClass: UnrealEngineClass;
	static Load(ResourceName: string): PhysicalMaterialMaskFactory;
	static Find(Outer: UObject, ResourceName: string): PhysicalMaterialMaskFactory;
	static GetDefaultObject(): PhysicalMaterialMaskFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicalMaterialMaskFactory;
	static C(Other: UObject | any): PhysicalMaterialMaskFactory;
}

declare class PhysicalMaterialMaskThumbnailRenderer extends TextureThumbnailRenderer { 
	static Load(ResourceName: string): PhysicalMaterialMaskThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): PhysicalMaterialMaskThumbnailRenderer;
	static GetDefaultObject(): PhysicalMaterialMaskThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicalMaterialMaskThumbnailRenderer;
	static C(Other: UObject | any): PhysicalMaterialMaskThumbnailRenderer;
}

declare type EPhysicsAssetEditorMeshViewMode = 'Solid' | 'Wireframe' | 'None' | 'EPhysicsAssetEditorMeshViewMode_MAX';
declare var EPhysicsAssetEditorMeshViewMode : { Solid:'Solid',Wireframe:'Wireframe',None:'None',EPhysicsAssetEditorMeshViewMode_MAX:'EPhysicsAssetEditorMeshViewMode_MAX', };
declare type EPhysicsAssetEditorCollisionViewMode = 'Solid' | 'Wireframe' | 'SolidWireframe' | 'None' | 'EPhysicsAssetEditorCollisionViewMode_MAX';
declare var EPhysicsAssetEditorCollisionViewMode : { Solid:'Solid',Wireframe:'Wireframe',SolidWireframe:'SolidWireframe',None:'None',EPhysicsAssetEditorCollisionViewMode_MAX:'EPhysicsAssetEditorCollisionViewMode_MAX', };
declare type EPhysicsAssetEditorConstraintViewMode = 'None' | 'AllPositions' | 'AllLimits' | 'EPhysicsAssetEditorConstraintViewMode_MAX';
declare var EPhysicsAssetEditorConstraintViewMode : { None:'None',AllPositions:'AllPositions',AllLimits:'AllLimits',EPhysicsAssetEditorConstraintViewMode_MAX:'EPhysicsAssetEditorConstraintViewMode_MAX', };
declare class PhysicsAssetEditorOptions extends UObject { 
	PhysicsBlend: number;
	bUpdateJointsFromAnimation: boolean;
	PhysicsUpdateMode: EPhysicsTransformUpdateMode;
	PokePauseTime: number;
	PokeBlendTime: number;
	GravScale: number;
	GravityOverrideZ: number;
	bUseGravityOverride: boolean;
	MaxFPS: number;
	HandleLinearDamping: number;
	HandleLinearStiffness: number;
	HandleAngularDamping: number;
	HandleAngularStiffness: number;
	InterpolationSpeed: number;
	PokeStrength: number;
	InteractionDistance: number;
	bShowConstraintsAsPoints: boolean;
	bRenderOnlySelectedConstraints: boolean;
	bSimulationFloorCollisionEnabled: boolean;
	ConstraintDrawSize: number;
	MeshViewMode: EPhysicsAssetEditorMeshViewMode;
	CollisionViewMode: EPhysicsAssetEditorCollisionViewMode;
	ConstraintViewMode: EPhysicsAssetEditorConstraintViewMode;
	SimulationMeshViewMode: EPhysicsAssetEditorMeshViewMode;
	SimulationCollisionViewMode: EPhysicsAssetEditorCollisionViewMode;
	SimulationConstraintViewMode: EPhysicsAssetEditorConstraintViewMode;
	CollisionOpacity: number;
	bSolidRenderingForSelectedOnly: boolean;
	bHideSimulatedBodies: boolean;
	bHideKinematicBodies: boolean;
	bResetClothWhenSimulating: boolean;
	static Load(ResourceName: string): PhysicsAssetEditorOptions;
	static Find(Outer: UObject, ResourceName: string): PhysicsAssetEditorOptions;
	static GetDefaultObject(): PhysicsAssetEditorOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetEditorOptions;
	static C(Other: UObject | any): PhysicsAssetEditorOptions;
}

declare class PhysicsAssetFactory extends Factory { 
	TargetSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): PhysicsAssetFactory;
	static Find(Outer: UObject, ResourceName: string): PhysicsAssetFactory;
	static GetDefaultObject(): PhysicsAssetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetFactory;
	static C(Other: UObject | any): PhysicsAssetFactory;
}

declare type EPhysAssetFitGeomType = 'EFG_Box' | 'EFG_Sphyl' | 'EFG_Sphere' | 'EFG_TaperedCapsule' | 'EFG_SingleConvexHull' | 'EFG_MultiConvexHull' | 'EFG_MAX';
declare var EPhysAssetFitGeomType : { EFG_Box:'EFG_Box',EFG_Sphyl:'EFG_Sphyl',EFG_Sphere:'EFG_Sphere',EFG_TaperedCapsule:'EFG_TaperedCapsule',EFG_SingleConvexHull:'EFG_SingleConvexHull',EFG_MultiConvexHull:'EFG_MultiConvexHull',EFG_MAX:'EFG_MAX', };
declare type EPhysAssetFitVertWeight = 'EVW_AnyWeight' | 'EVW_DominantWeight' | 'EVW_MAX';
declare var EPhysAssetFitVertWeight : { EVW_AnyWeight:'EVW_AnyWeight',EVW_DominantWeight:'EVW_DominantWeight',EVW_MAX:'EVW_MAX', };
declare class PhysAssetCreateParams { 
	MinBoneSize: number;
	MinWeldSize: number;
	GeomType: EPhysAssetFitGeomType;
	VertWeight: EPhysAssetFitVertWeight;
	bAutoOrientToBone: boolean;
	bCreateConstraints: boolean;
	bWalkPastSmall: boolean;
	bBodyForAll: boolean;
	bDisableCollisionsByDefault: boolean;
	AngularConstraintMode: EAngularConstraintMotion;
	HullCount: number;
	MaxHullVerts: number;
	clone() : PhysAssetCreateParams;
	static C(Other: UObject | any): PhysAssetCreateParams;
}

declare class PhysicsAssetGenerationSettings extends UObject { 
	CreateParams: PhysAssetCreateParams;
	static Load(ResourceName: string): PhysicsAssetGenerationSettings;
	static Find(Outer: UObject, ResourceName: string): PhysicsAssetGenerationSettings;
	static GetDefaultObject(): PhysicsAssetGenerationSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetGenerationSettings;
	static C(Other: UObject | any): PhysicsAssetGenerationSettings;
}

declare class PhysicsAssetThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): PhysicsAssetThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): PhysicsAssetThumbnailRenderer;
	static GetDefaultObject(): PhysicsAssetThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetThumbnailRenderer;
	static C(Other: UObject | any): PhysicsAssetThumbnailRenderer;
}

declare class PkgInfoCommandlet extends Commandlet { 
	static Load(ResourceName: string): PkgInfoCommandlet;
	static Find(Outer: UObject, ResourceName: string): PkgInfoCommandlet;
	static GetDefaultObject(): PkgInfoCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PkgInfoCommandlet;
	static C(Other: UObject | any): PkgInfoCommandlet;
}

declare class PolysExporterOBJ extends Exporter { 
	static Load(ResourceName: string): PolysExporterOBJ;
	static Find(Outer: UObject, ResourceName: string): PolysExporterOBJ;
	static GetDefaultObject(): PolysExporterOBJ;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolysExporterOBJ;
	static C(Other: UObject | any): PolysExporterOBJ;
}

declare class PolysExporterT3D extends Exporter { 
	static Load(ResourceName: string): PolysExporterT3D;
	static Find(Outer: UObject, ResourceName: string): PolysExporterT3D;
	static GetDefaultObject(): PolysExporterT3D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolysExporterT3D;
	static C(Other: UObject | any): PolysExporterT3D;
}

declare class PolysFactory extends Factory { 
	static Load(ResourceName: string): PolysFactory;
	static Find(Outer: UObject, ResourceName: string): PolysFactory;
	static GetDefaultObject(): PolysFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolysFactory;
	static C(Other: UObject | any): PolysFactory;
}

declare class PopulateDialogueWaveFromCharacterSheetCommandlet extends Commandlet { 
	static Load(ResourceName: string): PopulateDialogueWaveFromCharacterSheetCommandlet;
	static Find(Outer: UObject, ResourceName: string): PopulateDialogueWaveFromCharacterSheetCommandlet;
	static GetDefaultObject(): PopulateDialogueWaveFromCharacterSheetCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PopulateDialogueWaveFromCharacterSheetCommandlet;
	static C(Other: UObject | any): PopulateDialogueWaveFromCharacterSheetCommandlet;
}

declare class PoseAssetFactory extends Factory { 
	SourceAnimation: AnimSequence;
	PoseNames: string[];
	TargetSkeleton: Skeleton;
	PreviewSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): PoseAssetFactory;
	static Find(Outer: UObject, ResourceName: string): PoseAssetFactory;
	static GetDefaultObject(): PoseAssetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PoseAssetFactory;
	static C(Other: UObject | any): PoseAssetFactory;
}

declare class PreviewMaterial extends Material { 
	static Load(ResourceName: string): PreviewMaterial;
	static Find(Outer: UObject, ResourceName: string): PreviewMaterial;
	static GetDefaultObject(): PreviewMaterial;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewMaterial;
	static C(Other: UObject | any): PreviewMaterial;
}

declare class PreviewMeshCollectionFactory extends Factory { 
	CurrentSkeleton: Skeleton;
	static Load(ResourceName: string): PreviewMeshCollectionFactory;
	static Find(Outer: UObject, ResourceName: string): PreviewMeshCollectionFactory;
	static GetDefaultObject(): PreviewMeshCollectionFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewMeshCollectionFactory;
	static C(Other: UObject | any): PreviewMeshCollectionFactory;
}

declare class PropertyEditorTestInstancedObject extends UObject { 
	Number: number;
	static Load(ResourceName: string): PropertyEditorTestInstancedObject;
	static Find(Outer: UObject, ResourceName: string): PropertyEditorTestInstancedObject;
	static GetDefaultObject(): PropertyEditorTestInstancedObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyEditorTestInstancedObject;
	static C(Other: UObject | any): PropertyEditorTestInstancedObject;
}

declare class FirstDerivedPropertyEditorTestObject extends PropertyEditorTestInstancedObject { 
	string: string;
	static Load(ResourceName: string): FirstDerivedPropertyEditorTestObject;
	static Find(Outer: UObject, ResourceName: string): FirstDerivedPropertyEditorTestObject;
	static GetDefaultObject(): FirstDerivedPropertyEditorTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FirstDerivedPropertyEditorTestObject;
	static C(Other: UObject | any): FirstDerivedPropertyEditorTestObject;
}

declare class SecondDerivedPropertyEditorTestObject extends PropertyEditorTestInstancedObject { 
	bool: boolean;
	static Load(ResourceName: string): SecondDerivedPropertyEditorTestObject;
	static Find(Outer: UObject, ResourceName: string): SecondDerivedPropertyEditorTestObject;
	static GetDefaultObject(): SecondDerivedPropertyEditorTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SecondDerivedPropertyEditorTestObject;
	static C(Other: UObject | any): SecondDerivedPropertyEditorTestObject;
}

declare type EPropertyEditorTestEnum = 'PropertyEditorTest_Enum1' | 'PropertyEditorTest_Enum2' | 'PropertyEditorTest_Enum3' | 'PropertyEditorTest_Enum4' | 'PropertyEditorTest_Enum5' | 'PropertyEditorTest_Enum6' | 'PropertyEditorTest_MAX';
declare var EPropertyEditorTestEnum : { PropertyEditorTest_Enum1:'PropertyEditorTest_Enum1',PropertyEditorTest_Enum2:'PropertyEditorTest_Enum2',PropertyEditorTest_Enum3:'PropertyEditorTest_Enum3',PropertyEditorTest_Enum4:'PropertyEditorTest_Enum4',PropertyEditorTest_Enum5:'PropertyEditorTest_Enum5',PropertyEditorTest_Enum6:'PropertyEditorTest_Enum6',PropertyEditorTest_MAX:'PropertyEditorTest_MAX', };
declare type EPropertyEditorTestEditColor = 'Red' | 'Orange' | 'Yellow' | 'Green' | 'Blue' | 'Indigo' | 'Violet' | 'Pink' | 'Magenta' | 'Cyan' | 'EPropertyEditorTestEditColor_MAX';
declare var EPropertyEditorTestEditColor : { Red:'Red',Orange:'Orange',Yellow:'Yellow',Green:'Green',Blue:'Blue',Indigo:'Indigo',Violet:'Violet',Pink:'Pink',Magenta:'Magenta',Cyan:'Cyan',EPropertyEditorTestEditColor_MAX:'EPropertyEditorTestEditColor_MAX', };
declare type EPropertyEditorTestUnderscores = '_One' | '_Two' | '_Three' | 'NotUnderscore' | 'EPropertyEditorTestUnderscores_MAX';
declare var EPropertyEditorTestUnderscores : { _One:'_One',_Two:'_Two',_Three:'_Three',NotUnderscore:'NotUnderscore',EPropertyEditorTestUnderscores_MAX:'EPropertyEditorTestUnderscores_MAX', };
declare class PropertyEditorTestSubStruct { 
	FirstProperty: number;
	SecondProperty: number;
	CustomizedStructInsideUncustomizedStruct: LinearColor;
	CustomizedStructInsideUncustomizedStruct2: SoftObjectPath;
	clone() : PropertyEditorTestSubStruct;
	static C(Other: UObject | any): PropertyEditorTestSubStruct;
}

declare class PropertyEditorTestBasicStruct { 
	IntPropertyInsideAStruct: number;
	FloatPropertyInsideAStruct: number;
	ObjectPropertyInsideAStruct: UObject;
	InnerStruct: PropertyEditorTestSubStruct;
	clone() : PropertyEditorTestBasicStruct;
	static C(Other: UObject | any): PropertyEditorTestBasicStruct;
}

declare class PropertyEditorTestInstancedStruct { 
	UObject: PropertyEditorTestInstancedObject;
	clone() : PropertyEditorTestInstancedStruct;
	static C(Other: UObject | any): PropertyEditorTestInstancedStruct;
}

declare class BaseComponentReference { 
	ComponentProperty: string;
	PathToComponent: string;
	clone() : BaseComponentReference;
	static C(Other: UObject | any): BaseComponentReference;
}

declare class ComponentReference extends BaseComponentReference { 
	OtherActor: Actor;
	clone() : ComponentReference;
	static C(Other: UObject | any): ComponentReference;
}

declare class PropertyEditTestTextStruct { 
	NormalProperty: string;
	clone() : PropertyEditTestTextStruct;
	static C(Other: UObject | any): PropertyEditTestTextStruct;
}

declare class BlendableInterface extends Interface { 
	static Load(ResourceName: string): BlendableInterface;
	static Find(Outer: UObject, ResourceName: string): BlendableInterface;
	static GetDefaultObject(): BlendableInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendableInterface;
	static C(Other: UObject | any): BlendableInterface;
}

declare class AnimClassInterface extends Interface { 
	static Load(ResourceName: string): AnimClassInterface;
	static Find(Outer: UObject, ResourceName: string): AnimClassInterface;
	static GetDefaultObject(): AnimClassInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimClassInterface;
	static C(Other: UObject | any): AnimClassInterface;
}

declare type ETestEnumFlags = 'None' | 'One' | 'Two' | 'Four' | 'ETestEnumFlags_MAX';
declare var ETestEnumFlags : { None:'None',One:'One',Two:'Two',Four:'Four',ETestEnumFlags_MAX:'ETestEnumFlags_MAX', };
declare class PropertyEditorTestEditCondition { 
	InlineEditCondition: boolean;
	HasInlineEditCondition: number;
	Flags: ETestEnumFlags;
	EnabledAndVisibleWhenOne: number;
	clone() : PropertyEditorTestEditCondition;
	static C(Other: UObject | any): PropertyEditorTestEditCondition;
}

declare class PropertyEditorTestObject extends UObject { 
	Int8Property: number;
	Int16Property: number;
	Int32Property: number;
	Int64Property: number;
	ByteProperty: number;
	UnsignedInt16Property: number;
	UnsignedInt32Property: number;
	UnsignedInt64Property: number;
	FloatProperty: number;
	DoubleProperty: number;
	NameProperty: string;
	BoolProperty: boolean;
	StringProperty: string;
	TextProperty: string;
	IntPointProperty: IntPoint;
	Vector3Property: Vector;
	Vector2Property: Vector2D;
	Vector4Property: Vector4;
	RotatorProperty: Rotator;
	ObjectProperty: UObject;
	LinearColorProperty: LinearColor;
	ColorProperty: Color;
	EnumByteProperty: EPropertyEditorTestEnum;
	EnumProperty: EPropertyEditorTestEditColor;
	EnumUnderscores: EPropertyEditorTestUnderscores;
	MatrixProperty: Matrix;
	TransformProperty: Transform;
	GigabyteProperty: number;
	ClassProperty: UnrealEngineClass;
	ClassPropertyWithAllowed: UnrealEngineClass;
	ClassPropertyWithDisallowed: UnrealEngineClass;
	SubclassOfTexture: UnrealEngineClass;
	SubclassOfWithAllowed: UnrealEngineClass;
	SubclassOfWithDisallowed: UnrealEngineClass;
	AssetPointerWithAllowedAndWhitespace: UObject;
	IntProperty32Array: number[];
	BytePropertyArray: number[];
	FloatPropertyArray: number[];
	NamePropertyArray: string[];
	BoolPropertyArray: boolean[];
	StringPropertyArray: string[];
	TextPropertyArray: string[];
	Vector3PropertyArray: Vector[];
	Vector2PropertyArray: Vector2D[];
	Vector4PropertyArray: Vector4[];
	RotatorPropertyArray: Rotator[];
	ObjectPropertyArray: UObject[];
	ActorPropertyArray: Actor[];
	LinearColorPropertyArray: LinearColor[];
	ColorPropertyArray: Color[];
	EnumPropertyArray: EPropertyEditorTestEnum[];
	StructPropertyArray: PropertyEditorTestBasicStruct[];
	StructPropertyArrayWithTitle: PropertyEditorTestBasicStruct[];
	StructPropertyArrayWithFormattedTitle: PropertyEditorTestBasicStruct[];
	StructPropertyArrayWithTitleError: PropertyEditorTestBasicStruct[];
	StructPropertyArrayWithFormattedTitleError: PropertyEditorTestBasicStruct[];
	InstancedStructArray: PropertyEditorTestInstancedStruct[];
	ObjectPropertyArrayWithTitle: PropertyEditorTestInstancedObject[];
	InstancedUObjectArray: PropertyEditorTestInstancedObject[];
	FixedArrayOfInts: number[];
	StaticArrayOfInts: number;
	StaticArrayOfIntsWithEnumLabels: number;
	FloatRange: FloatRange;
	FloatPropertyWithClampedRange: number;
	IntPropertyWithClampedRange: number;
	IntThatCannotBeChanged: number;
	StringThatCannotBeChanged: string;
	ObjectThatCannotBeChanged: PrimitiveComponent;
	EnumBitflags: number;
	StringPasswordProperty: string;
	TextPasswordProperty: string;
	ThisIsBrokenIfItsVisibleInADetailsView: PropertyEditorTestBasicStruct;
	StructWithMultipleInstances1: PropertyEditorTestBasicStruct;
	bEditConditionStructWithMultipleInstances2: boolean;
	StructWithMultipleInstances2: PropertyEditorTestBasicStruct;
	RichCurve: RichCurve;
	SoftObjectPath: SoftObjectPath;
	PrimaryAssetId: PrimaryAssetId;
	PrimaryAssetIdWithoutThumbnail: PrimaryAssetId;
	AssetReferenceCustomStructWithThumbnail: SoftObjectPath;
	ExactlyPointLightActorReference: SoftObjectPath;
	LightActorReference: SoftObjectPath;
	ExactPointOrSpotLightActorReference: SoftObjectPath;
	LightOrStaticMeshActorReference: SoftObjectPath;
	NotLightActorReference: SoftObjectPath;
	MaterialOrTextureAssetReference: SoftObjectPath;
	ActorWithMetaClass: SoftObjectPath;
	DisabledByCanEditChange: SoftObjectPath;
	ComponentReference: ComponentReference;
	bEditCondition: boolean;
	SimplePropertyWithEditCondition: number;
	bEditConditionAssetReferenceCustomStructWithEditCondition: boolean;
	AssetReferenceCustomStructWithEditCondition: SoftObjectPath;
	ArrayOfStructs: PropertyEditorTestBasicStruct[];
	struct: PropertyEditTestTextStruct;
	EditInlineNewStaticMeshComponent: StaticMeshComponent;
	ArrayOfEditInlineNewSMCs: StaticMeshComponent[];
	TextureProp: Texture;
	StaticMeshProp: StaticMesh;
	AnyMaterialInterface: MaterialInterface;
	MaterialNoThumbnail: MaterialInterface;
	OnlyActorsAllowed: Actor;
	Int32Set: Set<number>;
	FloatSet: Set<number>;
	StringSet: Set<string>;
	ObjectSet: Set<UObject>;
	ActorSet: Set<Actor>;
	EditColorSet: Set<EPropertyEditorTestEditColor>;
	NameSet: Set<string>;
	Int32ToStringMap: Map<number, string>;
	StringToMultilineTextMap: Map<string, string>;
	StringToColorMap: Map<string, LinearColor>;
	Int32ToStructMap: Map<number, PropertyEditorTestBasicStruct>;
	StringToFloatMap: Map<string, number>;
	StringToObjectMap: Map<string, UObject>;
	StringToActorMap: Map<string, Actor>;
	ObjectToInt32Map: Map<UObject, number>;
	ObjectToColorMap: Map<UObject, LinearColor>;
	IntToEnumMap: Map<number, EPropertyEditorTestEnum>;
	NameToNameMap: Map<string, string>;
	NameToObjectMap: Map<string, UObject>;
	NameToCustomMap: Map<string, PropertyEditorTestBasicStruct>;
	NameToColorMap: Map<string, LinearColor>;
	IntToCustomMap: Map<number, PropertyEditorTestBasicStruct>;
	IntToSubStructMap: Map<number, PropertyEditorTestSubStruct>;
	LinearColorSet: Set<LinearColor>;
	VectorSet: Set<Vector>;
	LinearColorToStringMap: Map<LinearColor, string>;
	VectorToFloatMap: Map<Vector, number>;
	LinearColorToVectorMap: Map<LinearColor, Vector>;
	BlendableInterface: BlendableInterface;
	AnimClassInterface: AnimClassInterface;
	LightPropagationVolumeBlendable: BlendableInterface;
	TextureOrBlendableInterface: UObject;
	bSubcategory: boolean;
	bSubcategoryAdvanced: boolean;
	bSubcategoryFooSimple: boolean;
	bSubcategoryFooAdvanced: boolean;
	bSubcategoryBarSimple: boolean;
	bSubcategoryBarAdvanced: boolean;
	bSubcategoryLast: boolean;
	bEnablesNext: boolean;
	bEnabledByPrevious: boolean;
	EnumEditCondition: EPropertyEditorTestEditColor;
	bEnabledWhenBlue: boolean;
	bEnabledWhenPink: boolean;
	EnumAsByteEditCondition: EPropertyEditorTestEnum;
	bEnabledWhenEnumIs2: boolean;
	bEnabledWhenEnumIs4: boolean;
	IntegerEditCondition: number;
	bEnabledWhenIntGreaterOrEqual5: boolean;
	bEnabledWhenIntLessOrEqual10: boolean;
	FloatEditCondition: number;
	bEnabledWhenFloatGreaterThan5: boolean;
	bEnabledWhenFloatLessThan10: boolean;
	bEditConditionForArrays: boolean;
	ArrayWithEditCondition: Texture2D[];
	ArrayOfStructsWithEditCondition: PropertyEditorTestBasicStruct[];
	bEditConditionForFixedArray: boolean;
	FixedArrayWithEditCondition: string;
	bEditConditionForDirectoryPath: boolean;
	DirectoryPath: DirectoryPath;
	EditConditionFlags: number;
	bEnabledWhenFlagsHasTwoOrFour: boolean;
	bDisabledWhenFlagsIsOdd: boolean;
	AlwaysDisabled: number;
	bCategoryInlineEditCondition: boolean;
	EnabledWhenCategoryChecked: number;
	InlineProperty: EComponentMobility;
	PropertyThatHides: EComponentMobility;
	bVisibleWhenStatic: boolean;
	VisibleWhenStationary: number;
	DateTime: DateTime;
	Timespan: Timespan;
	Guid: Guid;
	PerPlatformFloat: PerPlatformFloat;
	PerPlatformInt: PerPlatformInt;
	bInlineEditConditionWithoutMetaToggle: boolean;
	InlineEditConditionWithoutMeta: number;
	bInlineEditConditionWithMetaToggle: boolean;
	InlineEditConditionWithMeta: number;
	bInlineEditConditionNotEditable: boolean;
	HasNonEditableInlineCondition: number;
	bSharedEditCondition: boolean;
	UsesSharedEditCondition1: number;
	UsesSharedEditCondition2: number;
	StructWithInlineCondition: PropertyEditorTestEditCondition;
	ArrayOfStructsWithInlineCondition: PropertyEditorTestEditCondition[];
	NestedArrayOfInts: number;
	static Load(ResourceName: string): PropertyEditorTestObject;
	static Find(Outer: UObject, ResourceName: string): PropertyEditorTestObject;
	static GetDefaultObject(): PropertyEditorTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyEditorTestObject;
	static C(Other: UObject | any): PropertyEditorTestObject;
}

declare class HideCategoriesBase extends UObject { 
	HiddenInBase: number;
	static Load(ResourceName: string): HideCategoriesBase;
	static Find(Outer: UObject, ResourceName: string): HideCategoriesBase;
	static GetDefaultObject(): HideCategoriesBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HideCategoriesBase;
	static C(Other: UObject | any): HideCategoriesBase;
}

declare class ShowCategoriesTest extends HideCategoriesBase { 
	InDerived: number;
	static Load(ResourceName: string): ShowCategoriesTest;
	static Find(Outer: UObject, ResourceName: string): ShowCategoriesTest;
	static GetDefaultObject(): ShowCategoriesTest;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShowCategoriesTest;
	static C(Other: UObject | any): ShowCategoriesTest;
}

declare class BlueprintPropertyTestObject extends UObject { 
	ShouldBeHidden: number;
	ShouldBeVisible: number;
	ObjectA: SoundBase;
	ObjectB: SoundBase;
	static Load(ResourceName: string): BlueprintPropertyTestObject;
	static Find(Outer: UObject, ResourceName: string): BlueprintPropertyTestObject;
	static GetDefaultObject(): BlueprintPropertyTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintPropertyTestObject;
	static C(Other: UObject | any): BlueprintPropertyTestObject;
}

declare class BlueprintPropertyContainerTestObject extends UObject { 
	Array: BlueprintPropertyTestObject[];
	static Load(ResourceName: string): BlueprintPropertyContainerTestObject;
	static Find(Outer: UObject, ResourceName: string): BlueprintPropertyContainerTestObject;
	static GetDefaultObject(): BlueprintPropertyContainerTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintPropertyContainerTestObject;
	static C(Other: UObject | any): BlueprintPropertyContainerTestObject;
}

declare class TestSparseClassDataBase extends UObject { 
	static Load(ResourceName: string): TestSparseClassDataBase;
	static Find(Outer: UObject, ResourceName: string): TestSparseClassDataBase;
	static GetDefaultObject(): TestSparseClassDataBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestSparseClassDataBase;
	static C(Other: UObject | any): TestSparseClassDataBase;
}

declare class TestSparseClassData extends TestSparseClassDataBase { 
	static Load(ResourceName: string): TestSparseClassData;
	static Find(Outer: UObject, ResourceName: string): TestSparseClassData;
	static GetDefaultObject(): TestSparseClassData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestSparseClassData;
	static C(Other: UObject | any): TestSparseClassData;
}

declare class PropertyEditorTestActor extends Actor { 
	InstancedUObjectArray: PropertyEditorTestInstancedObject[];
	GetOptionsValue: string;
	DefaultsOnly: number;
	DefaultsOnlySubcategory: number;
	InstanceOnly: number;
	InstanceOnlySubcategory: number;
	MultiLineMap: Map<number, string>;
	static GetDefaultObject(): PropertyEditorTestActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyEditorTestActor;
	GetOptionsFunc(): string[];
	static C(Other: UObject | any): PropertyEditorTestActor;
}

declare class PropertyEditorRowGeneratorTest extends UObject { 
	static Load(ResourceName: string): PropertyEditorRowGeneratorTest;
	static Find(Outer: UObject, ResourceName: string): PropertyEditorRowGeneratorTest;
	static GetDefaultObject(): PropertyEditorRowGeneratorTest;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyEditorRowGeneratorTest;
	static C(Other: UObject | any): PropertyEditorRowGeneratorTest;
}

declare class ReimportCurveFactory extends CSVImportFactory { 
	static Load(ResourceName: string): ReimportCurveFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportCurveFactory;
	static GetDefaultObject(): ReimportCurveFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportCurveFactory;
	static C(Other: UObject | any): ReimportCurveFactory;
}

declare class ReimportCurveTableFactory extends CSVImportFactory { 
	static Load(ResourceName: string): ReimportCurveTableFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportCurveTableFactory;
	static GetDefaultObject(): ReimportCurveTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportCurveTableFactory;
	static C(Other: UObject | any): ReimportCurveTableFactory;
}

declare class ReimportDataTableFactory extends CSVImportFactory { 
	static Load(ResourceName: string): ReimportDataTableFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportDataTableFactory;
	static GetDefaultObject(): ReimportDataTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportDataTableFactory;
	static C(Other: UObject | any): ReimportDataTableFactory;
}

declare class ReimportFbxAnimSequenceFactory extends FbxFactory { 
	static Load(ResourceName: string): ReimportFbxAnimSequenceFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportFbxAnimSequenceFactory;
	static GetDefaultObject(): ReimportFbxAnimSequenceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportFbxAnimSequenceFactory;
	static C(Other: UObject | any): ReimportFbxAnimSequenceFactory;
}

declare class ReimportFbxSceneFactory extends FbxSceneImportFactory { 
	static Load(ResourceName: string): ReimportFbxSceneFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportFbxSceneFactory;
	static GetDefaultObject(): ReimportFbxSceneFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportFbxSceneFactory;
	ScriptReimportHelper(Obj: UObject): void;
	static C(Other: UObject | any): ReimportFbxSceneFactory;
}

declare class ReimportFbxSkeletalMeshFactory extends FbxFactory { 
	static Load(ResourceName: string): ReimportFbxSkeletalMeshFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportFbxSkeletalMeshFactory;
	static GetDefaultObject(): ReimportFbxSkeletalMeshFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportFbxSkeletalMeshFactory;
	static C(Other: UObject | any): ReimportFbxSkeletalMeshFactory;
}

declare class ReimportFbxStaticMeshFactory extends FbxFactory { 
	static Load(ResourceName: string): ReimportFbxStaticMeshFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportFbxStaticMeshFactory;
	static GetDefaultObject(): ReimportFbxStaticMeshFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportFbxStaticMeshFactory;
	static C(Other: UObject | any): ReimportFbxStaticMeshFactory;
}

declare type ETextureSourceColorSpace = 'Auto' | 'Linear' | 'SRGB' | 'ETextureSourceColorSpace_MAX';
declare var ETextureSourceColorSpace : { Auto:'Auto',Linear:'Linear',SRGB:'SRGB',ETextureSourceColorSpace_MAX:'ETextureSourceColorSpace_MAX', };
declare type EAppReturnType = 'No' | 'Yes' | 'YesAll' | 'NoAll' | 'Cancel' | 'Ok' | 'Retry' | 'Continue' | 'EAppReturnType_MAX';
declare var EAppReturnType : { No:'No',Yes:'Yes',YesAll:'YesAll',NoAll:'NoAll',Cancel:'Cancel',Ok:'Ok',Retry:'Retry',Continue:'Continue',EAppReturnType_MAX:'EAppReturnType_MAX', };
declare class TextureFactory extends Factory { 
	NoCompression: boolean;
	NoAlpha: boolean;
	bDeferCompression: boolean;
	CompressionSettings: TextureCompressionSettings;
	bCreateMaterial: boolean;
	bRGBToBaseColor: boolean;
	bRGBToEmissive: boolean;
	bAlphaToRoughness: boolean;
	bAlphaToEmissive: boolean;
	bAlphaToOpacity: boolean;
	bAlphaToOpacityMask: boolean;
	bTwoSided: boolean;
	Blending: EBlendMode;
	ShadingModel: EMaterialShadingModel;
	MipGenSettings: TextureMipGenSettings;
	LODGroup: TextureGroup;
	bDoScaleMipsForAlphaCoverage: boolean;
	bUseNewMipFilter: boolean;
	AlphaCoverageThresholds: Vector4;
	bPreserveBorder: boolean;
	bFlipNormalMapGreenChannel: boolean;
	bUsingExistingSettings: boolean;
	bUseHashAsGuid: boolean;
	UdimRegexPattern: string;
	ColorSpaceMode: ETextureSourceColorSpace;
	HDRImportShouldBeLongLatCubeMap: EAppReturnType;
	static Load(ResourceName: string): TextureFactory;
	static Find(Outer: UObject, ResourceName: string): TextureFactory;
	static GetDefaultObject(): TextureFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureFactory;
	static C(Other: UObject | any): TextureFactory;
}

declare class ReimportTextureFactory extends TextureFactory { 
	pOriginalTex: Texture;
	static Load(ResourceName: string): ReimportTextureFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportTextureFactory;
	static GetDefaultObject(): ReimportTextureFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportTextureFactory;
	static C(Other: UObject | any): ReimportTextureFactory;
}

declare class VectorFieldStaticFactory extends Factory { 
	static Load(ResourceName: string): VectorFieldStaticFactory;
	static Find(Outer: UObject, ResourceName: string): VectorFieldStaticFactory;
	static GetDefaultObject(): VectorFieldStaticFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldStaticFactory;
	static C(Other: UObject | any): VectorFieldStaticFactory;
}

declare class ReimportVectorFieldStaticFactory extends VectorFieldStaticFactory { 
	static Load(ResourceName: string): ReimportVectorFieldStaticFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportVectorFieldStaticFactory;
	static GetDefaultObject(): ReimportVectorFieldStaticFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportVectorFieldStaticFactory;
	static C(Other: UObject | any): ReimportVectorFieldStaticFactory;
}

declare class RenderTargetExporterPNG extends Exporter { 
	static Load(ResourceName: string): RenderTargetExporterPNG;
	static Find(Outer: UObject, ResourceName: string): RenderTargetExporterPNG;
	static GetDefaultObject(): RenderTargetExporterPNG;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RenderTargetExporterPNG;
	static C(Other: UObject | any): RenderTargetExporterPNG;
}

declare class RenderTargetExporterEXR extends Exporter { 
	static Load(ResourceName: string): RenderTargetExporterEXR;
	static Find(Outer: UObject, ResourceName: string): RenderTargetExporterEXR;
	static GetDefaultObject(): RenderTargetExporterEXR;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RenderTargetExporterEXR;
	static C(Other: UObject | any): RenderTargetExporterEXR;
}

declare class ReplaceActorCommandlet extends Commandlet { 
	static Load(ResourceName: string): ReplaceActorCommandlet;
	static Find(Outer: UObject, ResourceName: string): ReplaceActorCommandlet;
	static GetDefaultObject(): ReplaceActorCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReplaceActorCommandlet;
	static C(Other: UObject | any): ReplaceActorCommandlet;
}

declare class ReplaceAssetsCommandlet extends Commandlet { 
	static Load(ResourceName: string): ReplaceAssetsCommandlet;
	static Find(Outer: UObject, ResourceName: string): ReplaceAssetsCommandlet;
	static GetDefaultObject(): ReplaceAssetsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReplaceAssetsCommandlet;
	static C(Other: UObject | any): ReplaceAssetsCommandlet;
}

declare class SavePackageUtilitiesCommandlet extends Commandlet { 
	static Load(ResourceName: string): SavePackageUtilitiesCommandlet;
	static Find(Outer: UObject, ResourceName: string): SavePackageUtilitiesCommandlet;
	static GetDefaultObject(): SavePackageUtilitiesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SavePackageUtilitiesCommandlet;
	static C(Other: UObject | any): SavePackageUtilitiesCommandlet;
}

declare class SceneThumbnailInfo extends ThumbnailInfo { 
	OrbitPitch: number;
	OrbitYaw: number;
	OrbitZoom: number;
	static Load(ResourceName: string): SceneThumbnailInfo;
	static Find(Outer: UObject, ResourceName: string): SceneThumbnailInfo;
	static GetDefaultObject(): SceneThumbnailInfo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneThumbnailInfo;
	static C(Other: UObject | any): SceneThumbnailInfo;
}

declare type EThumbnailPrimType = 'TPT_None' | 'TPT_Sphere' | 'TPT_Cube' | 'TPT_Plane' | 'TPT_Cylinder' | 'TPT_MAX';
declare var EThumbnailPrimType : { TPT_None:'TPT_None',TPT_Sphere:'TPT_Sphere',TPT_Cube:'TPT_Cube',TPT_Plane:'TPT_Plane',TPT_Cylinder:'TPT_Cylinder',TPT_MAX:'TPT_MAX', };
declare class SceneThumbnailInfoWithPrimitive extends SceneThumbnailInfo { 
	PrimitiveType: EThumbnailPrimType;
	PreviewMesh: SoftObjectPath;
	bUserModifiedShape: boolean;
	static Load(ResourceName: string): SceneThumbnailInfoWithPrimitive;
	static Find(Outer: UObject, ResourceName: string): SceneThumbnailInfoWithPrimitive;
	static GetDefaultObject(): SceneThumbnailInfoWithPrimitive;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneThumbnailInfoWithPrimitive;
	static C(Other: UObject | any): SceneThumbnailInfoWithPrimitive;
}

declare class EditorViewportViewMenuContext extends UObject { 
	static Load(ResourceName: string): EditorViewportViewMenuContext;
	static Find(Outer: UObject, ResourceName: string): EditorViewportViewMenuContext;
	static GetDefaultObject(): EditorViewportViewMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorViewportViewMenuContext;
	static C(Other: UObject | any): EditorViewportViewMenuContext;
}

declare class SequenceExporterT3D extends Exporter { 
	static Load(ResourceName: string): SequenceExporterT3D;
	static Find(Outer: UObject, ResourceName: string): SequenceExporterT3D;
	static GetDefaultObject(): SequenceExporterT3D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequenceExporterT3D;
	static C(Other: UObject | any): SequenceExporterT3D;
}

declare class ShaderCodeLibraryToolsCommandlet extends Commandlet { 
	static Load(ResourceName: string): ShaderCodeLibraryToolsCommandlet;
	static Find(Outer: UObject, ResourceName: string): ShaderCodeLibraryToolsCommandlet;
	static GetDefaultObject(): ShaderCodeLibraryToolsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShaderCodeLibraryToolsCommandlet;
	static C(Other: UObject | any): ShaderCodeLibraryToolsCommandlet;
}

declare class ShaderPipelineCacheToolsCommandlet extends Commandlet { 
	static Load(ResourceName: string): ShaderPipelineCacheToolsCommandlet;
	static Find(Outer: UObject, ResourceName: string): ShaderPipelineCacheToolsCommandlet;
	static GetDefaultObject(): ShaderPipelineCacheToolsCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShaderPipelineCacheToolsCommandlet;
	static C(Other: UObject | any): ShaderPipelineCacheToolsCommandlet;
}

declare type ESheetAxis = 'AX_Horizontal' | 'AX_XAxis' | 'AX_YAxis' | 'AX_MAX';
declare var ESheetAxis : { AX_Horizontal:'AX_Horizontal',AX_XAxis:'AX_XAxis',AX_YAxis:'AX_YAxis',AX_MAX:'AX_MAX', };
declare class SheetBuilder extends EditorBrushBuilder { 
	X: number;
	Y: number;
	XSegments: number;
	YSegments: number;
	Axis: ESheetAxis;
	GroupName: string;
	static Load(ResourceName: string): SheetBuilder;
	static Find(Outer: UObject, ResourceName: string): SheetBuilder;
	static GetDefaultObject(): SheetBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SheetBuilder;
	static C(Other: UObject | any): SheetBuilder;
}

declare class SkeletalMeshEditorSettings extends UObject { 
	AnimPreviewFloorColor: Color;
	AnimPreviewSkyColor: Color;
	AnimPreviewSkyBrightness: number;
	AnimPreviewLightBrightness: number;
	AnimPreviewLightingDirection: Rotator;
	AnimPreviewDirectionalColor: Color;
	static Load(ResourceName: string): SkeletalMeshEditorSettings;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshEditorSettings;
	static GetDefaultObject(): SkeletalMeshEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshEditorSettings;
	static C(Other: UObject | any): SkeletalMeshEditorSettings;
}

declare class SkeletalMeshExporterFBX extends ExporterFBX { 
	static Load(ResourceName: string): SkeletalMeshExporterFBX;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshExporterFBX;
	static GetDefaultObject(): SkeletalMeshExporterFBX;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshExporterFBX;
	static C(Other: UObject | any): SkeletalMeshExporterFBX;
}

declare class SkeletalMeshThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): SkeletalMeshThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshThumbnailRenderer;
	static GetDefaultObject(): SkeletalMeshThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshThumbnailRenderer;
	static C(Other: UObject | any): SkeletalMeshThumbnailRenderer;
}

declare class SkeletalMeshToolMenuContext extends UObject { 
	static Load(ResourceName: string): SkeletalMeshToolMenuContext;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshToolMenuContext;
	static GetDefaultObject(): SkeletalMeshToolMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshToolMenuContext;
	static C(Other: UObject | any): SkeletalMeshToolMenuContext;
}

declare class SkeletonFactory extends Factory { 
	TargetSkeletalMesh: SkeletalMesh;
	static Load(ResourceName: string): SkeletonFactory;
	static Find(Outer: UObject, ResourceName: string): SkeletonFactory;
	static GetDefaultObject(): SkeletonFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletonFactory;
	static C(Other: UObject | any): SkeletonFactory;
}

declare class SkeletonThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): SkeletonThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): SkeletonThumbnailRenderer;
	static GetDefaultObject(): SkeletonThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletonThumbnailRenderer;
	static C(Other: UObject | any): SkeletonThumbnailRenderer;
}

declare class SlateBrushAssetFactory extends Factory { 
	InitialTexture: Texture2D;
	static Load(ResourceName: string): SlateBrushAssetFactory;
	static Find(Outer: UObject, ResourceName: string): SlateBrushAssetFactory;
	static GetDefaultObject(): SlateBrushAssetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateBrushAssetFactory;
	static C(Other: UObject | any): SlateBrushAssetFactory;
}

declare class SlateBrushThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): SlateBrushThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): SlateBrushThumbnailRenderer;
	static GetDefaultObject(): SlateBrushThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateBrushThumbnailRenderer;
	static C(Other: UObject | any): SlateBrushThumbnailRenderer;
}

declare class SlateWidgetStyleAssetFactory extends Factory { 
	StyleType: UnrealEngineClass;
	static Load(ResourceName: string): SlateWidgetStyleAssetFactory;
	static Find(Outer: UObject, ResourceName: string): SlateWidgetStyleAssetFactory;
	static GetDefaultObject(): SlateWidgetStyleAssetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateWidgetStyleAssetFactory;
	static C(Other: UObject | any): SlateWidgetStyleAssetFactory;
}

declare class SMInstanceElementDetailsInterface extends UObject { 
	static Load(ResourceName: string): SMInstanceElementDetailsInterface;
	static Find(Outer: UObject, ResourceName: string): SMInstanceElementDetailsInterface;
	static GetDefaultObject(): SMInstanceElementDetailsInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SMInstanceElementDetailsInterface;
	static C(Other: UObject | any): SMInstanceElementDetailsInterface;
}

declare class SMInstanceElementDetailsProxyObject extends UObject { 
	Transform: Transform;
	static Load(ResourceName: string): SMInstanceElementDetailsProxyObject;
	static Find(Outer: UObject, ResourceName: string): SMInstanceElementDetailsProxyObject;
	static GetDefaultObject(): SMInstanceElementDetailsProxyObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SMInstanceElementDetailsProxyObject;
	static C(Other: UObject | any): SMInstanceElementDetailsProxyObject;
}

declare class SMInstanceElementSelectionInterface extends UObject { 
	static Load(ResourceName: string): SMInstanceElementSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): SMInstanceElementSelectionInterface;
	static GetDefaultObject(): SMInstanceElementSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SMInstanceElementSelectionInterface;
	static C(Other: UObject | any): SMInstanceElementSelectionInterface;
}

declare class SMInstanceElementEditorSelectionInterface extends SMInstanceElementSelectionInterface { 
	static Load(ResourceName: string): SMInstanceElementEditorSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): SMInstanceElementEditorSelectionInterface;
	static GetDefaultObject(): SMInstanceElementEditorSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SMInstanceElementEditorSelectionInterface;
	static C(Other: UObject | any): SMInstanceElementEditorSelectionInterface;
}

declare class SMInstanceElementWorldInterface extends UObject { 
	static Load(ResourceName: string): SMInstanceElementWorldInterface;
	static Find(Outer: UObject, ResourceName: string): SMInstanceElementWorldInterface;
	static GetDefaultObject(): SMInstanceElementWorldInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SMInstanceElementWorldInterface;
	static C(Other: UObject | any): SMInstanceElementWorldInterface;
}

declare class SMInstanceElementEditorWorldInterface extends SMInstanceElementWorldInterface { 
	static Load(ResourceName: string): SMInstanceElementEditorWorldInterface;
	static Find(Outer: UObject, ResourceName: string): SMInstanceElementEditorWorldInterface;
	static GetDefaultObject(): SMInstanceElementEditorWorldInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SMInstanceElementEditorWorldInterface;
	static C(Other: UObject | any): SMInstanceElementEditorWorldInterface;
}

declare class SoundExporterOGG extends Exporter { 
	static Load(ResourceName: string): SoundExporterOGG;
	static Find(Outer: UObject, ResourceName: string): SoundExporterOGG;
	static GetDefaultObject(): SoundExporterOGG;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundExporterOGG;
	static C(Other: UObject | any): SoundExporterOGG;
}

declare class SoundExporterWAV extends Exporter { 
	static Load(ResourceName: string): SoundExporterWAV;
	static Find(Outer: UObject, ResourceName: string): SoundExporterWAV;
	static GetDefaultObject(): SoundExporterWAV;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundExporterWAV;
	static C(Other: UObject | any): SoundExporterWAV;
}

declare class SoundSurroundExporterWAV extends Exporter { 
	static Load(ResourceName: string): SoundSurroundExporterWAV;
	static Find(Outer: UObject, ResourceName: string): SoundSurroundExporterWAV;
	static GetDefaultObject(): SoundSurroundExporterWAV;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSurroundExporterWAV;
	static C(Other: UObject | any): SoundSurroundExporterWAV;
}

declare class SoundWaveThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): SoundWaveThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): SoundWaveThumbnailRenderer;
	static GetDefaultObject(): SoundWaveThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundWaveThumbnailRenderer;
	static C(Other: UObject | any): SoundWaveThumbnailRenderer;
}

declare class SpiralStairBuilder extends EditorBrushBuilder { 
	InnerRadius: number;
	StepWidth: number;
	StepHeight: number;
	StepThickness: number;
	NumStepsPer360: number;
	NumSteps: number;
	GroupName: string;
	SlopedCeiling: boolean;
	SlopedFloor: boolean;
	CounterClockwise: boolean;
	static Load(ResourceName: string): SpiralStairBuilder;
	static Find(Outer: UObject, ResourceName: string): SpiralStairBuilder;
	static GetDefaultObject(): SpiralStairBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpiralStairBuilder;
	static C(Other: UObject | any): SpiralStairBuilder;
}

declare class StabilizeLocalizationKeysCommandlet extends Commandlet { 
	static Load(ResourceName: string): StabilizeLocalizationKeysCommandlet;
	static Find(Outer: UObject, ResourceName: string): StabilizeLocalizationKeysCommandlet;
	static GetDefaultObject(): StabilizeLocalizationKeysCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StabilizeLocalizationKeysCommandlet;
	static C(Other: UObject | any): StabilizeLocalizationKeysCommandlet;
}

declare class StaticMeshExporterFBX extends ExporterFBX { 
	static Load(ResourceName: string): StaticMeshExporterFBX;
	static Find(Outer: UObject, ResourceName: string): StaticMeshExporterFBX;
	static GetDefaultObject(): StaticMeshExporterFBX;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshExporterFBX;
	static C(Other: UObject | any): StaticMeshExporterFBX;
}

declare class StaticMeshExporterOBJ extends Exporter { 
	static Load(ResourceName: string): StaticMeshExporterOBJ;
	static Find(Outer: UObject, ResourceName: string): StaticMeshExporterOBJ;
	static GetDefaultObject(): StaticMeshExporterOBJ;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshExporterOBJ;
	static C(Other: UObject | any): StaticMeshExporterOBJ;
}

declare class StaticMeshMinLodCommandlet extends Commandlet { 
	static Load(ResourceName: string): StaticMeshMinLodCommandlet;
	static Find(Outer: UObject, ResourceName: string): StaticMeshMinLodCommandlet;
	static GetDefaultObject(): StaticMeshMinLodCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshMinLodCommandlet;
	static C(Other: UObject | any): StaticMeshMinLodCommandlet;
}

declare class StaticMeshThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): StaticMeshThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): StaticMeshThumbnailRenderer;
	static GetDefaultObject(): StaticMeshThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshThumbnailRenderer;
	static C(Other: UObject | any): StaticMeshThumbnailRenderer;
}

declare class StringTableFactory extends Factory { 
	static Load(ResourceName: string): StringTableFactory;
	static Find(Outer: UObject, ResourceName: string): StringTableFactory;
	static GetDefaultObject(): StringTableFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StringTableFactory;
	static C(Other: UObject | any): StringTableFactory;
}

declare class StructureFactory extends Factory { 
	static Load(ResourceName: string): StructureFactory;
	static Find(Outer: UObject, ResourceName: string): StructureFactory;
	static GetDefaultObject(): StructureFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StructureFactory;
	static C(Other: UObject | any): StructureFactory;
}

declare type EStructViewerDeveloperType = 'SVDT_None' | 'SVDT_CurrentUser' | 'SVDT_All' | 'SVDT_Max';
declare var EStructViewerDeveloperType : { SVDT_None:'SVDT_None',SVDT_CurrentUser:'SVDT_CurrentUser',SVDT_All:'SVDT_All',SVDT_Max:'SVDT_Max', };
declare class StructViewerSettings extends UObject { 
	DisplayInternalStructs: boolean;
	DeveloperFolderType: EStructViewerDeveloperType;
	static Load(ResourceName: string): StructViewerSettings;
	static Find(Outer: UObject, ResourceName: string): StructViewerSettings;
	static GetDefaultObject(): StructViewerSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StructViewerSettings;
	static C(Other: UObject | any): StructViewerSettings;
}

declare class SubsurfaceProfileFactory extends Factory { 
	static Load(ResourceName: string): SubsurfaceProfileFactory;
	static Find(Outer: UObject, ResourceName: string): SubsurfaceProfileFactory;
	static GetDefaultObject(): SubsurfaceProfileFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubsurfaceProfileFactory;
	static C(Other: UObject | any): SubsurfaceProfileFactory;
}

declare class SubsurfaceProfileRenderer extends TextureThumbnailRenderer { 
	static Load(ResourceName: string): SubsurfaceProfileRenderer;
	static Find(Outer: UObject, ResourceName: string): SubsurfaceProfileRenderer;
	static GetDefaultObject(): SubsurfaceProfileRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubsurfaceProfileRenderer;
	static C(Other: UObject | any): SubsurfaceProfileRenderer;
}

declare class SubUVAnimationFactory extends Factory { 
	InitialTexture: Texture2D;
	static Load(ResourceName: string): SubUVAnimationFactory;
	static Find(Outer: UObject, ResourceName: string): SubUVAnimationFactory;
	static GetDefaultObject(): SubUVAnimationFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubUVAnimationFactory;
	static C(Other: UObject | any): SubUVAnimationFactory;
}

declare class SummarizeTraceCommandlet extends Commandlet { 
	static Load(ResourceName: string): SummarizeTraceCommandlet;
	static Find(Outer: UObject, ResourceName: string): SummarizeTraceCommandlet;
	static GetDefaultObject(): SummarizeTraceCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SummarizeTraceCommandlet;
	static C(Other: UObject | any): SummarizeTraceCommandlet;
}

declare class SwapSoundForDialogueInCuesCommandlet extends Commandlet { 
	static Load(ResourceName: string): SwapSoundForDialogueInCuesCommandlet;
	static Find(Outer: UObject, ResourceName: string): SwapSoundForDialogueInCuesCommandlet;
	static GetDefaultObject(): SwapSoundForDialogueInCuesCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SwapSoundForDialogueInCuesCommandlet;
	static C(Other: UObject | any): SwapSoundForDialogueInCuesCommandlet;
}

declare class TemplateMapMetadata extends UObject { 
	static Load(ResourceName: string): TemplateMapMetadata;
	static Find(Outer: UObject, ResourceName: string): TemplateMapMetadata;
	static GetDefaultObject(): TemplateMapMetadata;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TemplateMapMetadata;
	static C(Other: UObject | any): TemplateMapMetadata;
}

declare class TetrahedronBuilder extends EditorBrushBuilder { 
	Radius: number;
	SphereExtrapolation: number;
	GroupName: string;
	static Load(ResourceName: string): TetrahedronBuilder;
	static Find(Outer: UObject, ResourceName: string): TetrahedronBuilder;
	static GetDefaultObject(): TetrahedronBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TetrahedronBuilder;
	static C(Other: UObject | any): TetrahedronBuilder;
}

declare type ETexAlign = 'TEXALIGN_None' | 'TEXALIGN_Default' | 'TEXALIGN_Box' | 'TEXALIGN_Planar' | 'TEXALIGN_Fit' | 'TEXALIGN_PlanarAuto' | 'TEXALIGN_PlanarWall' | 'TEXALIGN_PlanarFloor' | 'TEXALIGN_MAX';
declare var ETexAlign : { TEXALIGN_None:'TEXALIGN_None',TEXALIGN_Default:'TEXALIGN_Default',TEXALIGN_Box:'TEXALIGN_Box',TEXALIGN_Planar:'TEXALIGN_Planar',TEXALIGN_Fit:'TEXALIGN_Fit',TEXALIGN_PlanarAuto:'TEXALIGN_PlanarAuto',TEXALIGN_PlanarWall:'TEXALIGN_PlanarWall',TEXALIGN_PlanarFloor:'TEXALIGN_PlanarFloor',TEXALIGN_MAX:'TEXALIGN_MAX', };
declare class TexAligner extends UObject { 
	DefTexAlign: ETexAlign;
	TAxis: number;
	UTile: number;
	VTile: number;
	Desc: string;
	static Load(ResourceName: string): TexAligner;
	static Find(Outer: UObject, ResourceName: string): TexAligner;
	static GetDefaultObject(): TexAligner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TexAligner;
	static C(Other: UObject | any): TexAligner;
}

declare class TexAlignerBox extends TexAligner { 
	static Load(ResourceName: string): TexAlignerBox;
	static Find(Outer: UObject, ResourceName: string): TexAlignerBox;
	static GetDefaultObject(): TexAlignerBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TexAlignerBox;
	static C(Other: UObject | any): TexAlignerBox;
}

declare class TexAlignerDefault extends TexAligner { 
	static Load(ResourceName: string): TexAlignerDefault;
	static Find(Outer: UObject, ResourceName: string): TexAlignerDefault;
	static GetDefaultObject(): TexAlignerDefault;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TexAlignerDefault;
	static C(Other: UObject | any): TexAlignerDefault;
}

declare class TexAlignerFit extends TexAligner { 
	static Load(ResourceName: string): TexAlignerFit;
	static Find(Outer: UObject, ResourceName: string): TexAlignerFit;
	static GetDefaultObject(): TexAlignerFit;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TexAlignerFit;
	static C(Other: UObject | any): TexAlignerFit;
}

declare class TexAlignerPlanar extends TexAligner { 
	static Load(ResourceName: string): TexAlignerPlanar;
	static Find(Outer: UObject, ResourceName: string): TexAlignerPlanar;
	static GetDefaultObject(): TexAlignerPlanar;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TexAlignerPlanar;
	static C(Other: UObject | any): TexAlignerPlanar;
}

declare class TextAssetCommandlet extends Commandlet { 
	static Load(ResourceName: string): TextAssetCommandlet;
	static Find(Outer: UObject, ResourceName: string): TextAssetCommandlet;
	static GetDefaultObject(): TextAssetCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextAssetCommandlet;
	static C(Other: UObject | any): TextAssetCommandlet;
}

declare class TextBufferExporterTXT extends Exporter { 
	static Load(ResourceName: string): TextBufferExporterTXT;
	static Find(Outer: UObject, ResourceName: string): TextBufferExporterTXT;
	static GetDefaultObject(): TextBufferExporterTXT;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextBufferExporterTXT;
	static C(Other: UObject | any): TextBufferExporterTXT;
}

declare class Texture2DArrayFactory extends Factory { 
	InitialTextures: Texture2D[];
	static Load(ResourceName: string): Texture2DArrayFactory;
	static Find(Outer: UObject, ResourceName: string): Texture2DArrayFactory;
	static GetDefaultObject(): Texture2DArrayFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Texture2DArrayFactory;
	static C(Other: UObject | any): Texture2DArrayFactory;
}

declare class Texture2DArrayThumbnailRenderer extends TextureThumbnailRenderer { 
	static Load(ResourceName: string): Texture2DArrayThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): Texture2DArrayThumbnailRenderer;
	static GetDefaultObject(): Texture2DArrayThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Texture2DArrayThumbnailRenderer;
	static C(Other: UObject | any): Texture2DArrayThumbnailRenderer;
}

declare class Texture2DFactoryNew extends Factory { 
	Width: number;
	Height: number;
	static Load(ResourceName: string): Texture2DFactoryNew;
	static Find(Outer: UObject, ResourceName: string): Texture2DFactoryNew;
	static GetDefaultObject(): Texture2DFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Texture2DFactoryNew;
	static C(Other: UObject | any): Texture2DFactoryNew;
}

declare class TextureCubeArrayFactory extends Factory { 
	InitialTextures: TextureCube[];
	static Load(ResourceName: string): TextureCubeArrayFactory;
	static Find(Outer: UObject, ResourceName: string): TextureCubeArrayFactory;
	static GetDefaultObject(): TextureCubeArrayFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureCubeArrayFactory;
	static C(Other: UObject | any): TextureCubeArrayFactory;
}

declare class TextureCubeArrayThumbnailRenderer extends TextureThumbnailRenderer { 
	static Load(ResourceName: string): TextureCubeArrayThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): TextureCubeArrayThumbnailRenderer;
	static GetDefaultObject(): TextureCubeArrayThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureCubeArrayThumbnailRenderer;
	static C(Other: UObject | any): TextureCubeArrayThumbnailRenderer;
}

declare class TextureCubeExporterHDR extends Exporter { 
	static Load(ResourceName: string): TextureCubeExporterHDR;
	static Find(Outer: UObject, ResourceName: string): TextureCubeExporterHDR;
	static GetDefaultObject(): TextureCubeExporterHDR;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureCubeExporterHDR;
	static C(Other: UObject | any): TextureCubeExporterHDR;
}

declare class RenderTargetCubeExporterHDR extends TextureCubeExporterHDR { 
	static Load(ResourceName: string): RenderTargetCubeExporterHDR;
	static Find(Outer: UObject, ResourceName: string): RenderTargetCubeExporterHDR;
	static GetDefaultObject(): RenderTargetCubeExporterHDR;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RenderTargetCubeExporterHDR;
	static C(Other: UObject | any): RenderTargetCubeExporterHDR;
}

declare class TextureCubeThumbnailRenderer extends TextureThumbnailRenderer { 
	static Load(ResourceName: string): TextureCubeThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): TextureCubeThumbnailRenderer;
	static GetDefaultObject(): TextureCubeThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureCubeThumbnailRenderer;
	static C(Other: UObject | any): TextureCubeThumbnailRenderer;
}

declare class TextureExporterGeneric extends Exporter { 
	static Load(ResourceName: string): TextureExporterGeneric;
	static Find(Outer: UObject, ResourceName: string): TextureExporterGeneric;
	static GetDefaultObject(): TextureExporterGeneric;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterGeneric;
	static C(Other: UObject | any): TextureExporterGeneric;
}

declare class TextureExporterBMP extends TextureExporterGeneric { 
	static Load(ResourceName: string): TextureExporterBMP;
	static Find(Outer: UObject, ResourceName: string): TextureExporterBMP;
	static GetDefaultObject(): TextureExporterBMP;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterBMP;
	static C(Other: UObject | any): TextureExporterBMP;
}

declare class VirtualTextureBuilderExporterBMP extends TextureExporterBMP { 
	static Load(ResourceName: string): VirtualTextureBuilderExporterBMP;
	static Find(Outer: UObject, ResourceName: string): VirtualTextureBuilderExporterBMP;
	static GetDefaultObject(): VirtualTextureBuilderExporterBMP;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VirtualTextureBuilderExporterBMP;
	static C(Other: UObject | any): VirtualTextureBuilderExporterBMP;
}

declare class TextureExporterDDS extends TextureExporterGeneric { 
	static Load(ResourceName: string): TextureExporterDDS;
	static Find(Outer: UObject, ResourceName: string): TextureExporterDDS;
	static GetDefaultObject(): TextureExporterDDS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterDDS;
	static C(Other: UObject | any): TextureExporterDDS;
}

declare class VirtualTextureBuilderExporterDDS extends TextureExporterDDS { 
	static Load(ResourceName: string): VirtualTextureBuilderExporterDDS;
	static Find(Outer: UObject, ResourceName: string): VirtualTextureBuilderExporterDDS;
	static GetDefaultObject(): VirtualTextureBuilderExporterDDS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VirtualTextureBuilderExporterDDS;
	static C(Other: UObject | any): VirtualTextureBuilderExporterDDS;
}

declare class TextureExporterEXR extends TextureExporterGeneric { 
	static Load(ResourceName: string): TextureExporterEXR;
	static Find(Outer: UObject, ResourceName: string): TextureExporterEXR;
	static GetDefaultObject(): TextureExporterEXR;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterEXR;
	static C(Other: UObject | any): TextureExporterEXR;
}

declare class VirtualTextureBuilderExporterEXR extends TextureExporterEXR { 
	static Load(ResourceName: string): VirtualTextureBuilderExporterEXR;
	static Find(Outer: UObject, ResourceName: string): VirtualTextureBuilderExporterEXR;
	static GetDefaultObject(): VirtualTextureBuilderExporterEXR;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VirtualTextureBuilderExporterEXR;
	static C(Other: UObject | any): VirtualTextureBuilderExporterEXR;
}

declare class TextureExporterHDR extends TextureExporterGeneric { 
	static Load(ResourceName: string): TextureExporterHDR;
	static Find(Outer: UObject, ResourceName: string): TextureExporterHDR;
	static GetDefaultObject(): TextureExporterHDR;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterHDR;
	static C(Other: UObject | any): TextureExporterHDR;
}

declare class VirtualTextureBuilderExporterHDR extends TextureExporterHDR { 
	static Load(ResourceName: string): VirtualTextureBuilderExporterHDR;
	static Find(Outer: UObject, ResourceName: string): VirtualTextureBuilderExporterHDR;
	static GetDefaultObject(): VirtualTextureBuilderExporterHDR;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VirtualTextureBuilderExporterHDR;
	static C(Other: UObject | any): VirtualTextureBuilderExporterHDR;
}

declare class TextureExporterPCX extends Exporter { 
	static Load(ResourceName: string): TextureExporterPCX;
	static Find(Outer: UObject, ResourceName: string): TextureExporterPCX;
	static GetDefaultObject(): TextureExporterPCX;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterPCX;
	static C(Other: UObject | any): TextureExporterPCX;
}

declare class TextureExporterPNG extends TextureExporterGeneric { 
	static Load(ResourceName: string): TextureExporterPNG;
	static Find(Outer: UObject, ResourceName: string): TextureExporterPNG;
	static GetDefaultObject(): TextureExporterPNG;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterPNG;
	static C(Other: UObject | any): TextureExporterPNG;
}

declare class VirtualTextureBuilderExporterPNG extends TextureExporterPNG { 
	static Load(ResourceName: string): VirtualTextureBuilderExporterPNG;
	static Find(Outer: UObject, ResourceName: string): VirtualTextureBuilderExporterPNG;
	static GetDefaultObject(): VirtualTextureBuilderExporterPNG;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VirtualTextureBuilderExporterPNG;
	static C(Other: UObject | any): VirtualTextureBuilderExporterPNG;
}

declare class TextureExporterJPEG extends Exporter { 
	static Load(ResourceName: string): TextureExporterJPEG;
	static Find(Outer: UObject, ResourceName: string): TextureExporterJPEG;
	static GetDefaultObject(): TextureExporterJPEG;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterJPEG;
	static C(Other: UObject | any): TextureExporterJPEG;
}

declare class TextureExporterTGA extends Exporter { 
	static Load(ResourceName: string): TextureExporterTGA;
	static Find(Outer: UObject, ResourceName: string): TextureExporterTGA;
	static GetDefaultObject(): TextureExporterTGA;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureExporterTGA;
	static C(Other: UObject | any): TextureExporterTGA;
}

declare class UDIMTextureFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): UDIMTextureFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): UDIMTextureFunctionLibrary;
	static GetDefaultObject(): UDIMTextureFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UDIMTextureFunctionLibrary;
	static MakeUDIMVirtualTextureFromTexture2Ds(OutputPathName: string,SourceTextures: Texture2D[],BlockCoords: IntPoint[],bKeepExistingSettings: boolean,bCheckOutAndSave: boolean): Texture2D;
	static C(Other: UObject | any): UDIMTextureFunctionLibrary;
}

declare class TextureRenderTarget2DArrayFactoryNew extends Factory { 
	Width: number;
	Height: number;
	Slices: number;
	Format: number;
	static Load(ResourceName: string): TextureRenderTarget2DArrayFactoryNew;
	static Find(Outer: UObject, ResourceName: string): TextureRenderTarget2DArrayFactoryNew;
	static GetDefaultObject(): TextureRenderTarget2DArrayFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureRenderTarget2DArrayFactoryNew;
	static C(Other: UObject | any): TextureRenderTarget2DArrayFactoryNew;
}

declare class TextureRenderTargetCubeFactoryNew extends Factory { 
	Width: number;
	Format: number;
	static Load(ResourceName: string): TextureRenderTargetCubeFactoryNew;
	static Find(Outer: UObject, ResourceName: string): TextureRenderTargetCubeFactoryNew;
	static GetDefaultObject(): TextureRenderTargetCubeFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureRenderTargetCubeFactoryNew;
	static C(Other: UObject | any): TextureRenderTargetCubeFactoryNew;
}

declare class TextureRenderTargetFactoryNew extends Factory { 
	Width: number;
	Height: number;
	Format: number;
	static Load(ResourceName: string): TextureRenderTargetFactoryNew;
	static Find(Outer: UObject, ResourceName: string): TextureRenderTargetFactoryNew;
	static GetDefaultObject(): TextureRenderTargetFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureRenderTargetFactoryNew;
	static C(Other: UObject | any): TextureRenderTargetFactoryNew;
}

declare class TextureRenderTargetVolumeFactoryNew extends Factory { 
	Width: number;
	Height: number;
	Depth: number;
	Format: number;
	static Load(ResourceName: string): TextureRenderTargetVolumeFactoryNew;
	static Find(Outer: UObject, ResourceName: string): TextureRenderTargetVolumeFactoryNew;
	static GetDefaultObject(): TextureRenderTargetVolumeFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureRenderTargetVolumeFactoryNew;
	static C(Other: UObject | any): TextureRenderTargetVolumeFactoryNew;
}

declare class SkeletalMeshActor extends Actor { 
	bShouldDoAnimNotifies: boolean;
	bWakeOnLevelStart: boolean;
	SkeletalMeshComponent: SkeletalMeshComponent;
	ReplicatedMesh: SkeletalMesh;
	ReplicatedPhysAsset: PhysicsAsset;
	ReplicatedMaterial0: MaterialInterface;
	ReplicatedMaterial1: MaterialInterface;
	static GetDefaultObject(): SkeletalMeshActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshActor;
	OnRep_ReplicatedPhysAsset(): void;
	OnRep_ReplicatedMesh(): void;
	OnRep_ReplicatedMaterial1(): void;
	OnRep_ReplicatedMaterial0(): void;
	static C(Other: UObject | any): SkeletalMeshActor;
}

declare class AnimationThumbnailSkeletalMeshActor extends SkeletalMeshActor { 
	static GetDefaultObject(): AnimationThumbnailSkeletalMeshActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationThumbnailSkeletalMeshActor;
	static C(Other: UObject | any): AnimationThumbnailSkeletalMeshActor;
}

declare class ThumbnailRenderingInfo { 
	ClassNeedingThumbnailName: string;
	ClassNeedingThumbnail: UnrealEngineClass;
	RendererClassName: string;
	Renderer: ThumbnailRenderer;
	clone() : ThumbnailRenderingInfo;
	static C(Other: UObject | any): ThumbnailRenderingInfo;
}

declare class ThumbnailManager extends UObject { 
	NotSupported: ThumbnailRenderingInfo;
	EditorCube: StaticMesh;
	EditorSphere: StaticMesh;
	EditorCylinder: StaticMesh;
	EditorPlane: StaticMesh;
	EditorSkySphere: StaticMesh;
	FloorPlaneMaterial: Material;
	AmbientCubemap: TextureCube;
	CheckerboardTexture: Texture2D;
	RenderableThumbnailTypes: ThumbnailRenderingInfo[];
	ThumbnailManagerClassName: string;
	static Load(ResourceName: string): ThumbnailManager;
	static Find(Outer: UObject, ResourceName: string): ThumbnailManager;
	static GetDefaultObject(): ThumbnailManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ThumbnailManager;
	static C(Other: UObject | any): ThumbnailManager;
}

declare class TouchInterfaceFactory extends Factory { 
	static Load(ResourceName: string): TouchInterfaceFactory;
	static Find(Outer: UObject, ResourceName: string): TouchInterfaceFactory;
	static GetDefaultObject(): TouchInterfaceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TouchInterfaceFactory;
	static C(Other: UObject | any): TouchInterfaceFactory;
}

declare class TransBuffer extends Transactor { 
	static Load(ResourceName: string): TransBuffer;
	static Find(Outer: UObject, ResourceName: string): TransBuffer;
	static GetDefaultObject(): TransBuffer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransBuffer;
	static C(Other: UObject | any): TransBuffer;
}

declare class FontImportOptions extends UObject { 
	Data: FontImportOptionsData;
	static Load(ResourceName: string): FontImportOptions;
	static Find(Outer: UObject, ResourceName: string): FontImportOptions;
	static GetDefaultObject(): FontImportOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FontImportOptions;
	static C(Other: UObject | any): FontImportOptions;
}

declare class TrueTypeFontFactory extends TextureFactory { 
	ImportOptions: FontImportOptions;
	bPropertiesConfigured: boolean;
	bFontSelected: boolean;
	static Load(ResourceName: string): TrueTypeFontFactory;
	static Find(Outer: UObject, ResourceName: string): TrueTypeFontFactory;
	static GetDefaultObject(): TrueTypeFontFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TrueTypeFontFactory;
	static C(Other: UObject | any): TrueTypeFontFactory;
}

declare class EditorCommandCategory { 
	Parent: string;
	Name: string;
	clone() : EditorCommandCategory;
	static C(Other: UObject | any): EditorCommandCategory;
}

declare class EditorCommand { 
	Parent: string;
	CommandName: string;
	ExecCommand: string;
	Description: string;
	clone() : EditorCommand;
	static C(Other: UObject | any): EditorCommand;
}

declare class EditorKeyBinding { 
	bCtrlDown: boolean;
	bAltDown: boolean;
	bShiftDown: boolean;
	Key: Key;
	CommandName: string;
	clone() : EditorKeyBinding;
	static C(Other: UObject | any): EditorKeyBinding;
}

declare class UnrealEdKeyBindings extends UObject { 
	KeyBindings: EditorKeyBinding[];
	static Load(ResourceName: string): UnrealEdKeyBindings;
	static Find(Outer: UObject, ResourceName: string): UnrealEdKeyBindings;
	static GetDefaultObject(): UnrealEdKeyBindings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnrealEdKeyBindings;
	static C(Other: UObject | any): UnrealEdKeyBindings;
}

declare class ClassPickerDefaults { 
	ClassName: string;
	AssetClass: string;
	clone() : ClassPickerDefaults;
	static C(Other: UObject | any): ClassPickerDefaults;
}

declare class UnrealEdOptions extends UObject { 
	EditorCategories: EditorCommandCategory[];
	EditorCommands: EditorCommand[];
	EditorKeyBindings: UnrealEdKeyBindings;
	bExpandClassPickerClassList: boolean;
	NewAssetDefaultClasses: ClassPickerDefaults[];
	static Load(ResourceName: string): UnrealEdOptions;
	static Find(Outer: UObject, ResourceName: string): UnrealEdOptions;
	static GetDefaultObject(): UnrealEdOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnrealEdOptions;
	static C(Other: UObject | any): UnrealEdOptions;
}

declare type AnimationCompressionFormat = 'ACF_None' | 'ACF_Float96NoW' | 'ACF_Fixed48NoW' | 'ACF_IntervalFixed32NoW' | 'ACF_Fixed32NoW' | 'ACF_Float32NoW' | 'ACF_Identity' | 'ACF_MAX';
declare var AnimationCompressionFormat : { ACF_None:'ACF_None',ACF_Float96NoW:'ACF_Float96NoW',ACF_Fixed48NoW:'ACF_Fixed48NoW',ACF_IntervalFixed32NoW:'ACF_IntervalFixed32NoW',ACF_Fixed32NoW:'ACF_Fixed32NoW',ACF_Float32NoW:'ACF_Float32NoW',ACF_Identity:'ACF_Identity',ACF_MAX:'ACF_MAX', };
declare class AnimCompress extends AnimBoneCompressionCodec { 
	bNeedsSkeleton: boolean;
	TranslationCompressionFormat: AnimationCompressionFormat;
	RotationCompressionFormat: AnimationCompressionFormat;
	ScaleCompressionFormat: AnimationCompressionFormat;
	static Load(ResourceName: string): AnimCompress;
	static Find(Outer: UObject, ResourceName: string): AnimCompress;
	static GetDefaultObject(): AnimCompress;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimCompress;
	static C(Other: UObject | any): AnimCompress;
}

declare class TemplateMapInfo { 
	ThumbnailTexture: Texture2D;
	Thumbnail: SoftObjectPath;
	Map: SoftObjectPath;
	DisplayName: string;
	Category: string;
	clone() : TemplateMapInfo;
	static C(Other: UObject | any): TemplateMapInfo;
}

declare class UnrealEdEngine extends EditorEngine { 
	EditorOptionsInst: UnrealEdOptions;
	AutoReimportManager: AutoReimportManager;
	MaterialCopyPasteBuffer: Material;
	SoundCueCopyPasteBuffer: SoundCue;
	AnimationCompressionAlgorithms: AnimCompress[];
	PackagesToBeFullyLoadedAtStartup: string[];
	CurrentLODParentActor: Actor;
	bNeedWarningForPkgEngineVer: boolean;
	SortedSpriteCategories: string[];
	TemplateMapInfos: TemplateMapInfo[];
	CookServer: CookOnTheFlyServer;
	ClassesToIgnoreDeleteReferenceWarning: UnrealEngineClass[];
	static Load(ResourceName: string): UnrealEdEngine;
	static Find(Outer: UObject, ResourceName: string): UnrealEdEngine;
	static GetDefaultObject(): UnrealEdEngine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnrealEdEngine;
	static C(Other: UObject | any): UnrealEdEngine;
}

declare class UnrealEditorSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): UnrealEditorSubsystem;
	static Find(Outer: UObject, ResourceName: string): UnrealEditorSubsystem;
	static GetDefaultObject(): UnrealEditorSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnrealEditorSubsystem;
	SetLevelViewportCameraInfo(CameraLocation: Vector,CameraRotation: Rotator): void;
	GetLevelViewportCameraInfo(CameraLocation?: Vector,CameraRotation?: Rotator): {CameraLocation: Vector, CameraRotation: Rotator, $: boolean};
	GetGameWorld(): World;
	GetEditorWorld(): World;
	static C(Other: UObject | any): UnrealEditorSubsystem;
}

declare class UnrealEdTypes extends UObject { 
	static Load(ResourceName: string): UnrealEdTypes;
	static Find(Outer: UObject, ResourceName: string): UnrealEdTypes;
	static GetDefaultObject(): UnrealEdTypes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnrealEdTypes;
	static C(Other: UObject | any): UnrealEdTypes;
}

declare class UnrealPakCommandlet extends Commandlet { 
	static Load(ResourceName: string): UnrealPakCommandlet;
	static Find(Outer: UObject, ResourceName: string): UnrealPakCommandlet;
	static GetDefaultObject(): UnrealPakCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnrealPakCommandlet;
	static C(Other: UObject | any): UnrealPakCommandlet;
}

declare class UpdateGameProjectCommandlet extends Commandlet { 
	static Load(ResourceName: string): UpdateGameProjectCommandlet;
	static Find(Outer: UObject, ResourceName: string): UpdateGameProjectCommandlet;
	static GetDefaultObject(): UpdateGameProjectCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UpdateGameProjectCommandlet;
	static C(Other: UObject | any): UpdateGameProjectCommandlet;
}

declare class StructVariableDescription { 
	VarName: string;
	VarGuid: Guid;
	FriendlyName: string;
	DefaultValue: string;
	Category: string;
	SubCategory: string;
	SubCategoryObject: UObject;
	PinValueType: EdGraphTerminalType;
	ContainerType: EPinContainerType;
	bIsArray: boolean;
	bIsSet: boolean;
	bIsMap: boolean;
	bInvalidMember: boolean;
	bDontEditOnInstance: boolean;
	bEnableSaveGame: boolean;
	bEnableMultiLineText: boolean;
	bEnable3dWidget: boolean;
	CurrentDefaultValue: string;
	Tooltip: string;
	clone() : StructVariableDescription;
	static C(Other: UObject | any): StructVariableDescription;
}

declare class UserDefinedStructEditorData extends UObject { 
	UniqueNameId: number;
	VariablesDescriptions: StructVariableDescription[];
	Tooltip: string;
	static Load(ResourceName: string): UserDefinedStructEditorData;
	static Find(Outer: UObject, ResourceName: string): UserDefinedStructEditorData;
	static GetDefaultObject(): UserDefinedStructEditorData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserDefinedStructEditorData;
	static C(Other: UObject | any): UserDefinedStructEditorData;
}

declare class VectorFieldExporter extends Exporter { 
	static Load(ResourceName: string): VectorFieldExporter;
	static Find(Outer: UObject, ResourceName: string): VectorFieldExporter;
	static GetDefaultObject(): VectorFieldExporter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldExporter;
	static C(Other: UObject | any): VectorFieldExporter;
}

declare class ViewportToolBarContext extends UObject { 
	static Load(ResourceName: string): ViewportToolBarContext;
	static Find(Outer: UObject, ResourceName: string): ViewportToolBarContext;
	static GetDefaultObject(): ViewportToolBarContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportToolBarContext;
	static C(Other: UObject | any): ViewportToolBarContext;
}

declare class VolumeTextureFactory extends Factory { 
	InitialTexture: Texture2D;
	static Load(ResourceName: string): VolumeTextureFactory;
	static Find(Outer: UObject, ResourceName: string): VolumeTextureFactory;
	static GetDefaultObject(): VolumeTextureFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeTextureFactory;
	static C(Other: UObject | any): VolumeTextureFactory;
}

declare class VolumeTextureThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	MaterialInstance: MaterialInstanceConstant;
	static Load(ResourceName: string): VolumeTextureThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): VolumeTextureThumbnailRenderer;
	static GetDefaultObject(): VolumeTextureThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeTextureThumbnailRenderer;
	static C(Other: UObject | any): VolumeTextureThumbnailRenderer;
}

declare class VolumetricBuilder extends EditorBrushBuilder { 
	Z: number;
	Radius: number;
	NumSheets: number;
	GroupName: string;
	static Load(ResourceName: string): VolumetricBuilder;
	static Find(Outer: UObject, ResourceName: string): VolumetricBuilder;
	static GetDefaultObject(): VolumetricBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumetricBuilder;
	static C(Other: UObject | any): VolumetricBuilder;
}

declare class WorldFactory extends Factory { 
	static Load(ResourceName: string): WorldFactory;
	static Find(Outer: UObject, ResourceName: string): WorldFactory;
	static GetDefaultObject(): WorldFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldFactory;
	static C(Other: UObject | any): WorldFactory;
}

declare class ActorPlacementFolder { 
	Path: string;
	RootObjectPtr: UObject;
	ActorFolderGuid: Guid;
	clone() : ActorPlacementFolder;
	static C(Other: UObject | any): ActorPlacementFolder;
}

declare class WorldFolders extends UObject { 
	CurrentFolder: ActorPlacementFolder;
	static Load(ResourceName: string): WorldFolders;
	static Find(Outer: UObject, ResourceName: string): WorldFolders;
	static GetDefaultObject(): WorldFolders;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldFolders;
	static C(Other: UObject | any): WorldFolders;
}

declare class WorldPartitionBuilder extends UObject { 
	static Load(ResourceName: string): WorldPartitionBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionBuilder;
	static GetDefaultObject(): WorldPartitionBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionBuilder;
	static C(Other: UObject | any): WorldPartitionBuilder;
}

declare class WorldPartitionBuilderCommandlet extends Commandlet { 
	static Load(ResourceName: string): WorldPartitionBuilderCommandlet;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionBuilderCommandlet;
	static GetDefaultObject(): WorldPartitionBuilderCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionBuilderCommandlet;
	static C(Other: UObject | any): WorldPartitionBuilderCommandlet;
}

declare class WorldPartitionBuildNavigationOptions extends UObject { 
	bVerbose: boolean;
	bCleanPackages: boolean;
	static Load(ResourceName: string): WorldPartitionBuildNavigationOptions;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionBuildNavigationOptions;
	static GetDefaultObject(): WorldPartitionBuildNavigationOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionBuildNavigationOptions;
	static C(Other: UObject | any): WorldPartitionBuildNavigationOptions;
}

declare class HLODLayerActorMapping { 
	ActorClass: Class;
	HLODLayer: string;
	clone() : HLODLayerActorMapping;
	static C(Other: UObject | any): HLODLayerActorMapping;
}

declare class WorldPartitionConvertCommandlet extends Commandlet { 
	EditorHashClass: UnrealEngineClass;
	RuntimeHashClass: UnrealEngineClass;
	ExcludedLevels: string[];
	bConvertActorsNotReferencedByLevelScript: boolean;
	WorldOrigin: Vector;
	WorldExtent: Vector;
	HLODLayerAssetsPath: string;
	DefaultHLODLayerName: string;
	DefaultHLODLayerAsset: string;
	FoliageTypePath: string;
	HLODLayersForActorClasses: HLODLayerActorMapping[];
	HLODLayers: Map<string, HLODLayer>;
	LandscapeGridSize: number;
	DataLayerAssetFolder: string;
	DataLayerFactory: DataLayerFactory;
	static Load(ResourceName: string): WorldPartitionConvertCommandlet;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionConvertCommandlet;
	static GetDefaultObject(): WorldPartitionConvertCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionConvertCommandlet;
	static C(Other: UObject | any): WorldPartitionConvertCommandlet;
}

declare class DeprecatedDataLayerInstance extends DataLayerInstance { 
	Label: string;
	DeprecatedDataLayerFName: string;
	DataLayerType: EDataLayerType;
	DebugColor: Color;
	static Load(ResourceName: string): DeprecatedDataLayerInstance;
	static Find(Outer: UObject, ResourceName: string): DeprecatedDataLayerInstance;
	static GetDefaultObject(): DeprecatedDataLayerInstance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeprecatedDataLayerInstance;
	static C(Other: UObject | any): DeprecatedDataLayerInstance;
}

declare class DataLayerInstanceWithAsset extends DataLayerInstance { 
	DataLayerAsset: DataLayerAsset;
	static Load(ResourceName: string): DataLayerInstanceWithAsset;
	static Find(Outer: UObject, ResourceName: string): DataLayerInstanceWithAsset;
	static GetDefaultObject(): DataLayerInstanceWithAsset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataLayerInstanceWithAsset;
	static C(Other: UObject | any): DataLayerInstanceWithAsset;
}

declare class DataLayerConversionInfo extends UObject { 
	DataLayerToConvert: DeprecatedDataLayerInstance;
	DataLayerAsset: DataLayerAsset;
	DataLayerInstance: DataLayerInstanceWithAsset;
	PreviousConversionsInfo: DataLayerConversionInfo[];
	CurrentConvertingInfo: DataLayerConversionInfo;
	static Load(ResourceName: string): DataLayerConversionInfo;
	static Find(Outer: UObject, ResourceName: string): DataLayerConversionInfo;
	static GetDefaultObject(): DataLayerConversionInfo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataLayerConversionInfo;
	static C(Other: UObject | any): DataLayerConversionInfo;
}

declare class DataLayerToAssetCommandletContext extends UObject { 
	DataLayerConversionInfo: DataLayerConversionInfo[];
	ConvertingDataLayerInfo: DataLayerConversionInfo[];
	static Load(ResourceName: string): DataLayerToAssetCommandletContext;
	static Find(Outer: UObject, ResourceName: string): DataLayerToAssetCommandletContext;
	static GetDefaultObject(): DataLayerToAssetCommandletContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataLayerToAssetCommandletContext;
	static C(Other: UObject | any): DataLayerToAssetCommandletContext;
}

declare class DataLayerToAssetCommandlet extends Commandlet { 
	DestinationFolder: string;
	ConversionFolder: string;
	bPerformSavePackages: boolean;
	bIgnoreActorLoadingErrors: boolean;
	DataLayerFactory: DataLayerFactory;
	MainWorld: World;
	static Load(ResourceName: string): DataLayerToAssetCommandlet;
	static Find(Outer: UObject, ResourceName: string): DataLayerToAssetCommandlet;
	static GetDefaultObject(): DataLayerToAssetCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataLayerToAssetCommandlet;
	static C(Other: UObject | any): DataLayerToAssetCommandlet;
}

declare class WorldPartitionFoliageBuilder extends WorldPartitionBuilder { 
	static Load(ResourceName: string): WorldPartitionFoliageBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionFoliageBuilder;
	static GetDefaultObject(): WorldPartitionFoliageBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionFoliageBuilder;
	static C(Other: UObject | any): WorldPartitionFoliageBuilder;
}

declare class WorldPartitionHLODsBuilder extends WorldPartitionBuilder { 
	static Load(ResourceName: string): WorldPartitionHLODsBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionHLODsBuilder;
	static GetDefaultObject(): WorldPartitionHLODsBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionHLODsBuilder;
	static C(Other: UObject | any): WorldPartitionHLODsBuilder;
}

declare class WorldPartitionLandscapeSplineMeshesBuilder extends WorldPartitionBuilder { 
	static Load(ResourceName: string): WorldPartitionLandscapeSplineMeshesBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionLandscapeSplineMeshesBuilder;
	static GetDefaultObject(): WorldPartitionLandscapeSplineMeshesBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionLandscapeSplineMeshesBuilder;
	static C(Other: UObject | any): WorldPartitionLandscapeSplineMeshesBuilder;
}

declare class WorldPartitionMiniMapBuilder extends WorldPartitionBuilder { 
	static Load(ResourceName: string): WorldPartitionMiniMapBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionMiniMapBuilder;
	static GetDefaultObject(): WorldPartitionMiniMapBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionMiniMapBuilder;
	static C(Other: UObject | any): WorldPartitionMiniMapBuilder;
}

declare class WorldPartitionNavigationDataBuilder extends WorldPartitionBuilder { 
	static Load(ResourceName: string): WorldPartitionNavigationDataBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionNavigationDataBuilder;
	static GetDefaultObject(): WorldPartitionNavigationDataBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionNavigationDataBuilder;
	static C(Other: UObject | any): WorldPartitionNavigationDataBuilder;
}

declare class WorldPartitionRenameDuplicateBuilder extends WorldPartitionBuilder { 
	DuplicatedObjects: Map<UObject, UObject>;
	static Load(ResourceName: string): WorldPartitionRenameDuplicateBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionRenameDuplicateBuilder;
	static GetDefaultObject(): WorldPartitionRenameDuplicateBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionRenameDuplicateBuilder;
	static C(Other: UObject | any): WorldPartitionRenameDuplicateBuilder;
}

declare class WorldPartitionResaveActorsBuilder extends WorldPartitionBuilder { 
	ActorClassName: string;
	bReportOnly: boolean;
	bResaveDirtyActorDescsOnly: boolean;
	bSwitchActorPackagingSchemeToReduced: boolean;
	bEnableActorFolders: boolean;
	ActorTags: Set<string>;
	ActorProperties: Map<string, string>;
	static Load(ResourceName: string): WorldPartitionResaveActorsBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionResaveActorsBuilder;
	static GetDefaultObject(): WorldPartitionResaveActorsBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionResaveActorsBuilder;
	static C(Other: UObject | any): WorldPartitionResaveActorsBuilder;
}

declare class WorldPartitionRuntimeVirtualTextureBuilder extends WorldPartitionBuilder { 
	static Load(ResourceName: string): WorldPartitionRuntimeVirtualTextureBuilder;
	static Find(Outer: UObject, ResourceName: string): WorldPartitionRuntimeVirtualTextureBuilder;
	static GetDefaultObject(): WorldPartitionRuntimeVirtualTextureBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldPartitionRuntimeVirtualTextureBuilder;
	static C(Other: UObject | any): WorldPartitionRuntimeVirtualTextureBuilder;
}

declare type EOrthoThumbnailDirection = 'Top' | 'Bottom' | 'Left' | 'Right' | 'Front' | 'Back' | 'EOrthoThumbnailDirection_MAX';
declare var EOrthoThumbnailDirection : { Top:'Top',Bottom:'Bottom',Left:'Left',Right:'Right',Front:'Front',Back:'Back',EOrthoThumbnailDirection_MAX:'EOrthoThumbnailDirection_MAX', };
declare class WorldThumbnailInfo extends SceneThumbnailInfo { 
	CameraMode: ECameraProjectionMode;
	OrthoDirection: EOrthoThumbnailDirection;
	static Load(ResourceName: string): WorldThumbnailInfo;
	static Find(Outer: UObject, ResourceName: string): WorldThumbnailInfo;
	static GetDefaultObject(): WorldThumbnailInfo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldThumbnailInfo;
	static C(Other: UObject | any): WorldThumbnailInfo;
}

declare class WorldThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	GlobalOrbitPitchOffset: number;
	GlobalOrbitYawOffset: number;
	bUseUnlitScene: boolean;
	bAllowWorldThumbnails: boolean;
	static Load(ResourceName: string): WorldThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): WorldThumbnailRenderer;
	static GetDefaultObject(): WorldThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldThumbnailRenderer;
	static C(Other: UObject | any): WorldThumbnailRenderer;
}

declare class WrangleContentCommandlet extends Commandlet { 
	static Load(ResourceName: string): WrangleContentCommandlet;
	static Find(Outer: UObject, ResourceName: string): WrangleContentCommandlet;
	static GetDefaultObject(): WrangleContentCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WrangleContentCommandlet;
	static C(Other: UObject | any): WrangleContentCommandlet;
}

declare class FoliageType_Actor extends FoliageType { 
	ActorClass: UnrealEngineClass;
	bShouldAttachToBaseComponent: boolean;
	bStaticMeshOnly: boolean;
	StaticMeshOnlyComponentClass: UnrealEngineClass;
	static Load(ResourceName: string): FoliageType_Actor;
	static Find(Outer: UObject, ResourceName: string): FoliageType_Actor;
	static GetDefaultObject(): FoliageType_Actor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FoliageType_Actor;
	static C(Other: UObject | any): FoliageType_Actor;
}

declare class PartitionActor extends Actor { 
	GridSize: number;
	static GetDefaultObject(): PartitionActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PartitionActor;
	static C(Other: UObject | any): PartitionActor;
}

declare class ISMComponentInstance { 
	ClientIndex: number;
	InstanceIndex: number;
	InstanceSubIndex: number;
	clone() : ISMComponentInstance;
	static C(Other: UObject | any): ISMComponentInstance;
}

declare class ISMClientInstance { 
	ComponentIndices: number[];
	clone() : ISMClientInstance;
	static C(Other: UObject | any): ISMClientInstance;
}

declare class ISMClientData { 
	Instances: ISMClientInstance[];
	clone() : ISMClientData;
	static C(Other: UObject | any): ISMClientData;
}

declare class ISMComponentData { 
	Instances: ISMComponentInstance[];
	ClientInstances: ISMClientData[];
	Component: InstancedStaticMeshComponent;
	clone() : ISMComponentData;
	static C(Other: UObject | any): ISMComponentData;
}

declare class ISMClientInstanceManagerData { 
	clone() : ISMClientInstanceManagerData;
	static C(Other: UObject | any): ISMClientInstanceManagerData;
}

declare class ISMPartitionActor extends PartitionActor { 
	Clients: Guid[];
	Descriptors: ISMComponentDescriptor[];
	DescriptorComponents: ISMComponentData[];
	ClientInstanceManagers: Map<Guid, ISMClientInstanceManagerData>;
	static GetDefaultObject(): ISMPartitionActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ISMPartitionActor;
	static C(Other: UObject | any): ISMPartitionActor;
}

declare class InstancedFoliageActor extends ISMPartitionActor { 
	static GetDefaultObject(): InstancedFoliageActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InstancedFoliageActor;
	static RemoveAllInstances(WorldContextObject: UObject,InFoliageType: FoliageType): void;
	static AddInstances(WorldContextObject: UObject,InFoliageType: FoliageType,InTransforms: Transform[]): void;
	static C(Other: UObject | any): InstancedFoliageActor;
}

declare class InteractiveFoliageComponent extends StaticMeshComponent { 
	static Load(ResourceName: string): InteractiveFoliageComponent;
	static Find(Outer: UObject, ResourceName: string): InteractiveFoliageComponent;
	static GetDefaultObject(): InteractiveFoliageComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveFoliageComponent;
	static C(Other: UObject | any): InteractiveFoliageComponent;
}

declare class FoliageStatistics extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): FoliageStatistics;
	static Find(Outer: UObject, ResourceName: string): FoliageStatistics;
	static GetDefaultObject(): FoliageStatistics;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FoliageStatistics;
	static FoliageOverlappingSphereCount(WorldContextObject: UObject,StaticMesh: StaticMesh,CenterPosition: Vector,Radius: number): number;
	static FoliageOverlappingBoxTransforms(WorldContextObject: UObject,StaticMesh: StaticMesh,Box: Box,OutTransforms?: Transform[]): {OutTransforms: Transform[]};
	static FoliageOverlappingBoxCount(WorldContextObject: UObject,StaticMesh: StaticMesh,Box: Box): number;
	static C(Other: UObject | any): FoliageStatistics;
}

declare class GrassInstancedStaticMeshComponent extends HierarchicalInstancedStaticMeshComponent { 
	static Load(ResourceName: string): GrassInstancedStaticMeshComponent;
	static Find(Outer: UObject, ResourceName: string): GrassInstancedStaticMeshComponent;
	static GetDefaultObject(): GrassInstancedStaticMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GrassInstancedStaticMeshComponent;
	static C(Other: UObject | any): GrassInstancedStaticMeshComponent;
}

declare type ENavDataGatheringMode = 'Default' | 'Instant' | 'Lazy' | 'ENavDataGatheringMode_MAX';
declare var ENavDataGatheringMode : { Default:'Default',Instant:'Instant',Lazy:'Lazy',ENavDataGatheringMode_MAX:'ENavDataGatheringMode_MAX', };
declare class StaticMeshActor extends Actor { 
	StaticMeshComponent: StaticMeshComponent;
	bStaticMeshReplicateMovement: boolean;
	NavigationGeometryGatheringMode: ENavDataGatheringMode;
	static GetDefaultObject(): StaticMeshActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshActor;
	SetMobility(InMobility: EComponentMobility): void;
	static C(Other: UObject | any): StaticMeshActor;
}

declare class InteractiveFoliageActor extends StaticMeshActor { 
	CapsuleComponent: CapsuleComponent;
	TouchingActorEntryPosition: Vector;
	FoliageVelocity: Vector;
	FoliageForce: Vector;
	FoliagePosition: Vector;
	FoliageDamageImpulseScale: number;
	FoliageTouchImpulseScale: number;
	FoliageStiffness: number;
	FoliageStiffnessQuadratic: number;
	FoliageDamping: number;
	MaxDamageImpulse: number;
	MaxTouchImpulse: number;
	MaxForce: number;
	Mass: number;
	static GetDefaultObject(): InteractiveFoliageActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveFoliageActor;
	CapsuleTouched(OverlappedComp: PrimitiveComponent,Other: Actor,OtherComp: PrimitiveComponent,OtherBodyIndex: number,bFromSweep: boolean,OverlapInfo: HitResult): void;
	static C(Other: UObject | any): InteractiveFoliageActor;
}

declare class ProceduralFoliageBlockingVolume extends Volume { 
	ProceduralFoliageVolume: ProceduralFoliageVolume;
	DensityFalloff: FoliageDensityFalloff;
	static GetDefaultObject(): ProceduralFoliageBlockingVolume;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralFoliageBlockingVolume;
	static C(Other: UObject | any): ProceduralFoliageBlockingVolume;
}

declare class ProceduralFoliageInstance { 
	Rotation: Quat;
	Location: Vector;
	Age: number;
	Normal: Vector;
	Scale: number;
	Type: FoliageType;
	clone() : ProceduralFoliageInstance;
	static C(Other: UObject | any): ProceduralFoliageInstance;
}

declare class ProceduralFoliageTile extends UObject { 
	FoliageSpawner: ProceduralFoliageSpawner;
	InstancesArray: ProceduralFoliageInstance[];
	static Load(ResourceName: string): ProceduralFoliageTile;
	static Find(Outer: UObject, ResourceName: string): ProceduralFoliageTile;
	static GetDefaultObject(): ProceduralFoliageTile;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralFoliageTile;
	static C(Other: UObject | any): ProceduralFoliageTile;
}

declare class ImageWriteBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): ImageWriteBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): ImageWriteBlueprintLibrary;
	static GetDefaultObject(): ImageWriteBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageWriteBlueprintLibrary;
	static ExportToDisk(Texture: Texture,Filename: string,Options: ImageWriteOptions): void;
	static C(Other: UObject | any): ImageWriteBlueprintLibrary;
}

declare class ControlPointMeshComponent extends StaticMeshComponent { 
	bSelected: boolean;
	VirtualTextureMainPassMaxDrawDistance: number;
	static Load(ResourceName: string): ControlPointMeshComponent;
	static Find(Outer: UObject, ResourceName: string): ControlPointMeshComponent;
	static GetDefaultObject(): ControlPointMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlPointMeshComponent;
	static C(Other: UObject | any): ControlPointMeshComponent;
}

declare class LandscapeSplineInterface extends Interface { 
	static Load(ResourceName: string): LandscapeSplineInterface;
	static Find(Outer: UObject, ResourceName: string): LandscapeSplineInterface;
	static GetDefaultObject(): LandscapeSplineInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSplineInterface;
	static C(Other: UObject | any): LandscapeSplineInterface;
}

declare class LandscapeSplineSegmentConnection { 
	ControlPoint: LandscapeSplineControlPoint;
	TangentLen: number;
	SocketName: string;
	clone() : LandscapeSplineSegmentConnection;
	static C(Other: UObject | any): LandscapeSplineSegmentConnection;
}

declare type LandscapeSplineMeshOrientation = 'LSMO_XUp' | 'LSMO_YUp' | 'LSMO_MAX';
declare var LandscapeSplineMeshOrientation : { LSMO_XUp:'LSMO_XUp',LSMO_YUp:'LSMO_YUp',LSMO_MAX:'LSMO_MAX', };
declare class LandscapeSplineMeshEntry { 
	Mesh: StaticMesh;
	MaterialOverrides: MaterialInterface[];
	bCenterH: boolean;
	CenterAdjust: Vector2D;
	bScaleToWidth: boolean;
	Scale: Vector;
	Orientation: LandscapeSplineMeshOrientation;
	ForwardAxis: ESplineMeshAxis;
	UpAxis: ESplineMeshAxis;
	clone() : LandscapeSplineMeshEntry;
	static C(Other: UObject | any): LandscapeSplineMeshEntry;
}

declare class LandscapeSplineInterpPoint { 
	Center: Vector;
	Left: Vector;
	Right: Vector;
	FalloffLeft: Vector;
	FalloffRight: Vector;
	LayerLeft: Vector;
	LayerRight: Vector;
	LayerFalloffLeft: Vector;
	LayerFalloffRight: Vector;
	StartEndFalloff: number;
	clone() : LandscapeSplineInterpPoint;
	static C(Other: UObject | any): LandscapeSplineInterpPoint;
}

declare class LandscapeSplineSegment extends UObject { 
	Connections: LandscapeSplineSegmentConnection;
	LayerName: string;
	bRaiseTerrain: boolean;
	bLowerTerrain: boolean;
	SplineMeshes: LandscapeSplineMeshEntry[];
	bEnableCollision: boolean;
	CollisionProfileName: string;
	bCastShadow: boolean;
	bHiddenInGame: boolean;
	bPlaceSplineMeshesInStreamingLevels: boolean;
	RandomSeed: number;
	LDMaxDrawDistance: number;
	TranslucencySortPriority: number;
	bRenderCustomDepth: boolean;
	CustomDepthStencilWriteMask: ERendererStencilMask;
	CustomDepthStencilValue: number;
	RuntimeVirtualTextures: RuntimeVirtualTexture[];
	VirtualTextureLodBias: number;
	VirtualTextureCullMips: number;
	VirtualTextureMainPassMaxDrawDistance: number;
	VirtualTextureRenderPassType: ERuntimeVirtualTextureMainPassType;
	BodyInstance: BodyInstance;
	bSelected: boolean;
	bNavDirty: boolean;
	SplineInfo: InterpCurveVector;
	Points: LandscapeSplineInterpPoint[];
	Bounds: Box;
	LocalMeshComponents: SplineMeshComponent[];
	ForeignWorlds: World[];
	ModificationKey: Guid;
	static Load(ResourceName: string): LandscapeSplineSegment;
	static Find(Outer: UObject, ResourceName: string): LandscapeSplineSegment;
	static GetDefaultObject(): LandscapeSplineSegment;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSplineSegment;
	static C(Other: UObject | any): LandscapeSplineSegment;
}

declare class LandscapeSplineConnection { 
	Segment: LandscapeSplineSegment;
	End: boolean;
	clone() : LandscapeSplineConnection;
	static C(Other: UObject | any): LandscapeSplineConnection;
}

declare class LandscapeSplineControlPoint extends UObject { 
	Location: Vector;
	Rotation: Rotator;
	Width: number;
	LayerWidthRatio: number;
	SideFalloff: number;
	LeftSideFalloffFactor: number;
	RightSideFalloffFactor: number;
	LeftSideLayerFalloffFactor: number;
	RightSideLayerFalloffFactor: number;
	EndFalloff: number;
	SegmentMeshOffset: number;
	LayerName: string;
	bRaiseTerrain: boolean;
	bLowerTerrain: boolean;
	Mesh: StaticMesh;
	MaterialOverrides: MaterialInterface[];
	MeshScale: Vector;
	bEnableCollision: boolean;
	CollisionProfileName: string;
	bCastShadow: boolean;
	bHiddenInGame: boolean;
	bPlaceSplineMeshesInStreamingLevels: boolean;
	LDMaxDrawDistance: number;
	TranslucencySortPriority: number;
	bRenderCustomDepth: boolean;
	CustomDepthStencilWriteMask: ERendererStencilMask;
	CustomDepthStencilValue: number;
	RuntimeVirtualTextures: RuntimeVirtualTexture[];
	VirtualTextureLodBias: number;
	VirtualTextureCullMips: number;
	VirtualTextureMainPassMaxDrawDistance: number;
	VirtualTextureRenderPassType: ERuntimeVirtualTextureMainPassType;
	BodyInstance: BodyInstance;
	bSelected: boolean;
	bNavDirty: boolean;
	ConnectedSegments: LandscapeSplineConnection[];
	Points: LandscapeSplineInterpPoint[];
	Bounds: Box;
	LocalMeshComponent: ControlPointMeshComponent;
	ForeignWorld: World;
	ModificationKey: Guid;
	static Load(ResourceName: string): LandscapeSplineControlPoint;
	static Find(Outer: UObject, ResourceName: string): LandscapeSplineControlPoint;
	static GetDefaultObject(): LandscapeSplineControlPoint;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSplineControlPoint;
	static C(Other: UObject | any): LandscapeSplineControlPoint;
}

declare class ForeignControlPointData { 
	ModificationKey: Guid;
	MeshComponent: ControlPointMeshComponent;
	Identifier: LandscapeSplineControlPoint;
	clone() : ForeignControlPointData;
	static C(Other: UObject | any): ForeignControlPointData;
}

declare class ForeignSplineSegmentData { 
	ModificationKey: Guid;
	MeshComponents: SplineMeshComponent[];
	Identifier: LandscapeSplineSegment;
	clone() : ForeignSplineSegmentData;
	static C(Other: UObject | any): ForeignSplineSegmentData;
}

declare class ForeignWorldSplineData { 
	ForeignControlPointDataMap: Map<LandscapeSplineControlPoint, ForeignControlPointData>;
	ForeignControlPointData: ForeignControlPointData[];
	ForeignSplineSegmentDataMap: Map<LandscapeSplineSegment, ForeignSplineSegmentData>;
	ForeignSplineSegmentData: ForeignSplineSegmentData[];
	clone() : ForeignWorldSplineData;
	static C(Other: UObject | any): ForeignWorldSplineData;
}

declare class LandscapeSplinesComponent extends PrimitiveComponent { 
	SplineResolution: number;
	SplineColor: Color;
	ControlPointSprite: Texture2D;
	SplineEditorMesh: StaticMesh;
	bShowSplineEditorMesh: boolean;
	ControlPoints: LandscapeSplineControlPoint[];
	Segments: LandscapeSplineSegment[];
	ForeignWorldSplineDataMap: Map<World, ForeignWorldSplineData>;
	CookedForeignMeshComponents: MeshComponent[];
	static Load(ResourceName: string): LandscapeSplinesComponent;
	static Find(Outer: UObject, ResourceName: string): LandscapeSplinesComponent;
	static GetDefaultObject(): LandscapeSplinesComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSplinesComponent;
	GetSplineMeshComponents(): SplineMeshComponent[];
	static C(Other: UObject | any): LandscapeSplinesComponent;
}

declare class LandscapePerLODMaterialOverride { 
	LODIndex: number;
	Material: MaterialInterface;
	clone() : LandscapePerLODMaterialOverride;
	static C(Other: UObject | any): LandscapePerLODMaterialOverride;
}

declare type ELandscapeLODFalloff = 'Linear' | 'SquareRoot' | 'ELandscapeLODFalloff_MAX';
declare var ELandscapeLODFalloff : { Linear:'Linear',SquareRoot:'SquareRoot',ELandscapeLODFalloff_MAX:'ELandscapeLODFalloff_MAX', };
declare type ELandscapeLayerDisplayMode = 'Default' | 'Alphabetical' | 'UserSpecific' | 'ELandscapeLayerDisplayMode_MAX';
declare var ELandscapeLayerDisplayMode : { Default:'Default',Alphabetical:'Alphabetical',UserSpecific:'UserSpecific',ELandscapeLayerDisplayMode_MAX:'ELandscapeLayerDisplayMode_MAX', };
declare class LandscapeProxyMaterialOverride { 
	LODIndex: PerPlatformInt;
	Material: MaterialInterface;
	clone() : LandscapeProxyMaterialOverride;
	static C(Other: UObject | any): LandscapeProxyMaterialOverride;
}

declare class LandscapeComponentMaterialOverride { 
	LODIndex: PerPlatformInt;
	Material: MaterialInterface;
	clone() : LandscapeComponentMaterialOverride;
	static C(Other: UObject | any): LandscapeComponentMaterialOverride;
}

declare type ESplineModulationColorMask = 'Red' | 'Green' | 'Blue' | 'Alpha' | 'ESplineModulationColorMask_MAX';
declare var ESplineModulationColorMask : { Red:'Red',Green:'Green',Blue:'Blue',Alpha:'Alpha',ESplineModulationColorMask_MAX:'ESplineModulationColorMask_MAX', };
declare class LandscapeLayerInfoObject extends UObject { 
	LayerName: string;
	PhysMaterial: PhysicalMaterial;
	Hardness: number;
	MinimumCollisionRelevanceWeight: number;
	bNoWeightBlend: boolean;
	SplineFalloffModulationTexture: Texture2D;
	SplineFalloffModulationColorMask: ESplineModulationColorMask;
	SplineFalloffModulationTiling: number;
	SplineFalloffModulationBias: number;
	SplineFalloffModulationScale: number;
	IsReferencedFromLoadedData: boolean;
	LayerUsageDebugColor: LinearColor;
	static Load(ResourceName: string): LandscapeLayerInfoObject;
	static Find(Outer: UObject, ResourceName: string): LandscapeLayerInfoObject;
	static GetDefaultObject(): LandscapeLayerInfoObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeLayerInfoObject;
	static C(Other: UObject | any): LandscapeLayerInfoObject;
}

declare class LandscapeHeightfieldCollisionComponent extends PrimitiveComponent { 
	ComponentLayerInfos: LandscapeLayerInfoObject[];
	SectionBaseX: number;
	SectionBaseY: number;
	CollisionSizeQuads: number;
	CollisionScale: number;
	SimpleCollisionSizeQuads: number;
	CollisionQuadFlags: number[];
	HeightfieldGuid: Guid;
	CachedLocalBox: Box;
	RenderComponent: LandscapeComponent;
	CollisionHash: number;
	PhysicalMaterialRenderObjects: PhysicalMaterial[];
	CookedPhysicalMaterials: PhysicalMaterial[];
	static Load(ResourceName: string): LandscapeHeightfieldCollisionComponent;
	static Find(Outer: UObject, ResourceName: string): LandscapeHeightfieldCollisionComponent;
	static GetDefaultObject(): LandscapeHeightfieldCollisionComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeHeightfieldCollisionComponent;
	GetRenderComponent(): LandscapeComponent;
	static C(Other: UObject | any): LandscapeHeightfieldCollisionComponent;
}

declare class HeightmapData { 
	Texture: Texture2D;
	clone() : HeightmapData;
	static C(Other: UObject | any): HeightmapData;
}

declare class WeightmapLayerAllocationInfo { 
	LayerInfo: LandscapeLayerInfoObject;
	WeightmapTextureIndex: number;
	WeightmapTextureChannel: number;
	clone() : WeightmapLayerAllocationInfo;
	static C(Other: UObject | any): WeightmapLayerAllocationInfo;
}

declare class LandscapeWeightmapUsage extends UObject { 
	ChannelUsage: LandscapeComponent;
	LayerGuid: Guid;
	static Load(ResourceName: string): LandscapeWeightmapUsage;
	static Find(Outer: UObject, ResourceName: string): LandscapeWeightmapUsage;
	static GetDefaultObject(): LandscapeWeightmapUsage;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeWeightmapUsage;
	static C(Other: UObject | any): LandscapeWeightmapUsage;
}

declare class WeightmapData { 
	Textures: Texture2D[];
	LayerAllocations: WeightmapLayerAllocationInfo[];
	TextureUsages: LandscapeWeightmapUsage[];
	clone() : WeightmapData;
	static C(Other: UObject | any): WeightmapData;
}

declare class LandscapeLayerComponentData { 
	DebugName: string;
	HeightmapData: HeightmapData;
	WeightmapData: WeightmapData;
	clone() : LandscapeLayerComponentData;
	static C(Other: UObject | any): LandscapeLayerComponentData;
}

declare class LandscapeEditToolRenderData { 
	ToolMaterial: MaterialInterface;
	GizmoMaterial: MaterialInterface;
	SelectedType: number;
	DebugChannelR: number;
	DebugChannelG: number;
	DebugChannelB: number;
	DataTexture: Texture2D;
	LayerContributionTexture: Texture2D;
	DirtyTexture: Texture2D;
	clone() : LandscapeEditToolRenderData;
	static C(Other: UObject | any): LandscapeEditToolRenderData;
}

declare class LandscapeComponent extends PrimitiveComponent { 
	SectionBaseX: number;
	SectionBaseY: number;
	ComponentSizeQuads: number;
	SubsectionSizeQuads: number;
	NumSubsections: number;
	OverrideMaterial: MaterialInterface;
	OverrideHoleMaterial: MaterialInterface;
	OverrideMaterials: LandscapeComponentMaterialOverride[];
	MaterialInstance: MaterialInstanceConstant;
	MaterialInstances: MaterialInstanceConstant[];
	MaterialInstancesDynamic: MaterialInstanceDynamic[];
	LODIndexToMaterialIndex: number[];
	XYOffsetmapTexture: Texture2D;
	WeightmapScaleBias: Vector4;
	WeightmapSubsectionOffset: number;
	HeightmapScaleBias: Vector4;
	CachedLocalBox: Box;
	CollisionComponent: LandscapeHeightfieldCollisionComponent;
	bNaniteActive: boolean;
	LightingGuid: Guid;
	LayersData: Map<Guid, LandscapeLayerComponentData>;
	WeightmapTexturesUsage: LandscapeWeightmapUsage[];
	LayerUpdateFlagPerMode: number;
	bPendingCollisionDataUpdate: boolean;
	bPendingLayerCollisionDataUpdate: boolean;
	HeightmapTexture: Texture2D;
	WeightmapLayerAllocations: WeightmapLayerAllocationInfo[];
	WeightmapTextures: Texture2D[];
	PerLODOverrideMaterials: LandscapePerLODMaterialOverride[];
	MapBuildDataId: Guid;
	IrrelevantLights: Guid[];
	CollisionMipLevel: number;
	SimpleCollisionMipLevel: number;
	NegativeZBoundsExtension: number;
	PositiveZBoundsExtension: number;
	StaticLightingResolution: number;
	ForcedLOD: number;
	LODBias: number;
	StateId: Guid;
	BakedTextureMaterialGuid: Guid;
	LastBakedTextureMaterialGuid: Guid;
	GIBakedBaseColorTexture: Texture2D;
	LightingLODBias: number;
	LayerAllowList: LandscapeLayerInfoObject[];
	EditToolRenderData: LandscapeEditToolRenderData;
	MobileDataSourceHash: Guid;
	MaterialPerLOD: Map<MaterialInterface, number>;
	SplineHash: number;
	PhysicalMaterialHash: number;
	LastSavedPhysicalMaterialHash: number;
	MobileMaterialInterface: MaterialInterface;
	MobileMaterialInterfaces: MaterialInterface[];
	MobileWeightmapTextures: Texture2D[];
	MobileCombinationMaterialInstances: MaterialInstanceConstant[];
	MobileCombinationMaterialInstance: MaterialInstanceConstant;
	static Load(ResourceName: string): LandscapeComponent;
	static Find(Outer: UObject, ResourceName: string): LandscapeComponent;
	static GetDefaultObject(): LandscapeComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeComponent;
	SetLODBias(InLODBias: number): void;
	SetForcedLOD(InForcedLOD: number): void;
	GetMaterialInstanceDynamic(InIndex: number): MaterialInstanceDynamic;
	EditorGetPaintLayerWeightByNameAtLocation(InLocation: Vector,InPaintLayerName: string): number;
	EditorGetPaintLayerWeightAtLocation(InLocation: Vector,PaintLayer: LandscapeLayerInfoObject): number;
	static C(Other: UObject | any): LandscapeComponent;
}

declare class LandscapeNaniteComponent extends StaticMeshComponent { 
	ProxyContentId: Guid;
	bEnabled: boolean;
	static Load(ResourceName: string): LandscapeNaniteComponent;
	static Find(Outer: UObject, ResourceName: string): LandscapeNaniteComponent;
	static GetDefaultObject(): LandscapeNaniteComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeNaniteComponent;
	static C(Other: UObject | any): LandscapeNaniteComponent;
}

declare class LandscapeEditorLayerSettings { 
	LayerInfoObj: LandscapeLayerInfoObject;
	ReimportLayerFilePath: string;
	clone() : LandscapeEditorLayerSettings;
	static C(Other: UObject | any): LandscapeEditorLayerSettings;
}

declare type ELandscapeBlendMode = 'LSBM_AdditiveBlend' | 'LSBM_AlphaBlend' | 'LSBM_MAX';
declare var ELandscapeBlendMode : { LSBM_AdditiveBlend:'LSBM_AdditiveBlend',LSBM_AlphaBlend:'LSBM_AlphaBlend',LSBM_MAX:'LSBM_MAX', };
declare class LandscapeBlueprintBrushBase extends Actor { 
	OwningLandscape: Landscape;
	UpdateOnPropertyChange: boolean;
	AffectHeightmap: boolean;
	AffectWeightmap: boolean;
	AffectedWeightmapLayers: string[];
	bIsVisible: boolean;
	static GetDefaultObject(): LandscapeBlueprintBrushBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeBlueprintBrushBase;
	RequestLandscapeUpdate(): void;
	Render(InIsHeightmap: boolean,InCombinedResult: TextureRenderTarget2D,InWeightmapLayerName: string): TextureRenderTarget2D;
	Initialize(InLandscapeTransform: Transform,InLandscapeSize: IntPoint,InLandscapeRenderTargetSize: IntPoint): void;
	GetBlueprintRenderDependencies(OutStreamableAssets?: UObject[]): {OutStreamableAssets: UObject[]};
	static C(Other: UObject | any): LandscapeBlueprintBrushBase;
}

declare class LandscapeLayerBrush { 
	BlueprintBrush: LandscapeBlueprintBrushBase;
	clone() : LandscapeLayerBrush;
	static C(Other: UObject | any): LandscapeLayerBrush;
}

declare class LandscapeLayer { 
	Guid: Guid;
	Name: string;
	bVisible: boolean;
	bLocked: boolean;
	HeightmapAlpha: number;
	WeightmapAlpha: number;
	BlendMode: ELandscapeBlendMode;
	Brushes: LandscapeLayerBrush[];
	WeightmapLayerAllocationBlend: Map<LandscapeLayerInfoObject, boolean>;
	clone() : LandscapeLayer;
	static C(Other: UObject | any): LandscapeLayer;
}

declare class LandscapeInfoLayerSettings { 
	LayerInfoObj: LandscapeLayerInfoObject;
	LayerName: string;
	ThumbnailMIC: MaterialInstanceConstant;
	Owner: LandscapeProxy;
	DebugColorChannel: number;
	bValid: boolean;
	clone() : LandscapeInfoLayerSettings;
	static C(Other: UObject | any): LandscapeInfoLayerSettings;
}

declare class LandscapeStreamingProxy extends LandscapeProxy { 
	LandscapeActor: Landscape;
	static GetDefaultObject(): LandscapeStreamingProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeStreamingProxy;
	static C(Other: UObject | any): LandscapeStreamingProxy;
}

declare type ELandscapeLayerPaintingRestriction = 'None' | 'UseMaxLayers' | 'ExistingOnly' | 'UseComponentAllowList' | 'ELandscapeLayerPaintingRestriction_MAX';
declare var ELandscapeLayerPaintingRestriction : { None:'None',UseMaxLayers:'UseMaxLayers',ExistingOnly:'ExistingOnly',UseComponentAllowList:'UseComponentAllowList',ELandscapeLayerPaintingRestriction_MAX:'ELandscapeLayerPaintingRestriction_MAX', };
declare class LandscapeInfo extends UObject { 
	LandscapeActor: Landscape;
	LandscapeGuid: Guid;
	ComponentSizeQuads: number;
	SubsectionSizeQuads: number;
	ComponentNumSubsections: number;
	DrawScale: Vector;
	Layers: LandscapeInfoLayerSettings[];
	StreamingProxies: LandscapeStreamingProxy[];
	SplineActors: LandscapeSplineInterface[];
	static Load(ResourceName: string): LandscapeInfo;
	static Find(Outer: UObject, ResourceName: string): LandscapeInfo;
	static GetDefaultObject(): LandscapeInfo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeInfo;
	static C(Other: UObject | any): LandscapeInfo;
	GetAlphamapDataToMemory(LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	GetHeightmapDataToMemory(MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	GetLandscapeExtent(MinX?: number,MinY?: number,MaxX?: number,MaxY?: number): {MinX: number, MinY: number, MaxX: number, MaxY: number, $: boolean};
	GetLayerInfoByName(LayerName: string,Owner: LandscapeProxy): LandscapeLayerInfoObject;
	SetAlphamapDataFromMemory(LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: ELandscapeLayerPaintingRestriction): void;
	SetHeightmapDataFromMemory(MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	static GetAlphamapDataToMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	static GetHeightmapDataToMemory(LandscapeInfo: LandscapeInfo,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	static GetLandscapeExtent(LandscapeInfo: LandscapeInfo,MinX?: number,MinY?: number,MaxX?: number,MaxY?: number): {MinX: number, MinY: number, MaxX: number, MaxY: number, $: boolean};
	static GetLayerInfoByName(LandscapeInfo: LandscapeInfo,LayerName: string,Owner: LandscapeProxy): LandscapeLayerInfoObject;
	static SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: ELandscapeLayerPaintingRestriction): void;
	static SetHeightmapDataFromMemory(LandscapeInfo: LandscapeInfo,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
}

declare class Landscape extends LandscapeProxy { 
	bEnableNanite: boolean;
	bAreNewLandscapeActorsSpatiallyLoaded: boolean;
	bIncludeGridSizeInNameForLandscapeActors: boolean;
	bCanHaveLayersContent: boolean;
	bUseGeneratedLandscapeSplineMeshesActors: boolean;
	LandscapeSplinesTargetLayerGuid: Guid;
	bEnableEditorLayersTick: boolean;
	LandscapeLayers: LandscapeLayer[];
	HeightmapRTList: TextureRenderTarget2D[];
	WeightmapRTList: TextureRenderTarget2D[];
	TrackedStreamingInTextures: Texture2D[];
	LandscapeSplinesAffectedComponents: Set<LandscapeComponent>;
	bLandscapeLayersAreInitialized: boolean;
	bLandscapeLayersAreUsingLocalMerge: boolean;
	WasCompilingShaders: boolean;
	LayerContentUpdateModes: number;
	bSplineLayerUpdateRequested: boolean;
	static GetDefaultObject(): Landscape;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Landscape;
	RenderHeightmap(InWorldTransform: Transform,InExtents: Box2D,OutRenderTarget: TextureRenderTarget2D): void;
	static C(Other: UObject | any): Landscape;
	GetLandscapeInfo(bSpawnNewActor: boolean): LandscapeInfo;
	static GetLandscapeInfo(Landscape: Landscape,bSpawnNewActor: boolean): LandscapeInfo;
}

declare class LandscapeProxy extends PartitionActor { 
	SplineComponent: LandscapeSplinesComponent;
	LandscapeGuid: Guid;
	PerLODOverrideMaterials: LandscapePerLODMaterialOverride[];
	PreEditPerLODOverrideMaterials: LandscapePerLODMaterialOverride[];
	LandscapeSectionOffset: IntPoint;
	MaxLODLevel: number;
	LODDistanceFactor: number;
	LODFalloff: ELandscapeLODFalloff;
	ComponentScreenSizeToUseSubSections: number;
	LOD0ScreenSize: number;
	LOD0DistributionSetting: number;
	LODDistributionSetting: number;
	ExportLOD: number;
	TargetDisplayOrderList: string[];
	TargetDisplayOrder: ELandscapeLayerDisplayMode;
	StaticLightingLOD: number;
	DefaultPhysMaterial: PhysicalMaterial;
	StreamingDistanceMultiplier: number;
	LandscapeMaterial: MaterialInterface;
	LandscapeHoleMaterial: MaterialInterface;
	LandscapeMaterialsOverride: LandscapeProxyMaterialOverride[];
	PreEditLandscapeMaterial: MaterialInterface;
	PreEditLandscapeHoleMaterial: MaterialInterface;
	bIsPerformingInteractiveActionOnLandscapeMaterialOverride: boolean;
	RuntimeVirtualTextures: RuntimeVirtualTexture[];
	bSetCreateRuntimeVirtualTextureVolumes: boolean;
	VirtualTextureNumLods: number;
	VirtualTextureLodBias: number;
	VirtualTextureRenderPassType: ERuntimeVirtualTextureMainPassType;
	NegativeZBoundsExtension: number;
	PositiveZBoundsExtension: number;
	LandscapeComponents: LandscapeComponent[];
	CollisionComponents: LandscapeHeightfieldCollisionComponent[];
	FoliageComponents: HierarchicalInstancedStaticMeshComponent[];
	NaniteComponent: LandscapeNaniteComponent;
	bHasLandscapeGrass: boolean;
	StaticLightingResolution: number;
	CastShadow: boolean;
	bCastDynamicShadow: boolean;
	bCastStaticShadow: boolean;
	bCastContactShadow: boolean;
	bCastFarShadow: boolean;
	bCastHiddenShadow: boolean;
	bCastShadowAsTwoSided: boolean;
	bAffectDistanceFieldLighting: boolean;
	LightingChannels: LightingChannels;
	bUseMaterialPositionOffsetInStaticLighting: boolean;
	bRenderCustomDepth: boolean;
	CustomDepthStencilWriteMask: ERendererStencilMask;
	CustomDepthStencilValue: number;
	LDMaxDrawDistance: number;
	bIsMovingToLevel: boolean;
	LightmassSettings: LightmassPrimitiveSettings;
	CollisionMipLevel: number;
	SimpleCollisionMipLevel: number;
	CollisionThickness: number;
	BodyInstance: BodyInstance;
	bGenerateOverlapEvents: boolean;
	bBakeMaterialPositionOffsetIntoCollision: boolean;
	EditorCachedLayerInfos: LandscapeLayerInfoObject[];
	ReimportHeightmapFilePath: string;
	ReimportDestinationLayerGuid: Guid;
	EditorLayerSettings: LandscapeEditorLayerSettings[];
	WeightmapUsageMap: Map<Texture2D, LandscapeWeightmapUsage>;
	ComponentSizeQuads: number;
	SubsectionSizeQuads: number;
	NumSubsections: number;
	bUsedForNavigation: boolean;
	bFillCollisionUnderLandscapeForNavmesh: boolean;
	bUseDynamicMaterialInstance: boolean;
	NavigationGeometryGatheringMode: ENavDataGatheringMode;
	MaxPaintedLayersPerComponent: number;
	bUseLandscapeForCullingInvisibleHLODVertices: boolean;
	bHasLayersContent: boolean;
	static GetDefaultObject(): LandscapeProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeProxy;
	SetVirtualTextureRenderPassType(InType: ERuntimeVirtualTextureMainPassType): void;
	SetLandscapeMaterialVectorParameterValue(ParameterName: string,Value: LinearColor): void;
	SetLandscapeMaterialTextureParameterValue(ParameterName: string,Value: Texture): void;
	SetLandscapeMaterialScalarParameterValue(ParameterName: string,Value: number): void;
	LandscapeImportWeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D,InLayerName: string): boolean;
	LandscapeImportHeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D,InImportHeightFromRGChannel: boolean): boolean;
	LandscapeExportWeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D,InLayerName: string): boolean;
	LandscapeExportHeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D,InExportHeightIntoRGChannel: boolean,InExportLandscapeProxies: boolean): boolean;
	GetLandscapeActor(): Landscape;
	EditorSetLandscapeMaterial(NewLandscapeMaterial: MaterialInterface): void;
	EditorApplySpline(InSplineComponent: SplineComponent,StartWidth: number,EndWidth: number,StartSideFalloff: number,EndSideFalloff: number,StartRoll: number,EndRoll: number,NumSubdivisions: number,bRaiseHeights: boolean,bLowerHeights: boolean,PaintLayer: LandscapeLayerInfoObject,EditLayerName: string): void;
	ChangeLODDistanceFactor(InLODDistanceFactor: number): void;
	ChangeComponentScreenSizeToUseSubSections(InComponentScreenSizeToUseSubSections: number): void;
	static C(Other: UObject | any): LandscapeProxy;
}

declare class LandscapeLODStreamingProxy_DEPRECATED extends StreamableRenderAsset { 
	static Load(ResourceName: string): LandscapeLODStreamingProxy_DEPRECATED;
	static Find(Outer: UObject, ResourceName: string): LandscapeLODStreamingProxy_DEPRECATED;
	static GetDefaultObject(): LandscapeLODStreamingProxy_DEPRECATED;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeLODStreamingProxy_DEPRECATED;
	static C(Other: UObject | any): LandscapeLODStreamingProxy_DEPRECATED;
}

declare class LandscapeGizmoActor extends Actor { 
	Width: number;
	Height: number;
	LengthZ: number;
	MarginZ: number;
	MinRelativeZ: number;
	RelativeScaleZ: number;
	TargetLandscapeInfo: LandscapeInfo;
	SpriteComponent: BillboardComponent;
	static GetDefaultObject(): LandscapeGizmoActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeGizmoActor;
	static C(Other: UObject | any): LandscapeGizmoActor;
}

declare type ELandscapeGizmoType = 'LGT_None' | 'LGT_Height' | 'LGT_Weight' | 'LGT_MAX';
declare var ELandscapeGizmoType : { LGT_None:'LGT_None',LGT_Height:'LGT_Height',LGT_Weight:'LGT_Weight',LGT_MAX:'LGT_MAX', };
declare class LandscapeGizmoActiveActor extends LandscapeGizmoActor { 
	DataType: ELandscapeGizmoType;
	GizmoTexture: Texture2D;
	TextureScale: Vector2D;
	SampledHeight: Vector[];
	SampledNormal: Vector[];
	SampleSizeX: number;
	SampleSizeY: number;
	CachedWidth: number;
	CachedHeight: number;
	CachedScaleXY: number;
	FrustumVerts: Vector;
	GizmoMaterial: Material;
	GizmoDataMaterial: MaterialInstance;
	GizmoMeshMaterial: Material;
	LayerInfos: LandscapeLayerInfoObject[];
	bSnapToLandscapeGrid: boolean;
	UnsnappedRotation: Rotator;
	static GetDefaultObject(): LandscapeGizmoActiveActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeGizmoActiveActor;
	static C(Other: UObject | any): LandscapeGizmoActiveActor;
}

declare class LandscapeGizmoRenderComponent extends PrimitiveComponent { 
	static Load(ResourceName: string): LandscapeGizmoRenderComponent;
	static Find(Outer: UObject, ResourceName: string): LandscapeGizmoRenderComponent;
	static GetDefaultObject(): LandscapeGizmoRenderComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeGizmoRenderComponent;
	static C(Other: UObject | any): LandscapeGizmoRenderComponent;
}

declare type EGrassScaling = 'Uniform' | 'Free' | 'LockXY' | 'EGrassScaling_MAX';
declare var EGrassScaling : { Uniform:'Uniform',Free:'Free',LockXY:'LockXY',EGrassScaling_MAX:'EGrassScaling_MAX', };
declare class GrassVariety { 
	GrassMesh: StaticMesh;
	OverrideMaterials: MaterialInterface[];
	GrassDensity: PerPlatformFloat;
	bUseGrid: boolean;
	PlacementJitter: number;
	StartCullDistance: PerPlatformInt;
	EndCullDistance: PerPlatformInt;
	MinLOD: number;
	Scaling: EGrassScaling;
	ScaleX: FloatInterval;
	ScaleY: FloatInterval;
	ScaleZ: FloatInterval;
	RandomRotation: boolean;
	AlignToSurface: boolean;
	bUseLandscapeLightmap: boolean;
	LightingChannels: LightingChannels;
	bReceivesDecals: boolean;
	bCastDynamicShadow: boolean;
	bCastContactShadow: boolean;
	bKeepInstanceBufferCPUCopy: boolean;
	InstanceWorldPositionOffsetDisableDistance: number;
	clone() : GrassVariety;
	static C(Other: UObject | any): GrassVariety;
}

declare class LandscapeGrassType extends UObject { 
	GrassVarieties: GrassVariety[];
	bEnableDensityScaling: boolean;
	GrassMesh: StaticMesh;
	GrassDensity: number;
	PlacementJitter: number;
	StartCullDistance: number;
	EndCullDistance: number;
	RandomRotation: boolean;
	AlignToSurface: boolean;
	static Load(ResourceName: string): LandscapeGrassType;
	static Find(Outer: UObject, ResourceName: string): LandscapeGrassType;
	static GetDefaultObject(): LandscapeGrassType;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeGrassType;
	static C(Other: UObject | any): LandscapeGrassType;
}

declare class LandscapeMaterialTextureStreamingInfo { 
	TextureName: string;
	TexelFactor: number;
	clone() : LandscapeMaterialTextureStreamingInfo;
	static C(Other: UObject | any): LandscapeMaterialTextureStreamingInfo;
}

declare class LandscapeMaterialInstanceConstant extends MaterialInstanceConstant { 
	TextureStreamingInfo: LandscapeMaterialTextureStreamingInfo[];
	bIsLayerThumbnail: boolean;
	bDisableTessellation: boolean;
	bMobile: boolean;
	bEditorToolUsage: boolean;
	static Load(ResourceName: string): LandscapeMaterialInstanceConstant;
	static Find(Outer: UObject, ResourceName: string): LandscapeMaterialInstanceConstant;
	static GetDefaultObject(): LandscapeMaterialInstanceConstant;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeMaterialInstanceConstant;
	static C(Other: UObject | any): LandscapeMaterialInstanceConstant;
}

declare class LandscapeMeshCollisionComponent extends LandscapeHeightfieldCollisionComponent { 
	MeshGuid: Guid;
	static Load(ResourceName: string): LandscapeMeshCollisionComponent;
	static Find(Outer: UObject, ResourceName: string): LandscapeMeshCollisionComponent;
	static GetDefaultObject(): LandscapeMeshCollisionComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeMeshCollisionComponent;
	static C(Other: UObject | any): LandscapeMeshCollisionComponent;
}

declare class LandscapeMeshProxyComponent extends StaticMeshComponent { 
	LandscapeGuid: Guid;
	ProxyComponentBases: IntPoint[];
	ProxyLOD: number;
	static Load(ResourceName: string): LandscapeMeshProxyComponent;
	static Find(Outer: UObject, ResourceName: string): LandscapeMeshProxyComponent;
	static GetDefaultObject(): LandscapeMeshProxyComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeMeshProxyComponent;
	static C(Other: UObject | any): LandscapeMeshProxyComponent;
}

declare class LandscapeMeshProxyActor extends Actor { 
	LandscapeMeshProxyComponent: LandscapeMeshProxyComponent;
	static GetDefaultObject(): LandscapeMeshProxyActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeMeshProxyActor;
	static C(Other: UObject | any): LandscapeMeshProxyActor;
}

declare class LandscapeSettings extends DeveloperSettings { 
	MaxNumberOfLayers: number;
	SideResolutionLimit: number;
	DefaultLandscapeMaterial: MaterialInterface;
	DefaultLayerInfoObject: LandscapeLayerInfoObject;
	bRestrictiveMode: boolean;
	static Load(ResourceName: string): LandscapeSettings;
	static Find(Outer: UObject, ResourceName: string): LandscapeSettings;
	static GetDefaultObject(): LandscapeSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSettings;
	static C(Other: UObject | any): LandscapeSettings;
}

declare class MaterialExpressionCustomOutput extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionCustomOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCustomOutput;
	static GetDefaultObject(): MaterialExpressionCustomOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCustomOutput;
	static C(Other: UObject | any): MaterialExpressionCustomOutput;
}

declare class GrassInput { 
	Name: string;
	GrassType: LandscapeGrassType;
	Input: ExpressionInput;
	clone() : GrassInput;
	static C(Other: UObject | any): GrassInput;
}

declare class MaterialExpressionLandscapeGrassOutput extends MaterialExpressionCustomOutput { 
	GrassTypes: GrassInput[];
	static Load(ResourceName: string): MaterialExpressionLandscapeGrassOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapeGrassOutput;
	static GetDefaultObject(): MaterialExpressionLandscapeGrassOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapeGrassOutput;
	static C(Other: UObject | any): MaterialExpressionLandscapeGrassOutput;
}

declare type ELandscapeLayerBlendType = 'LB_WeightBlend' | 'LB_AlphaBlend' | 'LB_HeightBlend' | 'LB_MAX';
declare var ELandscapeLayerBlendType : { LB_WeightBlend:'LB_WeightBlend',LB_AlphaBlend:'LB_AlphaBlend',LB_HeightBlend:'LB_HeightBlend',LB_MAX:'LB_MAX', };
declare class LayerBlendInput { 
	LayerName: string;
	BlendType: ELandscapeLayerBlendType;
	LayerInput: ExpressionInput;
	HeightInput: ExpressionInput;
	PreviewWeight: number;
	ConstLayerInput: Vector;
	ConstHeightInput: number;
	clone() : LayerBlendInput;
	static C(Other: UObject | any): LayerBlendInput;
}

declare class MaterialExpressionLandscapeLayerBlend extends MaterialExpression { 
	Layers: LayerBlendInput[];
	static Load(ResourceName: string): MaterialExpressionLandscapeLayerBlend;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapeLayerBlend;
	static GetDefaultObject(): MaterialExpressionLandscapeLayerBlend;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapeLayerBlend;
	static C(Other: UObject | any): MaterialExpressionLandscapeLayerBlend;
}

declare type ETerrainCoordMappingType = 'TCMT_Auto' | 'TCMT_XY' | 'TCMT_XZ' | 'TCMT_YZ' | 'TCMT_MAX';
declare var ETerrainCoordMappingType : { TCMT_Auto:'TCMT_Auto',TCMT_XY:'TCMT_XY',TCMT_XZ:'TCMT_XZ',TCMT_YZ:'TCMT_YZ',TCMT_MAX:'TCMT_MAX', };
declare type ELandscapeCustomizedCoordType = 'LCCT_None' | 'LCCT_CustomUV0' | 'LCCT_CustomUV1' | 'LCCT_CustomUV2' | 'LCCT_WeightMapUV' | 'LCCT_MAX';
declare var ELandscapeCustomizedCoordType : { LCCT_None:'LCCT_None',LCCT_CustomUV0:'LCCT_CustomUV0',LCCT_CustomUV1:'LCCT_CustomUV1',LCCT_CustomUV2:'LCCT_CustomUV2',LCCT_WeightMapUV:'LCCT_WeightMapUV',LCCT_MAX:'LCCT_MAX', };
declare class MaterialExpressionLandscapeLayerCoords extends MaterialExpression { 
	MappingType: ETerrainCoordMappingType;
	CustomUVType: ELandscapeCustomizedCoordType;
	MappingScale: number;
	MappingRotation: number;
	MappingPanU: number;
	MappingPanV: number;
	static Load(ResourceName: string): MaterialExpressionLandscapeLayerCoords;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapeLayerCoords;
	static GetDefaultObject(): MaterialExpressionLandscapeLayerCoords;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapeLayerCoords;
	static C(Other: UObject | any): MaterialExpressionLandscapeLayerCoords;
}

declare class ControlPointMeshActor extends Actor { 
	ControlPointMeshComponent: ControlPointMeshComponent;
	static GetDefaultObject(): ControlPointMeshActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlPointMeshActor;
	static C(Other: UObject | any): ControlPointMeshActor;
}

declare class LandscapeHLODBuilder extends HLODBuilder { 
	static Load(ResourceName: string): LandscapeHLODBuilder;
	static Find(Outer: UObject, ResourceName: string): LandscapeHLODBuilder;
	static GetDefaultObject(): LandscapeHLODBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeHLODBuilder;
	static C(Other: UObject | any): LandscapeHLODBuilder;
}

declare class LandscapeInfoMap extends UObject { 
	static Load(ResourceName: string): LandscapeInfoMap;
	static Find(Outer: UObject, ResourceName: string): LandscapeInfoMap;
	static GetDefaultObject(): LandscapeInfoMap;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeInfoMap;
	static C(Other: UObject | any): LandscapeInfoMap;
}

declare class LandscapeSplineActor extends Actor { 
	LandscapeGuid: Guid;
	LandscapeActor: Landscape;
	static GetDefaultObject(): LandscapeSplineActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSplineActor;
	static C(Other: UObject | any): LandscapeSplineActor;
}

declare class LandscapeSplineMeshesActor extends PartitionActor { 
	StaticMeshComponents: StaticMeshComponent[];
	GridGuid: Guid;
	static GetDefaultObject(): LandscapeSplineMeshesActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSplineMeshesActor;
	static C(Other: UObject | any): LandscapeSplineMeshesActor;
}

declare class LandscapeSubsystem extends TickableWorldSubsystem { 
	static Load(ResourceName: string): LandscapeSubsystem;
	static Find(Outer: UObject, ResourceName: string): LandscapeSubsystem;
	static GetDefaultObject(): LandscapeSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSubsystem;
	static C(Other: UObject | any): LandscapeSubsystem;
}

declare class MaterialExpressionLandscapeLayerSample extends MaterialExpression { 
	ParameterName: string;
	PreviewWeight: number;
	static Load(ResourceName: string): MaterialExpressionLandscapeLayerSample;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapeLayerSample;
	static GetDefaultObject(): MaterialExpressionLandscapeLayerSample;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapeLayerSample;
	static C(Other: UObject | any): MaterialExpressionLandscapeLayerSample;
}

declare class MaterialExpressionLandscapeLayerSwitch extends MaterialExpression { 
	LayerUsed: ExpressionInput;
	LayerNotUsed: ExpressionInput;
	ParameterName: string;
	PreviewUsed: boolean;
	static Load(ResourceName: string): MaterialExpressionLandscapeLayerSwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapeLayerSwitch;
	static GetDefaultObject(): MaterialExpressionLandscapeLayerSwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapeLayerSwitch;
	static C(Other: UObject | any): MaterialExpressionLandscapeLayerSwitch;
}

declare class MaterialExpressionLandscapeLayerWeight extends MaterialExpression { 
	Base: ExpressionInput;
	Layer: ExpressionInput;
	ParameterName: string;
	PreviewWeight: number;
	ConstBase: Vector;
	static Load(ResourceName: string): MaterialExpressionLandscapeLayerWeight;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapeLayerWeight;
	static GetDefaultObject(): MaterialExpressionLandscapeLayerWeight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapeLayerWeight;
	static C(Other: UObject | any): MaterialExpressionLandscapeLayerWeight;
}

declare class PhysicalMaterialInput { 
	PhysicalMaterial: PhysicalMaterial;
	Input: ExpressionInput;
	clone() : PhysicalMaterialInput;
	static C(Other: UObject | any): PhysicalMaterialInput;
}

declare class MaterialExpressionLandscapePhysicalMaterialOutput extends MaterialExpressionCustomOutput { 
	Inputs: PhysicalMaterialInput[];
	static Load(ResourceName: string): MaterialExpressionLandscapePhysicalMaterialOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapePhysicalMaterialOutput;
	static GetDefaultObject(): MaterialExpressionLandscapePhysicalMaterialOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapePhysicalMaterialOutput;
	static C(Other: UObject | any): MaterialExpressionLandscapePhysicalMaterialOutput;
}

declare class MaterialExpressionLandscapeVisibilityMask extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionLandscapeVisibilityMask;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLandscapeVisibilityMask;
	static GetDefaultObject(): MaterialExpressionLandscapeVisibilityMask;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLandscapeVisibilityMask;
	static C(Other: UObject | any): MaterialExpressionLandscapeVisibilityMask;
}

declare class ActiveSoundUpdateInterface extends Interface { 
	static Load(ResourceName: string): ActiveSoundUpdateInterface;
	static Find(Outer: UObject, ResourceName: string): ActiveSoundUpdateInterface;
	static GetDefaultObject(): ActiveSoundUpdateInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActiveSoundUpdateInterface;
	static C(Other: UObject | any): ActiveSoundUpdateInterface;
}

declare class ActorChannel extends Channel { 
	Actor: Actor;
	CreateSubObjects: UObject[];
	static Load(ResourceName: string): ActorChannel;
	static Find(Outer: UObject, ResourceName: string): ActorChannel;
	static GetDefaultObject(): ActorChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorChannel;
	static C(Other: UObject | any): ActorChannel;
}

declare class ActorReplicationBridge extends ObjectReplicationBridge { 
	static Load(ResourceName: string): ActorReplicationBridge;
	static Find(Outer: UObject, ResourceName: string): ActorReplicationBridge;
	static GetDefaultObject(): ActorReplicationBridge;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorReplicationBridge;
	static C(Other: UObject | any): ActorReplicationBridge;
}

declare class AnimationAssetExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AnimationAssetExtensions;
	static Find(Outer: UObject, ResourceName: string): AnimationAssetExtensions;
	static GetDefaultObject(): AnimationAssetExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationAssetExtensions;
	static GetSkeleton(InAsset: AnimationAsset): Skeleton;
	static C(Other: UObject | any): AnimationAssetExtensions;
}

declare class AnimBlueprintClassSubsystem_PropertyAccess extends UObject { 
	static Load(ResourceName: string): AnimBlueprintClassSubsystem_PropertyAccess;
	static Find(Outer: UObject, ResourceName: string): AnimBlueprintClassSubsystem_PropertyAccess;
	static GetDefaultObject(): AnimBlueprintClassSubsystem_PropertyAccess;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintClassSubsystem_PropertyAccess;
	static C(Other: UObject | any): AnimBlueprintClassSubsystem_PropertyAccess;
}

declare class AnimationDataModelNotifiesExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AnimationDataModelNotifiesExtensions;
	static Find(Outer: UObject, ResourceName: string): AnimationDataModelNotifiesExtensions;
	static GetDefaultObject(): AnimationDataModelNotifiesExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationDataModelNotifiesExtensions;
	static GetPayload(Payload: AnimDataModelNotifPayload): EmptyPayload;
	static CopyPayload(Payload: AnimDataModelNotifPayload,ExpectedStruct: ScriptStruct,OutPayload?: EmptyPayload): {OutPayload: EmptyPayload};
	static C(Other: UObject | any): AnimationDataModelNotifiesExtensions;
}

declare class RawAnimSequenceTrackExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): RawAnimSequenceTrackExtensions;
	static Find(Outer: UObject, ResourceName: string): RawAnimSequenceTrackExtensions;
	static GetDefaultObject(): RawAnimSequenceTrackExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RawAnimSequenceTrackExtensions;
	static GetScaleKeys(Track: RawAnimSequenceTrack): Vector[];
	static GetRotationalKeys(Track: RawAnimSequenceTrack): Quat[];
	static GetPositionalKeys(Track: RawAnimSequenceTrack): Vector[];
	static C(Other: UObject | any): RawAnimSequenceTrackExtensions;
}

declare type EPrimaryAssetCookRule = 'Unknown' | 'NeverCook' | 'DevelopmentCook' | 'DevelopmentAlwaysCook' | 'AlwaysCook' | 'EPrimaryAssetCookRule_MAX';
declare var EPrimaryAssetCookRule : { Unknown:'Unknown',NeverCook:'NeverCook',DevelopmentCook:'DevelopmentCook',DevelopmentAlwaysCook:'DevelopmentAlwaysCook',AlwaysCook:'AlwaysCook',EPrimaryAssetCookRule_MAX:'EPrimaryAssetCookRule_MAX', };
declare class PrimaryAssetRules { 
	Priority: number;
	ChunkID: number;
	bApplyRecursively: boolean;
	CookRule: EPrimaryAssetCookRule;
	clone() : PrimaryAssetRules;
	static C(Other: UObject | any): PrimaryAssetRules;
}

declare class PrimaryAssetTypeInfo { 
	PrimaryAssetType: string;
	AssetBaseClass: Class;
	AssetBaseClassLoaded: UnrealEngineClass;
	bHasBlueprintClasses: boolean;
	bIsEditorOnly: boolean;
	Directories: DirectoryPath[];
	SpecificAssets: SoftObjectPath[];
	Rules: PrimaryAssetRules;
	AssetScanPaths: string[];
	bIsDynamicAsset: boolean;
	NumberOfAssets: number;
	clone() : PrimaryAssetTypeInfo;
	static C(Other: UObject | any): PrimaryAssetTypeInfo;
}

declare class PrimaryAssetRulesOverride { 
	PrimaryAssetId: PrimaryAssetId;
	Rules: PrimaryAssetRules;
	clone() : PrimaryAssetRulesOverride;
	static C(Other: UObject | any): PrimaryAssetRulesOverride;
}

declare class PrimaryAssetRulesCustomOverride { 
	PrimaryAssetType: PrimaryAssetType;
	FilterDirectory: DirectoryPath;
	FilterString: string;
	Rules: PrimaryAssetRules;
	clone() : PrimaryAssetRulesCustomOverride;
	static C(Other: UObject | any): PrimaryAssetRulesCustomOverride;
}

declare class AssetManagerRedirect { 
	Old: string;
	New: string;
	clone() : AssetManagerRedirect;
	static C(Other: UObject | any): AssetManagerRedirect;
}

declare class AssetManagerSettings extends DeveloperSettings { 
	PrimaryAssetTypesToScan: PrimaryAssetTypeInfo[];
	DirectoriesToExclude: DirectoryPath[];
	PrimaryAssetRules: PrimaryAssetRulesOverride[];
	CustomPrimaryAssetRules: PrimaryAssetRulesCustomOverride[];
	bOnlyCookProductionAssets: boolean;
	bShouldManagerDetermineTypeAndName: boolean;
	bShouldGuessTypeAndNameInEditor: boolean;
	bShouldAcquireMissingChunksOnLoad: boolean;
	bShouldWarnAboutInvalidAssets: boolean;
	PrimaryAssetIdRedirects: AssetManagerRedirect[];
	PrimaryAssetTypeRedirects: AssetManagerRedirect[];
	AssetPathRedirects: AssetManagerRedirect[];
	MetaDataTagsForAssetRegistry: Set<string>;
	static Load(ResourceName: string): AssetManagerSettings;
	static Find(Outer: UObject, ResourceName: string): AssetManagerSettings;
	static GetDefaultObject(): AssetManagerSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetManagerSettings;
	static C(Other: UObject | any): AssetManagerSettings;
}

declare class AudioPanelWidgetInterface extends Interface { 
	static Load(ResourceName: string): AudioPanelWidgetInterface;
	static Find(Outer: UObject, ResourceName: string): AudioPanelWidgetInterface;
	static GetDefaultObject(): AudioPanelWidgetInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioPanelWidgetInterface;
	GetIconBrushName(): string;
	GetEditorName(): string;
	static C(Other: UObject | any): AudioPanelWidgetInterface;
}

declare class BookMark2D extends BookmarkBase { 
	Zoom2D: number;
	Location: IntPoint;
	static Load(ResourceName: string): BookMark2D;
	static Find(Outer: UObject, ResourceName: string): BookMark2D;
	static GetDefaultObject(): BookMark2D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BookMark2D;
	static C(Other: UObject | any): BookMark2D;
}

declare type EReflectionSourceType = 'CapturedScene' | 'SpecifiedCubemap' | 'EReflectionSourceType_MAX';
declare var EReflectionSourceType : { CapturedScene:'CapturedScene',SpecifiedCubemap:'SpecifiedCubemap',EReflectionSourceType_MAX:'EReflectionSourceType_MAX', };
declare class ReflectionCaptureComponent extends SceneComponent { 
	CaptureOffsetComponent: BillboardComponent;
	ReflectionSourceType: EReflectionSourceType;
	Cubemap: TextureCube;
	SourceCubemapAngle: number;
	Brightness: number;
	CaptureOffset: Vector;
	MapBuildDataId: Guid;
	static Load(ResourceName: string): ReflectionCaptureComponent;
	static Find(Outer: UObject, ResourceName: string): ReflectionCaptureComponent;
	static GetDefaultObject(): ReflectionCaptureComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReflectionCaptureComponent;
	static C(Other: UObject | any): ReflectionCaptureComponent;
}

declare class ReflectionCapture extends Actor { 
	CaptureComponent: ReflectionCaptureComponent;
	SpriteComponent: BillboardComponent;
	CaptureOffsetComponent: BillboardComponent;
	static GetDefaultObject(): ReflectionCapture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReflectionCapture;
	static C(Other: UObject | any): ReflectionCapture;
}

declare class BoxReflectionCapture extends ReflectionCapture { 
	static GetDefaultObject(): BoxReflectionCapture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoxReflectionCapture;
	static C(Other: UObject | any): BoxReflectionCapture;
}

declare class BoxComponent extends ShapeComponent { 
	BoxExtent: Vector;
	LineThickness: number;
	static Load(ResourceName: string): BoxComponent;
	static Find(Outer: UObject, ResourceName: string): BoxComponent;
	static GetDefaultObject(): BoxComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoxComponent;
	SetLineThickness(Thickness: number): void;
	SetBoxExtent(InBoxExtent: Vector,bUpdateOverlaps: boolean): void;
	GetUnscaledBoxExtent(): Vector;
	GetScaledBoxExtent(): Vector;
	static C(Other: UObject | any): BoxComponent;
}

declare class BoxReflectionCaptureComponent extends ReflectionCaptureComponent { 
	BoxTransitionDistance: number;
	PreviewInfluenceBox: BoxComponent;
	PreviewCaptureBox: BoxComponent;
	static Load(ResourceName: string): BoxReflectionCaptureComponent;
	static Find(Outer: UObject, ResourceName: string): BoxReflectionCaptureComponent;
	static GetDefaultObject(): BoxReflectionCaptureComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoxReflectionCaptureComponent;
	static C(Other: UObject | any): BoxReflectionCaptureComponent;
}

declare class BuiltInAttributesExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): BuiltInAttributesExtensions;
	static Find(Outer: UObject, ResourceName: string): BuiltInAttributesExtensions;
	static GetDefaultObject(): BuiltInAttributesExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BuiltInAttributesExtensions;
	static AddTransformAttribute(AnimSequenceBase: AnimSequenceBase,AttributeName: string,BoneName: string,Keys: number[],Values: Transform[]): boolean;
	static C(Other: UObject | any): BuiltInAttributesExtensions;
}

declare type EPlatformInterfaceDataType = 'PIDT_None' | 'PIDT_Int' | 'PIDT_Float' | 'PIDT_String' | 'PIDT_Object' | 'PIDT_Custom' | 'PIDT_MAX';
declare var EPlatformInterfaceDataType : { PIDT_None:'PIDT_None',PIDT_Int:'PIDT_Int',PIDT_Float:'PIDT_Float',PIDT_String:'PIDT_String',PIDT_Object:'PIDT_Object',PIDT_Custom:'PIDT_Custom',PIDT_MAX:'PIDT_MAX', };
declare class PlatformInterfaceData { 
	DataName: string;
	Type: EPlatformInterfaceDataType;
	IntValue: number;
	FloatValue: number;
	StringValue: string;
	ObjectValue: UObject;
	clone() : PlatformInterfaceData;
	static C(Other: UObject | any): PlatformInterfaceData;
}

declare class PlatformInterfaceDelegateResult { 
	bSuccessful: boolean;
	Data: PlatformInterfaceData;
	clone() : PlatformInterfaceDelegateResult;
	static C(Other: UObject | any): PlatformInterfaceDelegateResult;
}

declare class DelegateArray { 
	Delegates: UnrealEngineDelegate<(Result: PlatformInterfaceDelegateResult) => void>[];
	clone() : DelegateArray;
	static C(Other: UObject | any): DelegateArray;
}

declare class PlatformInterfaceBase extends UObject { 
	AllDelegates: DelegateArray[];
	static Load(ResourceName: string): PlatformInterfaceBase;
	static Find(Outer: UObject, ResourceName: string): PlatformInterfaceBase;
	static GetDefaultObject(): PlatformInterfaceBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlatformInterfaceBase;
	static C(Other: UObject | any): PlatformInterfaceBase;
}

declare class CloudStorageBase extends PlatformInterfaceBase { 
	LocalCloudFiles: string[];
	bSuppressDelegateCalls: boolean;
	static Load(ResourceName: string): CloudStorageBase;
	static Find(Outer: UObject, ResourceName: string): CloudStorageBase;
	static GetDefaultObject(): CloudStorageBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CloudStorageBase;
	static C(Other: UObject | any): CloudStorageBase;
}

declare class ControlChannel extends Channel { 
	static Load(ResourceName: string): ControlChannel;
	static Find(Outer: UObject, ResourceName: string): ControlChannel;
	static GetDefaultObject(): ControlChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlChannel;
	static C(Other: UObject | any): ControlChannel;
}

declare class DataStreamChannel extends Channel { 
	static Load(ResourceName: string): DataStreamChannel;
	static Find(Outer: UObject, ResourceName: string): DataStreamChannel;
	static GetDefaultObject(): DataStreamChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataStreamChannel;
	static C(Other: UObject | any): DataStreamChannel;
}

declare class DemoNetConnection extends NetConnection { 
	static Load(ResourceName: string): DemoNetConnection;
	static Find(Outer: UObject, ResourceName: string): DemoNetConnection;
	static GetDefaultObject(): DemoNetConnection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DemoNetConnection;
	static C(Other: UObject | any): DemoNetConnection;
}

declare class PendingNetGame extends UObject { 
	NetDriver: NetDriver;
	DemoNetDriver: DemoNetDriver;
	static Load(ResourceName: string): PendingNetGame;
	static Find(Outer: UObject, ResourceName: string): PendingNetGame;
	static GetDefaultObject(): PendingNetGame;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PendingNetGame;
	static C(Other: UObject | any): PendingNetGame;
}

declare class DemoPendingNetGame extends PendingNetGame { 
	static Load(ResourceName: string): DemoPendingNetGame;
	static Find(Outer: UObject, ResourceName: string): DemoPendingNetGame;
	static GetDefaultObject(): DemoPendingNetGame;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DemoPendingNetGame;
	static C(Other: UObject | any): DemoPendingNetGame;
}

declare class DeviceProfileFragment extends UObject { 
	CVars: string[];
	static Load(ResourceName: string): DeviceProfileFragment;
	static Find(Outer: UObject, ResourceName: string): DeviceProfileFragment;
	static GetDefaultObject(): DeviceProfileFragment;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeviceProfileFragment;
	static C(Other: UObject | any): DeviceProfileFragment;
}

declare class Light extends Actor { 
	LightComponent: LightComponent;
	bEnabled: boolean;
	static GetDefaultObject(): Light;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Light;
	ToggleEnabled(): void;
	SetLightFunctionScale(NewLightFunctionScale: Vector): void;
	SetLightFunctionMaterial(NewLightFunctionMaterial: MaterialInterface): void;
	SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: number): void;
	SetLightColor(NewLightColor: LinearColor): void;
	SetEnabled(bSetEnabled: boolean): void;
	SetCastShadows(bNewValue: boolean): void;
	SetBrightness(NewBrightness: number): void;
	SetAffectTranslucentLighting(bNewValue: boolean): void;
	OnRep_bEnabled(): void;
	IsEnabled(): boolean;
	GetLightColor(): LinearColor;
	GetBrightness(): number;
	static C(Other: UObject | any): Light;
}

declare class LightmassDirectionalLightSettings extends LightmassLightSettings { 
	LightSourceAngle: number;
	clone() : LightmassDirectionalLightSettings;
	static C(Other: UObject | any): LightmassDirectionalLightSettings;
}

declare class DirectionalLightComponent extends LightComponent { 
	ShadowCascadeBiasDistribution: number;
	bEnableLightShaftOcclusion: boolean;
	OcclusionMaskDarkness: number;
	OcclusionDepthRange: number;
	LightShaftOverrideDirection: Vector;
	WholeSceneDynamicShadowRadius: number;
	DynamicShadowDistanceMovableLight: number;
	DynamicShadowDistanceStationaryLight: number;
	DynamicShadowCascades: number;
	CascadeDistributionExponent: number;
	CascadeTransitionFraction: number;
	ShadowDistanceFadeoutFraction: number;
	bUseInsetShadowsForMovableObjects: boolean;
	FarShadowCascadeCount: number;
	FarShadowDistance: number;
	DistanceFieldShadowDistance: number;
	ForwardShadingPriority: number;
	LightSourceAngle: number;
	LightSourceSoftAngle: number;
	ShadowSourceAngleFactor: number;
	TraceDistance: number;
	bUsedAsAtmosphereSunLight: boolean;
	bAtmosphereSunLight: boolean;
	AtmosphereSunLightIndex: number;
	AtmosphereSunDiskColorScale: LinearColor;
	bPerPixelAtmosphereTransmittance: boolean;
	bCastShadowsOnClouds: boolean;
	bCastShadowsOnAtmosphere: boolean;
	bCastCloudShadows: boolean;
	CloudShadowStrength: number;
	CloudShadowOnAtmosphereStrength: number;
	CloudShadowOnSurfaceStrength: number;
	CloudShadowDepthBias: number;
	CloudShadowExtent: number;
	CloudShadowMapResolutionScale: number;
	CloudShadowRaySampleCountScale: number;
	CloudScatteredLuminanceScale: LinearColor;
	LightmassSettings: LightmassDirectionalLightSettings;
	bCastModulatedShadows: boolean;
	ModulatedShadowColor: Color;
	ShadowAmount: number;
	static Load(ResourceName: string): DirectionalLightComponent;
	static Find(Outer: UObject, ResourceName: string): DirectionalLightComponent;
	static GetDefaultObject(): DirectionalLightComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DirectionalLightComponent;
	SetShadowSourceAngleFactor(NewValue: number): void;
	SetShadowDistanceFadeoutFraction(NewValue: number): void;
	SetShadowCascadeBiasDistribution(NewValue: number): void;
	SetShadowAmount(NewValue: number): void;
	SetOcclusionMaskDarkness(NewValue: number): void;
	SetOcclusionDepthRange(NewValue: number): void;
	SetLightSourceSoftAngle(NewValue: number): void;
	SetLightSourceAngle(NewValue: number): void;
	SetLightShaftOverrideDirection(NewValue: Vector): void;
	SetEnableLightShaftOcclusion(bNewValue: boolean): void;
	SetDynamicShadowDistanceStationaryLight(NewValue: number): void;
	SetDynamicShadowDistanceMovableLight(NewValue: number): void;
	SetDynamicShadowCascades(NewValue: number): void;
	SetCascadeTransitionFraction(NewValue: number): void;
	SetCascadeDistributionExponent(NewValue: number): void;
	SetAtmosphereSunLightIndex(NewValue: number): void;
	SetAtmosphereSunLight(bNewValue: boolean): void;
	static C(Other: UObject | any): DirectionalLightComponent;
}

declare class DirectionalLight extends Light { 
	ArrowComponent: ArrowComponent;
	DirectionalLightComponent: DirectionalLightComponent;
	static GetDefaultObject(): DirectionalLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DirectionalLight;
	static C(Other: UObject | any): DirectionalLight;
}

declare class DistributionFloatConstant extends DistributionFloat { 
	Constant: number;
	static Load(ResourceName: string): DistributionFloatConstant;
	static Find(Outer: UObject, ResourceName: string): DistributionFloatConstant;
	static GetDefaultObject(): DistributionFloatConstant;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionFloatConstant;
	static C(Other: UObject | any): DistributionFloatConstant;
}

declare class DistributionFloatConstantCurve extends DistributionFloat { 
	ConstantCurve: InterpCurveFloat;
	static Load(ResourceName: string): DistributionFloatConstantCurve;
	static Find(Outer: UObject, ResourceName: string): DistributionFloatConstantCurve;
	static GetDefaultObject(): DistributionFloatConstantCurve;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionFloatConstantCurve;
	static C(Other: UObject | any): DistributionFloatConstantCurve;
}

declare type DistributionParamMode = 'DPM_Normal' | 'DPM_Abs' | 'DPM_Direct' | 'DPM_MAX';
declare var DistributionParamMode : { DPM_Normal:'DPM_Normal',DPM_Abs:'DPM_Abs',DPM_Direct:'DPM_Direct',DPM_MAX:'DPM_MAX', };
declare class DistributionFloatParameterBase extends DistributionFloatConstant { 
	ParameterName: string;
	MinInput: number;
	MaxInput: number;
	MinOutput: number;
	MaxOutput: number;
	ParamMode: DistributionParamMode;
	static Load(ResourceName: string): DistributionFloatParameterBase;
	static Find(Outer: UObject, ResourceName: string): DistributionFloatParameterBase;
	static GetDefaultObject(): DistributionFloatParameterBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionFloatParameterBase;
	static C(Other: UObject | any): DistributionFloatParameterBase;
}

declare class DistributionFloatParticleParameter extends DistributionFloatParameterBase { 
	static Load(ResourceName: string): DistributionFloatParticleParameter;
	static Find(Outer: UObject, ResourceName: string): DistributionFloatParticleParameter;
	static GetDefaultObject(): DistributionFloatParticleParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionFloatParticleParameter;
	static C(Other: UObject | any): DistributionFloatParticleParameter;
}

declare class DistributionFloatUniform extends DistributionFloat { 
	Min: number;
	Max: number;
	static Load(ResourceName: string): DistributionFloatUniform;
	static Find(Outer: UObject, ResourceName: string): DistributionFloatUniform;
	static GetDefaultObject(): DistributionFloatUniform;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionFloatUniform;
	static C(Other: UObject | any): DistributionFloatUniform;
}

declare class InterpCurvePointVector2D { 
	InVal: number;
	OutVal: Vector2D;
	ArriveTangent: Vector2D;
	LeaveTangent: Vector2D;
	InterpMode: EInterpCurveMode;
	clone() : InterpCurvePointVector2D;
	static C(Other: UObject | any): InterpCurvePointVector2D;
}

declare class InterpCurveVector2D { 
	Points: InterpCurvePointVector2D[];
	bIsLooped: boolean;
	LoopKeyOffset: number;
	clone() : InterpCurveVector2D;
	static C(Other: UObject | any): InterpCurveVector2D;
}

declare class DistributionFloatUniformCurve extends DistributionFloat { 
	ConstantCurve: InterpCurveVector2D;
	static Load(ResourceName: string): DistributionFloatUniformCurve;
	static Find(Outer: UObject, ResourceName: string): DistributionFloatUniformCurve;
	static GetDefaultObject(): DistributionFloatUniformCurve;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionFloatUniformCurve;
	static C(Other: UObject | any): DistributionFloatUniformCurve;
}

declare type EDistributionVectorLockFlags = 'EDVLF_None' | 'EDVLF_XY' | 'EDVLF_XZ' | 'EDVLF_YZ' | 'EDVLF_XYZ' | 'EDVLF_MAX';
declare var EDistributionVectorLockFlags : { EDVLF_None:'EDVLF_None',EDVLF_XY:'EDVLF_XY',EDVLF_XZ:'EDVLF_XZ',EDVLF_YZ:'EDVLF_YZ',EDVLF_XYZ:'EDVLF_XYZ',EDVLF_MAX:'EDVLF_MAX', };
declare class DistributionVectorConstant extends DistributionVector { 
	Constant: Vector;
	bLockAxes: boolean;
	LockedAxes: EDistributionVectorLockFlags;
	static Load(ResourceName: string): DistributionVectorConstant;
	static Find(Outer: UObject, ResourceName: string): DistributionVectorConstant;
	static GetDefaultObject(): DistributionVectorConstant;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionVectorConstant;
	static C(Other: UObject | any): DistributionVectorConstant;
}

declare class DistributionVectorConstantCurve extends DistributionVector { 
	ConstantCurve: InterpCurveVector;
	bLockAxes: boolean;
	LockedAxes: EDistributionVectorLockFlags;
	static Load(ResourceName: string): DistributionVectorConstantCurve;
	static Find(Outer: UObject, ResourceName: string): DistributionVectorConstantCurve;
	static GetDefaultObject(): DistributionVectorConstantCurve;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionVectorConstantCurve;
	static C(Other: UObject | any): DistributionVectorConstantCurve;
}

declare class DistributionVectorParameterBase extends DistributionVectorConstant { 
	ParameterName: string;
	MinInput: Vector;
	MaxInput: Vector;
	MinOutput: Vector;
	MaxOutput: Vector;
	ParamModes: DistributionParamMode;
	static Load(ResourceName: string): DistributionVectorParameterBase;
	static Find(Outer: UObject, ResourceName: string): DistributionVectorParameterBase;
	static GetDefaultObject(): DistributionVectorParameterBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionVectorParameterBase;
	static C(Other: UObject | any): DistributionVectorParameterBase;
}

declare class DistributionVectorParticleParameter extends DistributionVectorParameterBase { 
	static Load(ResourceName: string): DistributionVectorParticleParameter;
	static Find(Outer: UObject, ResourceName: string): DistributionVectorParticleParameter;
	static GetDefaultObject(): DistributionVectorParticleParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionVectorParticleParameter;
	static C(Other: UObject | any): DistributionVectorParticleParameter;
}

declare type EDistributionVectorMirrorFlags = 'EDVMF_Same' | 'EDVMF_Different' | 'EDVMF_Mirror' | 'EDVMF_MAX';
declare var EDistributionVectorMirrorFlags : { EDVMF_Same:'EDVMF_Same',EDVMF_Different:'EDVMF_Different',EDVMF_Mirror:'EDVMF_Mirror',EDVMF_MAX:'EDVMF_MAX', };
declare class DistributionVectorUniform extends DistributionVector { 
	Max: Vector;
	Min: Vector;
	bLockAxes: boolean;
	LockedAxes: EDistributionVectorLockFlags;
	MirrorFlags: EDistributionVectorMirrorFlags;
	bUseExtremes: boolean;
	static Load(ResourceName: string): DistributionVectorUniform;
	static Find(Outer: UObject, ResourceName: string): DistributionVectorUniform;
	static GetDefaultObject(): DistributionVectorUniform;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionVectorUniform;
	static C(Other: UObject | any): DistributionVectorUniform;
}

declare class TwoVectors { 
	v1: Vector;
	v2: Vector;
	clone() : TwoVectors;
	static C(Other: UObject | any): TwoVectors;
}

declare class InterpCurvePointTwoVectors { 
	InVal: number;
	OutVal: TwoVectors;
	ArriveTangent: TwoVectors;
	LeaveTangent: TwoVectors;
	InterpMode: EInterpCurveMode;
	clone() : InterpCurvePointTwoVectors;
	static C(Other: UObject | any): InterpCurvePointTwoVectors;
}

declare class InterpCurveTwoVectors { 
	Points: InterpCurvePointTwoVectors[];
	bIsLooped: boolean;
	LoopKeyOffset: number;
	clone() : InterpCurveTwoVectors;
	static C(Other: UObject | any): InterpCurveTwoVectors;
}

declare class DistributionVectorUniformCurve extends DistributionVector { 
	ConstantCurve: InterpCurveTwoVectors;
	bLockAxes1: boolean;
	bLockAxes2: boolean;
	LockedAxes: EDistributionVectorLockFlags;
	MirrorFlags: EDistributionVectorMirrorFlags;
	bUseExtremes: boolean;
	static Load(ResourceName: string): DistributionVectorUniformCurve;
	static Find(Outer: UObject, ResourceName: string): DistributionVectorUniformCurve;
	static GetDefaultObject(): DistributionVectorUniformCurve;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DistributionVectorUniformCurve;
	static C(Other: UObject | any): DistributionVectorUniformCurve;
}

declare class GraphNodeContextMenuContext extends UObject { 
	Blueprint: Blueprint;
	Graph: EdGraph;
	UNode: EdGraphNode;
	bIsDebugging: boolean;
	static Load(ResourceName: string): GraphNodeContextMenuContext;
	static Find(Outer: UObject, ResourceName: string): GraphNodeContextMenuContext;
	static GetDefaultObject(): GraphNodeContextMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GraphNodeContextMenuContext;
	static C(Other: UObject | any): GraphNodeContextMenuContext;
}

declare class ViewModeUtils extends UObject { 
	static Load(ResourceName: string): ViewModeUtils;
	static Find(Outer: UObject, ResourceName: string): ViewModeUtils;
	static GetDefaultObject(): ViewModeUtils;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewModeUtils;
	static C(Other: UObject | any): ViewModeUtils;
}

declare class EngineBaseTypes extends UObject { 
	static Load(ResourceName: string): EngineBaseTypes;
	static Find(Outer: UObject, ResourceName: string): EngineBaseTypes;
	static GetDefaultObject(): EngineBaseTypes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EngineBaseTypes;
	static C(Other: UObject | any): EngineBaseTypes;
}

declare class EngineTypes extends UObject { 
	static Load(ResourceName: string): EngineTypes;
	static Find(Outer: UObject, ResourceName: string): EngineTypes;
	static GetDefaultObject(): EngineTypes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EngineTypes;
	static C(Other: UObject | any): EngineTypes;
}

declare class ExponentialHeightFogData { 
	FogDensity: number;
	FogHeightFalloff: number;
	FogHeightOffset: number;
	clone() : ExponentialHeightFogData;
	static C(Other: UObject | any): ExponentialHeightFogData;
}

declare class ExponentialHeightFogComponent extends SceneComponent { 
	FogDensity: number;
	FogHeightFalloff: number;
	SecondFogData: ExponentialHeightFogData;
	FogInscatteringColor: LinearColor;
	FogInscatteringLuminance: LinearColor;
	SkyAtmosphereAmbientContributionColorScale: LinearColor;
	InscatteringColorCubemap: TextureCube;
	InscatteringColorCubemapAngle: number;
	InscatteringTextureTint: LinearColor;
	FullyDirectionalInscatteringColorDistance: number;
	NonDirectionalInscatteringColorDistance: number;
	DirectionalInscatteringExponent: number;
	DirectionalInscatteringStartDistance: number;
	DirectionalInscatteringColor: LinearColor;
	DirectionalInscatteringLuminance: LinearColor;
	FogMaxOpacity: number;
	StartDistance: number;
	FogCutoffDistance: number;
	bEnableVolumetricFog: boolean;
	VolumetricFogScatteringDistribution: number;
	VolumetricFogAlbedo: Color;
	VolumetricFogEmissive: LinearColor;
	VolumetricFogExtinctionScale: number;
	VolumetricFogDistance: number;
	VolumetricFogStartDistance: number;
	VolumetricFogNearFadeInDistance: number;
	VolumetricFogStaticLightingScatteringIntensity: number;
	bOverrideLightColorsWithFogInscatteringColors: boolean;
	static Load(ResourceName: string): ExponentialHeightFogComponent;
	static Find(Outer: UObject, ResourceName: string): ExponentialHeightFogComponent;
	static GetDefaultObject(): ExponentialHeightFogComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExponentialHeightFogComponent;
	SetVolumetricFogScatteringDistribution(NewValue: number): void;
	SetVolumetricFogExtinctionScale(NewValue: number): void;
	SetVolumetricFogEmissive(NewValue: LinearColor): void;
	SetVolumetricFogDistance(NewValue: number): void;
	SetVolumetricFogAlbedo(NewValue: Color): void;
	SetVolumetricFog(bNewValue: boolean): void;
	SetStartDistance(Value: number): void;
	SetSecondFogHeightOffset(Value: number): void;
	SetSecondFogHeightFalloff(Value: number): void;
	SetSecondFogDensity(Value: number): void;
	SetSecondFogData(NewValue: ExponentialHeightFogData): void;
	SetNonDirectionalInscatteringColorDistance(Value: number): void;
	SetInscatteringTextureTint(Value: LinearColor): void;
	SetInscatteringColorCubemapAngle(Value: number): void;
	SetInscatteringColorCubemap(Value: TextureCube): void;
	SetFullyDirectionalInscatteringColorDistance(Value: number): void;
	SetFogMaxOpacity(Value: number): void;
	SetFogInscatteringColor(Value: LinearColor): void;
	SetFogHeightFalloff(Value: number): void;
	SetFogDensity(Value: number): void;
	SetFogCutoffDistance(Value: number): void;
	SetDirectionalInscatteringStartDistance(Value: number): void;
	SetDirectionalInscatteringExponent(Value: number): void;
	SetDirectionalInscatteringColor(Value: LinearColor): void;
	static C(Other: UObject | any): ExponentialHeightFogComponent;
}

declare class ExponentialHeightFog extends Info { 
	Component: ExponentialHeightFogComponent;
	bEnabled: boolean;
	static GetDefaultObject(): ExponentialHeightFog;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExponentialHeightFog;
	OnRep_bEnabled(): void;
	static C(Other: UObject | any): ExponentialHeightFog;
}

declare class SpotLightComponent extends PointLightComponent { 
	InnerConeAngle: number;
	OuterConeAngle: number;
	static Load(ResourceName: string): SpotLightComponent;
	static Find(Outer: UObject, ResourceName: string): SpotLightComponent;
	static GetDefaultObject(): SpotLightComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpotLightComponent;
	SetOuterConeAngle(NewOuterConeAngle: number): void;
	SetInnerConeAngle(NewInnerConeAngle: number): void;
	static C(Other: UObject | any): SpotLightComponent;
}

declare class SpotLight extends Light { 
	SpotLightComponent: SpotLightComponent;
	ArrowComponent: ArrowComponent;
	static GetDefaultObject(): SpotLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpotLight;
	SetOuterConeAngle(NewOuterConeAngle: number): void;
	SetInnerConeAngle(NewInnerConeAngle: number): void;
	static C(Other: UObject | any): SpotLight;
}

declare class GeneratedMeshAreaLight extends SpotLight { 
	static GetDefaultObject(): GeneratedMeshAreaLight;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeneratedMeshAreaLight;
	static C(Other: UObject | any): GeneratedMeshAreaLight;
}

declare class HapticFeedbackEffect_Buffer extends HapticFeedbackEffect_Base { 
	Amplitudes: number[];
	SampleRate: number;
	static Load(ResourceName: string): HapticFeedbackEffect_Buffer;
	static Find(Outer: UObject, ResourceName: string): HapticFeedbackEffect_Buffer;
	static GetDefaultObject(): HapticFeedbackEffect_Buffer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HapticFeedbackEffect_Buffer;
	static C(Other: UObject | any): HapticFeedbackEffect_Buffer;
}

declare class HapticFeedbackDetails_Curve { 
	Frequency: RuntimeFloatCurve;
	Amplitude: RuntimeFloatCurve;
	clone() : HapticFeedbackDetails_Curve;
	static C(Other: UObject | any): HapticFeedbackDetails_Curve;
}

declare class HapticFeedbackEffect_Curve extends HapticFeedbackEffect_Base { 
	HapticDetails: HapticFeedbackDetails_Curve;
	static Load(ResourceName: string): HapticFeedbackEffect_Curve;
	static Find(Outer: UObject, ResourceName: string): HapticFeedbackEffect_Curve;
	static GetDefaultObject(): HapticFeedbackEffect_Curve;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HapticFeedbackEffect_Curve;
	static C(Other: UObject | any): HapticFeedbackEffect_Curve;
}

declare class HapticFeedbackEffect_SoundWave extends HapticFeedbackEffect_Base { 
	SoundWave: SoundWave;
	bUseStereo: boolean;
	static Load(ResourceName: string): HapticFeedbackEffect_SoundWave;
	static Find(Outer: UObject, ResourceName: string): HapticFeedbackEffect_SoundWave;
	static GetDefaultObject(): HapticFeedbackEffect_SoundWave;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HapticFeedbackEffect_SoundWave;
	static C(Other: UObject | any): HapticFeedbackEffect_SoundWave;
}

declare class InGameAdManager extends PlatformInterfaceBase { 
	bShouldPauseWhileAdOpen: boolean;
	ClickedBannerDelegates: UnrealEngineDelegate<() => void>[];
	ClosedAdDelegates: UnrealEngineDelegate<() => void>[];
	static Load(ResourceName: string): InGameAdManager;
	static Find(Outer: UObject, ResourceName: string): InGameAdManager;
	static GetDefaultObject(): InGameAdManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InGameAdManager;
	static C(Other: UObject | any): InGameAdManager;
}

declare class Interface_ActorSubobject extends Interface { 
	static Load(ResourceName: string): Interface_ActorSubobject;
	static Find(Outer: UObject, ResourceName: string): Interface_ActorSubobject;
	static GetDefaultObject(): Interface_ActorSubobject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Interface_ActorSubobject;
	static C(Other: UObject | any): Interface_ActorSubobject;
}

declare class Interface_AssetUserData extends Interface { 
	static Load(ResourceName: string): Interface_AssetUserData;
	static Find(Outer: UObject, ResourceName: string): Interface_AssetUserData;
	static GetDefaultObject(): Interface_AssetUserData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Interface_AssetUserData;
	static C(Other: UObject | any): Interface_AssetUserData;
}

declare class Interface_AsyncCompilation extends Interface { 
	static Load(ResourceName: string): Interface_AsyncCompilation;
	static Find(Outer: UObject, ResourceName: string): Interface_AsyncCompilation;
	static GetDefaultObject(): Interface_AsyncCompilation;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Interface_AsyncCompilation;
	static C(Other: UObject | any): Interface_AsyncCompilation;
}

declare class BoneReferenceSkeletonProvider extends Interface { 
	static Load(ResourceName: string): BoneReferenceSkeletonProvider;
	static Find(Outer: UObject, ResourceName: string): BoneReferenceSkeletonProvider;
	static GetDefaultObject(): BoneReferenceSkeletonProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoneReferenceSkeletonProvider;
	static C(Other: UObject | any): BoneReferenceSkeletonProvider;
}

declare class Interface_CollisionDataProvider extends Interface { 
	static Load(ResourceName: string): Interface_CollisionDataProvider;
	static Find(Outer: UObject, ResourceName: string): Interface_CollisionDataProvider;
	static GetDefaultObject(): Interface_CollisionDataProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Interface_CollisionDataProvider;
	static C(Other: UObject | any): Interface_CollisionDataProvider;
}

declare class Interface_PostProcessVolume extends Interface { 
	static Load(ResourceName: string): Interface_PostProcessVolume;
	static Find(Outer: UObject, ResourceName: string): Interface_PostProcessVolume;
	static GetDefaultObject(): Interface_PostProcessVolume;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Interface_PostProcessVolume;
	static C(Other: UObject | any): Interface_PostProcessVolume;
}

declare class Interface_PreviewMeshProvider extends Interface { 
	static Load(ResourceName: string): Interface_PreviewMeshProvider;
	static Find(Outer: UObject, ResourceName: string): Interface_PreviewMeshProvider;
	static GetDefaultObject(): Interface_PreviewMeshProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Interface_PreviewMeshProvider;
	static C(Other: UObject | any): Interface_PreviewMeshProvider;
}

declare class ISMPartitionInstanceManager extends Interface { 
	static Load(ResourceName: string): ISMPartitionInstanceManager;
	static Find(Outer: UObject, ResourceName: string): ISMPartitionInstanceManager;
	static GetDefaultObject(): ISMPartitionInstanceManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ISMPartitionInstanceManager;
	static C(Other: UObject | any): ISMPartitionInstanceManager;
}

declare class ISMPartitionInstanceManagerProvider extends Interface { 
	static Load(ResourceName: string): ISMPartitionInstanceManagerProvider;
	static Find(Outer: UObject, ResourceName: string): ISMPartitionInstanceManagerProvider;
	static GetDefaultObject(): ISMPartitionInstanceManagerProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ISMPartitionInstanceManagerProvider;
	static C(Other: UObject | any): ISMPartitionInstanceManagerProvider;
}

declare type ELocalizedTextSourceCategory = 'Game' | 'Engine' | 'Editor' | 'ELocalizedTextSourceCategory_MAX';
declare var ELocalizedTextSourceCategory : { Game:'Game',Engine:'Engine',Editor:'Editor',ELocalizedTextSourceCategory_MAX:'ELocalizedTextSourceCategory_MAX', };
declare class PolyglotTextData { 
	Category: ELocalizedTextSourceCategory;
	NativeCulture: string;
	Namespace: string;
	Key: string;
	NativeString: string;
	LocalizedStrings: Map<string, string>;
	bIsMinimalPatch: boolean;
	CachedText: string;
	clone() : PolyglotTextData;
	static C(Other: UObject | any): PolyglotTextData;
	IsPolyglotDataValid(IsValid?: boolean,ErrorMessage?: string): {IsValid: boolean, ErrorMessage: string};
	PolyglotDataToText(): string;
	static IsPolyglotDataValid(PolyglotData: PolyglotTextData,IsValid?: boolean,ErrorMessage?: string): {IsValid: boolean, ErrorMessage: string};
	static PolyglotDataToText(PolyglotData: PolyglotTextData): string;
}

declare type EFormatArgumentType = 'Int' | 'UInt' | 'Float' | 'Double' | 'Text' | 'Gender' | 'EFormatArgumentType_MAX';
declare var EFormatArgumentType : { Int:'Int',UInt:'UInt',Float:'Float',Double:'Double',Text:'Text',Gender:'Gender',EFormatArgumentType_MAX:'EFormatArgumentType_MAX', };
declare type ETextGender = 'Masculine' | 'Feminine' | 'Neuter' | 'ETextGender_MAX';
declare var ETextGender : { Masculine:'Masculine',Feminine:'Feminine',Neuter:'Neuter',ETextGender_MAX:'ETextGender_MAX', };
declare class FormatArgumentData { 
	ArgumentName: string;
	ArgumentValueType: EFormatArgumentType;
	ArgumentValue: string;
	ArgumentValueInt: number;
	ArgumentValueFloat: number;
	ArgumentValueDouble: number;
	ArgumentValueGender: ETextGender;
	clone() : FormatArgumentData;
	static C(Other: UObject | any): FormatArgumentData;
}

declare type ERoundingMode = 'HalfToEven' | 'HalfFromZero' | 'HalfToZero' | 'FromZero' | 'ToZero' | 'ToNegativeInfinity' | 'ToPositiveInfinity' | 'ERoundingMode_MAX';
declare var ERoundingMode : { HalfToEven:'HalfToEven',HalfFromZero:'HalfFromZero',HalfToZero:'HalfToZero',FromZero:'FromZero',ToZero:'ToZero',ToNegativeInfinity:'ToNegativeInfinity',ToPositiveInfinity:'ToPositiveInfinity',ERoundingMode_MAX:'ERoundingMode_MAX', };
declare class KismetTextLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): KismetTextLibrary;
	static Find(Outer: UObject, ResourceName: string): KismetTextLibrary;
	static GetDefaultObject(): KismetTextLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetTextLibrary;
	static TextTrimTrailing(InText: string): string;
	static TextTrimPrecedingAndTrailing(InText: string): string;
	static TextTrimPreceding(InText: string): string;
	static TextToUpper(InText: string): string;
	static TextToLower(InText: string): string;
	static TextIsTransient(InText: string): boolean;
	static TextIsFromStringTable(Text: string): boolean;
	static TextIsEmpty(InText: string): boolean;
	static TextIsCultureInvariant(InText: string): boolean;
	static TextFromStringTable(TableId: string,Key: string): string;
	static StringTableIdAndKeyFromText(Text: string,OutTableId?: string,OutKey?: string): {OutTableId: string, OutKey: string, $: boolean};
	static PolyglotDataToText(PolyglotData: PolyglotTextData): string;
	static NotEqual_TextText(A: string,B: string): boolean;
	static NotEqual_IgnoreCase_TextText(A: string,B: string): boolean;
	static IsPolyglotDataValid(PolyglotData: PolyglotTextData,IsValid?: boolean,ErrorMessage?: string): {IsValid: boolean, ErrorMessage: string};
	static GetEmptyText(): string;
	static Format(InPattern: string,InArgs: FormatArgumentData[]): string;
	static FindTextInLocalizationTable(Namespace: string,Key: string,OutText?: string): {OutText: string, $: boolean};
	static EqualEqual_TextText(A: string,B: string): boolean;
	static EqualEqual_IgnoreCase_TextText(A: string,B: string): boolean;
	static Conv_VectorToText(InVec: Vector): string;
	static Conv_Vector2dToText(InVec: Vector2D): string;
	static Conv_TransformToText(InTrans: Transform): string;
	static Conv_TextToString(InText: string): string;
	static Conv_StringToText(InString: string): string;
	static Conv_RotatorToText(InRot: Rotator): string;
	static Conv_ObjectToText(InObj: UObject): string;
	static Conv_NameToText(InName: string): string;
	static Conv_IntToText(Value: number,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number): string;
	static Conv_Int64ToText(Value: number,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number): string;
	static Conv_DoubleToText(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number): string;
	static Conv_ColorToText(InColor: LinearColor): string;
	static Conv_ByteToText(Value: number): string;
	static Conv_BoolToText(InBool: boolean): string;
	static AsTimeZoneTime_DateTime(InDateTime: DateTime,InTimeZone: string): string;
	static AsTimeZoneDateTime_DateTime(InDateTime: DateTime,InTimeZone: string): string;
	static AsTimeZoneDate_DateTime(InDateTime: DateTime,InTimeZone: string): string;
	static AsTimespan_Timespan(InTimespan: Timespan): string;
	static AsTime_DateTime(In: DateTime): string;
	static AsPercent_Float(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number): string;
	static AsDateTime_DateTime(In: DateTime): string;
	static AsDate_DateTime(InDateTime: DateTime): string;
	static AsCurrencyBase(BaseValue: number,CurrencyCode: string): string;
	static AsCurrency_Integer(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number,CurrencyCode: string): string;
	static AsCurrency_Float(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number,CurrencyCode: string): string;
	static C(Other: UObject | any): KismetTextLibrary;
}

declare class LevelInstanceEditorPivotInterface extends Interface { 
	static Load(ResourceName: string): LevelInstanceEditorPivotInterface;
	static Find(Outer: UObject, ResourceName: string): LevelInstanceEditorPivotInterface;
	static GetDefaultObject(): LevelInstanceEditorPivotInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelInstanceEditorPivotInterface;
	static C(Other: UObject | any): LevelInstanceEditorPivotInterface;
}

declare class LevelStreamingAlwaysLoaded extends LevelStreaming { 
	static Load(ResourceName: string): LevelStreamingAlwaysLoaded;
	static Find(Outer: UObject, ResourceName: string): LevelStreamingAlwaysLoaded;
	static GetDefaultObject(): LevelStreamingAlwaysLoaded;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelStreamingAlwaysLoaded;
	static C(Other: UObject | any): LevelStreamingAlwaysLoaded;
}

declare class LevelStreamingDynamic extends LevelStreaming { 
	bInitiallyLoaded: boolean;
	bInitiallyVisible: boolean;
	static Load(ResourceName: string): LevelStreamingDynamic;
	static Find(Outer: UObject, ResourceName: string): LevelStreamingDynamic;
	static GetDefaultObject(): LevelStreamingDynamic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelStreamingDynamic;
	static LoadLevelInstanceBySoftObjectPtr(WorldContextObject: UObject,Level: World,Location: Vector,Rotation: Rotator,bOutSuccess?: boolean,OptionalLevelNameOverride?: string,OptionalLevelStreamingClass?: UnrealEngineClass,bLoadAsTempPackage?: boolean): {bOutSuccess: boolean, $: LevelStreamingDynamic};
	static LoadLevelInstance(WorldContextObject: UObject,LevelName: string,Location: Vector,Rotation: Rotator,bOutSuccess?: boolean,OptionalLevelNameOverride?: string,OptionalLevelStreamingClass?: UnrealEngineClass,bLoadAsTempPackage?: boolean): {bOutSuccess: boolean, $: LevelStreamingDynamic};
	static C(Other: UObject | any): LevelStreamingDynamic;
}

declare class LevelStreamingPersistent extends LevelStreaming { 
	static Load(ResourceName: string): LevelStreamingPersistent;
	static Find(Outer: UObject, ResourceName: string): LevelStreamingPersistent;
	static GetDefaultObject(): LevelStreamingPersistent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelStreamingPersistent;
	static C(Other: UObject | any): LevelStreamingPersistent;
}

declare class LightMapTexture2D extends Texture2D { 
	static Load(ResourceName: string): LightMapTexture2D;
	static Find(Outer: UObject, ResourceName: string): LightMapTexture2D;
	static GetDefaultObject(): LightMapTexture2D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightMapTexture2D;
	static C(Other: UObject | any): LightMapTexture2D;
}

declare class LightmassPortalComponent extends SceneComponent { 
	PreviewBox: BoxComponent;
	static Load(ResourceName: string): LightmassPortalComponent;
	static Find(Outer: UObject, ResourceName: string): LightmassPortalComponent;
	static GetDefaultObject(): LightmassPortalComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightmassPortalComponent;
	static C(Other: UObject | any): LightmassPortalComponent;
}

declare class LightmassPortal extends Actor { 
	PortalComponent: LightmassPortalComponent;
	SpriteComponent: BillboardComponent;
	static GetDefaultObject(): LightmassPortal;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightmassPortal;
	static C(Other: UObject | any): LightmassPortal;
}

declare class MaterialExpressionCollection { 
	Expressions: MaterialExpression[];
	EditorComments: MaterialExpressionComment[];
	ExpressionExecBegin: MaterialExpressionExecBegin;
	ExpressionExecEnd: MaterialExpressionExecEnd;
	clone() : MaterialExpressionCollection;
	static C(Other: UObject | any): MaterialExpressionCollection;
}

declare class MaterialEditorOnlyData extends MaterialInterfaceEditorOnlyData { 
	BaseColor: ColorMaterialInput;
	Metallic: ScalarMaterialInput;
	Specular: ScalarMaterialInput;
	Roughness: ScalarMaterialInput;
	Anisotropy: ScalarMaterialInput;
	Normal: VectorMaterialInput;
	Tangent: VectorMaterialInput;
	EmissiveColor: ColorMaterialInput;
	Opacity: ScalarMaterialInput;
	OpacityMask: ScalarMaterialInput;
	WorldPositionOffset: VectorMaterialInput;
	SubsurfaceColor: ColorMaterialInput;
	ClearCoat: ScalarMaterialInput;
	ClearCoatRoughness: ScalarMaterialInput;
	AmbientOcclusion: ScalarMaterialInput;
	Refraction: ScalarMaterialInput;
	CustomizedUVs: Vector2MaterialInput;
	MaterialAttributes: MaterialAttributesInput;
	PixelDepthOffset: ScalarMaterialInput;
	ShadingModelFromMaterialExpression: ShadingModelMaterialInput;
	FrontMaterial: StrataMaterialInput;
	ExpressionCollection: MaterialExpressionCollection;
	ParameterGroupData: ParameterGroupData[];
	static Load(ResourceName: string): MaterialEditorOnlyData;
	static Find(Outer: UObject, ResourceName: string): MaterialEditorOnlyData;
	static GetDefaultObject(): MaterialEditorOnlyData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditorOnlyData;
	static C(Other: UObject | any): MaterialEditorOnlyData;
}

declare class MaterialExpressionAbs extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionAbs;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAbs;
	static GetDefaultObject(): MaterialExpressionAbs;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAbs;
	static C(Other: UObject | any): MaterialExpressionAbs;
}

declare class MaterialExpressionAbsorptionMediumMaterialOutput extends MaterialExpressionCustomOutput { 
	TransmittanceColor: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionAbsorptionMediumMaterialOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAbsorptionMediumMaterialOutput;
	static GetDefaultObject(): MaterialExpressionAbsorptionMediumMaterialOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAbsorptionMediumMaterialOutput;
	static C(Other: UObject | any): MaterialExpressionAbsorptionMediumMaterialOutput;
}

declare class MaterialExpressionActorPositionWS extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionActorPositionWS;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionActorPositionWS;
	static GetDefaultObject(): MaterialExpressionActorPositionWS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionActorPositionWS;
	static C(Other: UObject | any): MaterialExpressionActorPositionWS;
}

declare class MaterialExpressionAdd extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	ConstA: number;
	ConstB: number;
	static Load(ResourceName: string): MaterialExpressionAdd;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAdd;
	static GetDefaultObject(): MaterialExpressionAdd;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAdd;
	static C(Other: UObject | any): MaterialExpressionAdd;
}

declare type EMaterialSamplerType = 'SAMPLERTYPE_Color' | 'SAMPLERTYPE_Grayscale' | 'SAMPLERTYPE_Alpha' | 'SAMPLERTYPE_Normal' | 'SAMPLERTYPE_Masks' | 'SAMPLERTYPE_DistanceFieldFont' | 'SAMPLERTYPE_LinearColor' | 'SAMPLERTYPE_LinearGrayscale' | 'SAMPLERTYPE_Data' | 'SAMPLERTYPE_External' | 'SAMPLERTYPE_VirtualColor' | 'SAMPLERTYPE_VirtualGrayscale' | 'SAMPLERTYPE_VirtualAlpha' | 'SAMPLERTYPE_VirtualNormal' | 'SAMPLERTYPE_VirtualMasks' | 'SAMPLERTYPE_VirtualLinearColor' | 'SAMPLERTYPE_VirtualLinearGrayscale' | 'SAMPLERTYPE_MAX';
declare var EMaterialSamplerType : { SAMPLERTYPE_Color:'SAMPLERTYPE_Color',SAMPLERTYPE_Grayscale:'SAMPLERTYPE_Grayscale',SAMPLERTYPE_Alpha:'SAMPLERTYPE_Alpha',SAMPLERTYPE_Normal:'SAMPLERTYPE_Normal',SAMPLERTYPE_Masks:'SAMPLERTYPE_Masks',SAMPLERTYPE_DistanceFieldFont:'SAMPLERTYPE_DistanceFieldFont',SAMPLERTYPE_LinearColor:'SAMPLERTYPE_LinearColor',SAMPLERTYPE_LinearGrayscale:'SAMPLERTYPE_LinearGrayscale',SAMPLERTYPE_Data:'SAMPLERTYPE_Data',SAMPLERTYPE_External:'SAMPLERTYPE_External',SAMPLERTYPE_VirtualColor:'SAMPLERTYPE_VirtualColor',SAMPLERTYPE_VirtualGrayscale:'SAMPLERTYPE_VirtualGrayscale',SAMPLERTYPE_VirtualAlpha:'SAMPLERTYPE_VirtualAlpha',SAMPLERTYPE_VirtualNormal:'SAMPLERTYPE_VirtualNormal',SAMPLERTYPE_VirtualMasks:'SAMPLERTYPE_VirtualMasks',SAMPLERTYPE_VirtualLinearColor:'SAMPLERTYPE_VirtualLinearColor',SAMPLERTYPE_VirtualLinearGrayscale:'SAMPLERTYPE_VirtualLinearGrayscale',SAMPLERTYPE_MAX:'SAMPLERTYPE_MAX', };
declare class MaterialExpressionTextureBase extends MaterialExpression { 
	Texture: Texture;
	SamplerType: EMaterialSamplerType;
	IsDefaultMeshpaintTexture: boolean;
	static Load(ResourceName: string): MaterialExpressionTextureBase;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionTextureBase;
	static GetDefaultObject(): MaterialExpressionTextureBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionTextureBase;
	static C(Other: UObject | any): MaterialExpressionTextureBase;
}

declare type ETextureMipValueMode = 'TMVM_None' | 'TMVM_MipLevel' | 'TMVM_MipBias' | 'TMVM_Derivative' | 'TMVM_MAX';
declare var ETextureMipValueMode : { TMVM_None:'TMVM_None',TMVM_MipLevel:'TMVM_MipLevel',TMVM_MipBias:'TMVM_MipBias',TMVM_Derivative:'TMVM_Derivative',TMVM_MAX:'TMVM_MAX', };
declare type ESamplerSourceMode = 'SSM_FromTextureAsset' | 'SSM_Wrap_WorldGroupSettings' | 'SSM_Clamp_WorldGroupSettings' | 'SSM_TerrainWeightmapGroupSettings' | 'SSM_MAX';
declare var ESamplerSourceMode : { SSM_FromTextureAsset:'SSM_FromTextureAsset',SSM_Wrap_WorldGroupSettings:'SSM_Wrap_WorldGroupSettings',SSM_Clamp_WorldGroupSettings:'SSM_Clamp_WorldGroupSettings',SSM_TerrainWeightmapGroupSettings:'SSM_TerrainWeightmapGroupSettings',SSM_MAX:'SSM_MAX', };
declare class MaterialExpressionTextureSample extends MaterialExpressionTextureBase { 
	Coordinates: ExpressionInput;
	TextureObject: ExpressionInput;
	MipValue: ExpressionInput;
	CoordinatesDX: ExpressionInput;
	CoordinatesDY: ExpressionInput;
	AutomaticViewMipBiasValue: ExpressionInput;
	MipValueMode: ETextureMipValueMode;
	SamplerSource: ESamplerSourceMode;
	AutomaticViewMipBias: boolean;
	ConstCoordinate: number;
	ConstMipValue: number;
	static Load(ResourceName: string): MaterialExpressionTextureSample;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionTextureSample;
	static GetDefaultObject(): MaterialExpressionTextureSample;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionTextureSample;
	static C(Other: UObject | any): MaterialExpressionTextureSample;
}

declare class MaterialExpressionTextureSampleParameter extends MaterialExpressionTextureSample { 
	ParameterName: string;
	ExpressionGUID: Guid;
	Group: string;
	SortPriority: number;
	ChannelNames: ParameterChannelNames;
	static Load(ResourceName: string): MaterialExpressionTextureSampleParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionTextureSampleParameter;
	static GetDefaultObject(): MaterialExpressionTextureSampleParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionTextureSampleParameter;
	static C(Other: UObject | any): MaterialExpressionTextureSampleParameter;
}

declare class MaterialExpressionTextureSampleParameter2D extends MaterialExpressionTextureSampleParameter { 
	static Load(ResourceName: string): MaterialExpressionTextureSampleParameter2D;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionTextureSampleParameter2D;
	static GetDefaultObject(): MaterialExpressionTextureSampleParameter2D;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionTextureSampleParameter2D;
	static C(Other: UObject | any): MaterialExpressionTextureSampleParameter2D;
}

declare type ETextureColorChannel = 'TCC_Red' | 'TCC_Green' | 'TCC_Blue' | 'TCC_Alpha' | 'TCC_MAX';
declare var ETextureColorChannel : { TCC_Red:'TCC_Red',TCC_Green:'TCC_Green',TCC_Blue:'TCC_Blue',TCC_Alpha:'TCC_Alpha',TCC_MAX:'TCC_MAX', };
declare class MaterialExpressionAntialiasedTextureMask extends MaterialExpressionTextureSampleParameter2D { 
	Threshold: number;
	Channel: ETextureColorChannel;
	static Load(ResourceName: string): MaterialExpressionAntialiasedTextureMask;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAntialiasedTextureMask;
	static GetDefaultObject(): MaterialExpressionAntialiasedTextureMask;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAntialiasedTextureMask;
	static C(Other: UObject | any): MaterialExpressionAntialiasedTextureMask;
}

declare class MaterialExpressionAppendVector extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionAppendVector;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAppendVector;
	static GetDefaultObject(): MaterialExpressionAppendVector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAppendVector;
	static C(Other: UObject | any): MaterialExpressionAppendVector;
}

declare class MaterialExpressionArccosine extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArccosine;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArccosine;
	static GetDefaultObject(): MaterialExpressionArccosine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArccosine;
	static C(Other: UObject | any): MaterialExpressionArccosine;
}

declare class MaterialExpressionArccosineFast extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArccosineFast;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArccosineFast;
	static GetDefaultObject(): MaterialExpressionArccosineFast;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArccosineFast;
	static C(Other: UObject | any): MaterialExpressionArccosineFast;
}

declare class MaterialExpressionArcsine extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArcsine;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArcsine;
	static GetDefaultObject(): MaterialExpressionArcsine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArcsine;
	static C(Other: UObject | any): MaterialExpressionArcsine;
}

declare class MaterialExpressionArcsineFast extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArcsineFast;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArcsineFast;
	static GetDefaultObject(): MaterialExpressionArcsineFast;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArcsineFast;
	static C(Other: UObject | any): MaterialExpressionArcsineFast;
}

declare class MaterialExpressionArctangent extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArctangent;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArctangent;
	static GetDefaultObject(): MaterialExpressionArctangent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArctangent;
	static C(Other: UObject | any): MaterialExpressionArctangent;
}

declare class MaterialExpressionArctangent2 extends MaterialExpression { 
	Y: ExpressionInput;
	X: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArctangent2;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArctangent2;
	static GetDefaultObject(): MaterialExpressionArctangent2;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArctangent2;
	static C(Other: UObject | any): MaterialExpressionArctangent2;
}

declare class MaterialExpressionArctangent2Fast extends MaterialExpression { 
	Y: ExpressionInput;
	X: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArctangent2Fast;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArctangent2Fast;
	static GetDefaultObject(): MaterialExpressionArctangent2Fast;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArctangent2Fast;
	static C(Other: UObject | any): MaterialExpressionArctangent2Fast;
}

declare class MaterialExpressionArctangentFast extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionArctangentFast;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionArctangentFast;
	static GetDefaultObject(): MaterialExpressionArctangentFast;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionArctangentFast;
	static C(Other: UObject | any): MaterialExpressionArctangentFast;
}

declare class MaterialExpressionAtmosphericFogColor extends MaterialExpression { 
	WorldPosition: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionAtmosphericFogColor;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAtmosphericFogColor;
	static GetDefaultObject(): MaterialExpressionAtmosphericFogColor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAtmosphericFogColor;
	static C(Other: UObject | any): MaterialExpressionAtmosphericFogColor;
}

declare class MaterialExpressionAtmosphericLightColor extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionAtmosphericLightColor;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAtmosphericLightColor;
	static GetDefaultObject(): MaterialExpressionAtmosphericLightColor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAtmosphericLightColor;
	static C(Other: UObject | any): MaterialExpressionAtmosphericLightColor;
}

declare class MaterialExpressionAtmosphericLightVector extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionAtmosphericLightVector;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionAtmosphericLightVector;
	static GetDefaultObject(): MaterialExpressionAtmosphericLightVector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionAtmosphericLightVector;
	static C(Other: UObject | any): MaterialExpressionAtmosphericLightVector;
}

declare class MaterialExpressionBentNormalCustomOutput extends MaterialExpressionCustomOutput { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionBentNormalCustomOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionBentNormalCustomOutput;
	static GetDefaultObject(): MaterialExpressionBentNormalCustomOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionBentNormalCustomOutput;
	static C(Other: UObject | any): MaterialExpressionBentNormalCustomOutput;
}

declare class MaterialExpressionBinaryOp extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	ConstA: number;
	ConstB: number;
	static Load(ResourceName: string): MaterialExpressionBinaryOp;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionBinaryOp;
	static GetDefaultObject(): MaterialExpressionBinaryOp;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionBinaryOp;
	static C(Other: UObject | any): MaterialExpressionBinaryOp;
}

declare class MaterialExpressionLess extends MaterialExpressionBinaryOp { 
	static Load(ResourceName: string): MaterialExpressionLess;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLess;
	static GetDefaultObject(): MaterialExpressionLess;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLess;
	static C(Other: UObject | any): MaterialExpressionLess;
}

declare class MaterialExpressionBlackBody extends MaterialExpression { 
	Temp: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionBlackBody;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionBlackBody;
	static GetDefaultObject(): MaterialExpressionBlackBody;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionBlackBody;
	static C(Other: UObject | any): MaterialExpressionBlackBody;
}

declare type EMaterialAttributeBlend = 'Blend' | 'UseA' | 'UseB' | 'EMaterialAttributeBlend_MAX';
declare var EMaterialAttributeBlend : { Blend:'Blend',UseA:'UseA',UseB:'UseB',EMaterialAttributeBlend_MAX:'EMaterialAttributeBlend_MAX', };
declare class MaterialExpressionBlendMaterialAttributes extends MaterialExpression { 
	A: MaterialAttributesInput;
	B: MaterialAttributesInput;
	Alpha: ExpressionInput;
	PixelAttributeBlendType: EMaterialAttributeBlend;
	VertexAttributeBlendType: EMaterialAttributeBlend;
	static Load(ResourceName: string): MaterialExpressionBlendMaterialAttributes;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionBlendMaterialAttributes;
	static GetDefaultObject(): MaterialExpressionBlendMaterialAttributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionBlendMaterialAttributes;
	static C(Other: UObject | any): MaterialExpressionBlendMaterialAttributes;
}

declare class MaterialExpressionBreakMaterialAttributes extends MaterialExpression { 
	MaterialAttributes: MaterialAttributesInput;
	static Load(ResourceName: string): MaterialExpressionBreakMaterialAttributes;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionBreakMaterialAttributes;
	static GetDefaultObject(): MaterialExpressionBreakMaterialAttributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionBreakMaterialAttributes;
	static C(Other: UObject | any): MaterialExpressionBreakMaterialAttributes;
}

declare class MaterialExpressionBumpOffset extends MaterialExpression { 
	Coordinate: ExpressionInput;
	Height: ExpressionInput;
	HeightRatioInput: ExpressionInput;
	HeightRatio: number;
	ReferencePlane: number;
	ConstCoordinate: number;
	static Load(ResourceName: string): MaterialExpressionBumpOffset;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionBumpOffset;
	static GetDefaultObject(): MaterialExpressionBumpOffset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionBumpOffset;
	static C(Other: UObject | any): MaterialExpressionBumpOffset;
}

declare class MaterialExpressionCameraPositionWS extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionCameraPositionWS;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCameraPositionWS;
	static GetDefaultObject(): MaterialExpressionCameraPositionWS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCameraPositionWS;
	static C(Other: UObject | any): MaterialExpressionCameraPositionWS;
}

declare class MaterialExpressionCameraVectorWS extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionCameraVectorWS;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCameraVectorWS;
	static GetDefaultObject(): MaterialExpressionCameraVectorWS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCameraVectorWS;
	static C(Other: UObject | any): MaterialExpressionCameraVectorWS;
}

declare class MaterialExpressionCeil extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionCeil;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCeil;
	static GetDefaultObject(): MaterialExpressionCeil;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCeil;
	static C(Other: UObject | any): MaterialExpressionCeil;
}

declare class MaterialExpressionParameter extends MaterialExpression { 
	ParameterName: string;
	ExpressionGUID: Guid;
	Group: string;
	SortPriority: number;
	static Load(ResourceName: string): MaterialExpressionParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParameter;
	static GetDefaultObject(): MaterialExpressionParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParameter;
	static C(Other: UObject | any): MaterialExpressionParameter;
}

declare class MaterialExpressionVectorParameter extends MaterialExpressionParameter { 
	DefaultValue: LinearColor;
	bUseCustomPrimitiveData: boolean;
	PrimitiveDataIndex: number;
	ChannelNames: ParameterChannelNames;
	static Load(ResourceName: string): MaterialExpressionVectorParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionVectorParameter;
	static GetDefaultObject(): MaterialExpressionVectorParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionVectorParameter;
	static C(Other: UObject | any): MaterialExpressionVectorParameter;
}

declare type EChannelMaskParameterColor = 'Red' | 'Green' | 'Blue' | 'Alpha' | 'EChannelMaskParameterColor_MAX';
declare var EChannelMaskParameterColor : { Red:'Red',Green:'Green',Blue:'Blue',Alpha:'Alpha',EChannelMaskParameterColor_MAX:'EChannelMaskParameterColor_MAX', };
declare class MaterialExpressionChannelMaskParameter extends MaterialExpressionVectorParameter { 
	MaskChannel: EChannelMaskParameterColor;
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionChannelMaskParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionChannelMaskParameter;
	static GetDefaultObject(): MaterialExpressionChannelMaskParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionChannelMaskParameter;
	static C(Other: UObject | any): MaterialExpressionChannelMaskParameter;
}

declare type EClampMode = 'CMODE_Clamp' | 'CMODE_ClampMin' | 'CMODE_ClampMax' | 'CMODE_MAX';
declare var EClampMode : { CMODE_Clamp:'CMODE_Clamp',CMODE_ClampMin:'CMODE_ClampMin',CMODE_ClampMax:'CMODE_ClampMax',CMODE_MAX:'CMODE_MAX', };
declare class MaterialExpressionClamp extends MaterialExpression { 
	Input: ExpressionInput;
	Min: ExpressionInput;
	Max: ExpressionInput;
	ClampMode: EClampMode;
	MinDefault: number;
	MaxDefault: number;
	static Load(ResourceName: string): MaterialExpressionClamp;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionClamp;
	static GetDefaultObject(): MaterialExpressionClamp;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionClamp;
	static C(Other: UObject | any): MaterialExpressionClamp;
}

declare class MaterialExpressionClearCoatNormalCustomOutput extends MaterialExpressionCustomOutput { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionClearCoatNormalCustomOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionClearCoatNormalCustomOutput;
	static GetDefaultObject(): MaterialExpressionClearCoatNormalCustomOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionClearCoatNormalCustomOutput;
	static C(Other: UObject | any): MaterialExpressionClearCoatNormalCustomOutput;
}

declare class MaterialExpressionCloudSampleAttribute extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionCloudSampleAttribute;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCloudSampleAttribute;
	static GetDefaultObject(): MaterialExpressionCloudSampleAttribute;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCloudSampleAttribute;
	static C(Other: UObject | any): MaterialExpressionCloudSampleAttribute;
}

declare class MaterialExpressionCollectionParameter extends MaterialExpression { 
	Collection: MaterialParameterCollection;
	ParameterName: string;
	ParameterId: Guid;
	static Load(ResourceName: string): MaterialExpressionCollectionParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCollectionParameter;
	static GetDefaultObject(): MaterialExpressionCollectionParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCollectionParameter;
	static C(Other: UObject | any): MaterialExpressionCollectionParameter;
}

declare class MaterialExpressionComponentMask extends MaterialExpression { 
	Input: ExpressionInput;
	R: boolean;
	G: boolean;
	B: boolean;
	A: boolean;
	static Load(ResourceName: string): MaterialExpressionComponentMask;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionComponentMask;
	static GetDefaultObject(): MaterialExpressionComponentMask;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionComponentMask;
	static C(Other: UObject | any): MaterialExpressionComponentMask;
}

declare class MaterialExpressionRerouteBase extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionRerouteBase;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRerouteBase;
	static GetDefaultObject(): MaterialExpressionRerouteBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRerouteBase;
	static C(Other: UObject | any): MaterialExpressionRerouteBase;
}

declare class MaterialExpressionReroute extends MaterialExpressionRerouteBase { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionReroute;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionReroute;
	static GetDefaultObject(): MaterialExpressionReroute;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionReroute;
	static C(Other: UObject | any): MaterialExpressionReroute;
}

declare class CompositeReroute { 
	Name: string;
	Expression: MaterialExpressionReroute;
	clone() : CompositeReroute;
	static C(Other: UObject | any): CompositeReroute;
}

declare class MaterialExpressionPinBase extends MaterialExpression { 
	ReroutePins: CompositeReroute[];
	PinDirection: EEdGraphPinDirection;
	static Load(ResourceName: string): MaterialExpressionPinBase;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPinBase;
	static GetDefaultObject(): MaterialExpressionPinBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPinBase;
	static C(Other: UObject | any): MaterialExpressionPinBase;
}

declare class MaterialExpressionComposite extends MaterialExpression { 
	SubgraphName: string;
	InputExpressions: MaterialExpressionPinBase;
	OutputExpressions: MaterialExpressionPinBase;
	static Load(ResourceName: string): MaterialExpressionComposite;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionComposite;
	static GetDefaultObject(): MaterialExpressionComposite;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionComposite;
	static C(Other: UObject | any): MaterialExpressionComposite;
}

declare class MaterialExpressionConstant extends MaterialExpression { 
	R: number;
	static Load(ResourceName: string): MaterialExpressionConstant;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionConstant;
	static GetDefaultObject(): MaterialExpressionConstant;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionConstant;
	static C(Other: UObject | any): MaterialExpressionConstant;
}

declare class MaterialExpressionConstant2Vector extends MaterialExpression { 
	R: number;
	G: number;
	static Load(ResourceName: string): MaterialExpressionConstant2Vector;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionConstant2Vector;
	static GetDefaultObject(): MaterialExpressionConstant2Vector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionConstant2Vector;
	static C(Other: UObject | any): MaterialExpressionConstant2Vector;
}

declare class MaterialExpressionConstant3Vector extends MaterialExpression { 
	Constant: LinearColor;
	static Load(ResourceName: string): MaterialExpressionConstant3Vector;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionConstant3Vector;
	static GetDefaultObject(): MaterialExpressionConstant3Vector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionConstant3Vector;
	static C(Other: UObject | any): MaterialExpressionConstant3Vector;
}

declare class MaterialExpressionConstant4Vector extends MaterialExpression { 
	Constant: LinearColor;
	static Load(ResourceName: string): MaterialExpressionConstant4Vector;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionConstant4Vector;
	static GetDefaultObject(): MaterialExpressionConstant4Vector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionConstant4Vector;
	static C(Other: UObject | any): MaterialExpressionConstant4Vector;
}

declare class MaterialExpressionConstantBiasScale extends MaterialExpression { 
	Input: ExpressionInput;
	Bias: number;
	Scale: number;
	static Load(ResourceName: string): MaterialExpressionConstantBiasScale;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionConstantBiasScale;
	static GetDefaultObject(): MaterialExpressionConstantBiasScale;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionConstantBiasScale;
	static C(Other: UObject | any): MaterialExpressionConstantBiasScale;
}

declare class MaterialExpressionCosine extends MaterialExpression { 
	Input: ExpressionInput;
	Period: number;
	static Load(ResourceName: string): MaterialExpressionCosine;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCosine;
	static GetDefaultObject(): MaterialExpressionCosine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCosine;
	static C(Other: UObject | any): MaterialExpressionCosine;
}

declare class MaterialExpressionCrossProduct extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionCrossProduct;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCrossProduct;
	static GetDefaultObject(): MaterialExpressionCrossProduct;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCrossProduct;
	static C(Other: UObject | any): MaterialExpressionCrossProduct;
}

declare class MaterialExpressionScalarParameter extends MaterialExpressionParameter { 
	DefaultValue: number;
	bUseCustomPrimitiveData: boolean;
	PrimitiveDataIndex: number;
	SliderMin: number;
	SliderMax: number;
	static Load(ResourceName: string): MaterialExpressionScalarParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionScalarParameter;
	static GetDefaultObject(): MaterialExpressionScalarParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionScalarParameter;
	static C(Other: UObject | any): MaterialExpressionScalarParameter;
}

declare class MaterialExpressionCurveAtlasRowParameter extends MaterialExpressionScalarParameter { 
	Curve: CurveLinearColor;
	Atlas: CurveLinearColorAtlas;
	InputTime: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionCurveAtlasRowParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCurveAtlasRowParameter;
	static GetDefaultObject(): MaterialExpressionCurveAtlasRowParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCurveAtlasRowParameter;
	static C(Other: UObject | any): MaterialExpressionCurveAtlasRowParameter;
}

declare type ECustomMaterialOutputType = 'CMOT_Float1' | 'CMOT_Float2' | 'CMOT_Float3' | 'CMOT_Float4' | 'CMOT_MaterialAttributes' | 'CMOT_MAX';
declare var ECustomMaterialOutputType : { CMOT_Float1:'CMOT_Float1',CMOT_Float2:'CMOT_Float2',CMOT_Float3:'CMOT_Float3',CMOT_Float4:'CMOT_Float4',CMOT_MaterialAttributes:'CMOT_MaterialAttributes',CMOT_MAX:'CMOT_MAX', };
declare class CustomInput { 
	InputName: string;
	Input: ExpressionInput;
	clone() : CustomInput;
	static C(Other: UObject | any): CustomInput;
}

declare class CustomOutput { 
	OutputName: string;
	OutputType: ECustomMaterialOutputType;
	clone() : CustomOutput;
	static C(Other: UObject | any): CustomOutput;
}

declare class CustomDefine { 
	DefineName: string;
	DefineValue: string;
	clone() : CustomDefine;
	static C(Other: UObject | any): CustomDefine;
}

declare class MaterialExpressionCustom extends MaterialExpression { 
	Code: string;
	OutputType: ECustomMaterialOutputType;
	Description: string;
	Inputs: CustomInput[];
	AdditionalOutputs: CustomOutput[];
	AdditionalDefines: CustomDefine[];
	IncludeFilePaths: string[];
	static Load(ResourceName: string): MaterialExpressionCustom;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCustom;
	static GetDefaultObject(): MaterialExpressionCustom;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCustom;
	static C(Other: UObject | any): MaterialExpressionCustom;
}

declare type EDBufferTextureId = 'DBT_A' | 'DBT_B' | 'DBT_C' | 'DBT_MAX';
declare var EDBufferTextureId : { DBT_A:'DBT_A',DBT_B:'DBT_B',DBT_C:'DBT_C',DBT_MAX:'DBT_MAX', };
declare class MaterialExpressionDBufferTexture extends MaterialExpression { 
	Coordinates: ExpressionInput;
	DBufferTextureId: EDBufferTextureId;
	static Load(ResourceName: string): MaterialExpressionDBufferTexture;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDBufferTexture;
	static GetDefaultObject(): MaterialExpressionDBufferTexture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDBufferTexture;
	static C(Other: UObject | any): MaterialExpressionDBufferTexture;
}

declare class MaterialExpressionDDX extends MaterialExpression { 
	Value: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDDX;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDDX;
	static GetDefaultObject(): MaterialExpressionDDX;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDDX;
	static C(Other: UObject | any): MaterialExpressionDDX;
}

declare class MaterialExpressionDDY extends MaterialExpression { 
	Value: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDDY;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDDY;
	static GetDefaultObject(): MaterialExpressionDDY;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDDY;
	static C(Other: UObject | any): MaterialExpressionDDY;
}

declare class MaterialExpressionDecalDerivative extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionDecalDerivative;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDecalDerivative;
	static GetDefaultObject(): MaterialExpressionDecalDerivative;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDecalDerivative;
	static C(Other: UObject | any): MaterialExpressionDecalDerivative;
}

declare class MaterialExpressionDecalLifetimeOpacity extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionDecalLifetimeOpacity;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDecalLifetimeOpacity;
	static GetDefaultObject(): MaterialExpressionDecalLifetimeOpacity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDecalLifetimeOpacity;
	static C(Other: UObject | any): MaterialExpressionDecalLifetimeOpacity;
}

declare class MaterialExpressionDecalMipmapLevel extends MaterialExpression { 
	TextureSize: ExpressionInput;
	ConstWidth: number;
	ConstHeight: number;
	static Load(ResourceName: string): MaterialExpressionDecalMipmapLevel;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDecalMipmapLevel;
	static GetDefaultObject(): MaterialExpressionDecalMipmapLevel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDecalMipmapLevel;
	static C(Other: UObject | any): MaterialExpressionDecalMipmapLevel;
}

declare class MaterialExpressionDeltaTime extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionDeltaTime;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDeltaTime;
	static GetDefaultObject(): MaterialExpressionDeltaTime;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDeltaTime;
	static C(Other: UObject | any): MaterialExpressionDeltaTime;
}

declare class MaterialExpressionDepthFade extends MaterialExpression { 
	InOpacity: ExpressionInput;
	FadeDistance: ExpressionInput;
	OpacityDefault: number;
	FadeDistanceDefault: number;
	static Load(ResourceName: string): MaterialExpressionDepthFade;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDepthFade;
	static GetDefaultObject(): MaterialExpressionDepthFade;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDepthFade;
	static C(Other: UObject | any): MaterialExpressionDepthFade;
}

declare type EDepthOfFieldFunctionValue = 'TDOF_NearAndFarMask' | 'TDOF_NearMask' | 'TDOF_FarMask' | 'TDOF_CircleOfConfusionRadius' | 'TDOF_MAX';
declare var EDepthOfFieldFunctionValue : { TDOF_NearAndFarMask:'TDOF_NearAndFarMask',TDOF_NearMask:'TDOF_NearMask',TDOF_FarMask:'TDOF_FarMask',TDOF_CircleOfConfusionRadius:'TDOF_CircleOfConfusionRadius',TDOF_MAX:'TDOF_MAX', };
declare class MaterialExpressionDepthOfFieldFunction extends MaterialExpression { 
	FunctionValue: EDepthOfFieldFunctionValue;
	Depth: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDepthOfFieldFunction;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDepthOfFieldFunction;
	static GetDefaultObject(): MaterialExpressionDepthOfFieldFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDepthOfFieldFunction;
	static C(Other: UObject | any): MaterialExpressionDepthOfFieldFunction;
}

declare class MaterialExpressionDeriveNormalZ extends MaterialExpression { 
	InXY: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDeriveNormalZ;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDeriveNormalZ;
	static GetDefaultObject(): MaterialExpressionDeriveNormalZ;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDeriveNormalZ;
	static C(Other: UObject | any): MaterialExpressionDeriveNormalZ;
}

declare class MaterialExpressionDesaturation extends MaterialExpression { 
	Input: ExpressionInput;
	Fraction: ExpressionInput;
	LuminanceFactors: LinearColor;
	static Load(ResourceName: string): MaterialExpressionDesaturation;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDesaturation;
	static GetDefaultObject(): MaterialExpressionDesaturation;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDesaturation;
	static C(Other: UObject | any): MaterialExpressionDesaturation;
}

declare class MaterialExpressionDistance extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDistance;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDistance;
	static GetDefaultObject(): MaterialExpressionDistance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDistance;
	static C(Other: UObject | any): MaterialExpressionDistance;
}

declare class MaterialExpressionDistanceCullFade extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionDistanceCullFade;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDistanceCullFade;
	static GetDefaultObject(): MaterialExpressionDistanceCullFade;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDistanceCullFade;
	static C(Other: UObject | any): MaterialExpressionDistanceCullFade;
}

declare class MaterialExpressionDistanceFieldApproxAO extends MaterialExpression { 
	Position: ExpressionInput;
	Normal: ExpressionInput;
	BaseDistance: ExpressionInput;
	BaseDistanceDefault: number;
	Radius: ExpressionInput;
	RadiusDefault: number;
	NumSteps: number;
	StepScaleDefault: number;
	static Load(ResourceName: string): MaterialExpressionDistanceFieldApproxAO;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDistanceFieldApproxAO;
	static GetDefaultObject(): MaterialExpressionDistanceFieldApproxAO;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDistanceFieldApproxAO;
	static C(Other: UObject | any): MaterialExpressionDistanceFieldApproxAO;
}

declare class MaterialExpressionDistanceFieldGradient extends MaterialExpression { 
	Position: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDistanceFieldGradient;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDistanceFieldGradient;
	static GetDefaultObject(): MaterialExpressionDistanceFieldGradient;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDistanceFieldGradient;
	static C(Other: UObject | any): MaterialExpressionDistanceFieldGradient;
}

declare class MaterialExpressionDistanceFieldsRenderingSwitch extends MaterialExpression { 
	No: ExpressionInput;
	Yes: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDistanceFieldsRenderingSwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDistanceFieldsRenderingSwitch;
	static GetDefaultObject(): MaterialExpressionDistanceFieldsRenderingSwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDistanceFieldsRenderingSwitch;
	static C(Other: UObject | any): MaterialExpressionDistanceFieldsRenderingSwitch;
}

declare class MaterialExpressionDistanceToNearestSurface extends MaterialExpression { 
	Position: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDistanceToNearestSurface;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDistanceToNearestSurface;
	static GetDefaultObject(): MaterialExpressionDistanceToNearestSurface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDistanceToNearestSurface;
	static C(Other: UObject | any): MaterialExpressionDistanceToNearestSurface;
}

declare class MaterialExpressionDivide extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	ConstA: number;
	ConstB: number;
	static Load(ResourceName: string): MaterialExpressionDivide;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDivide;
	static GetDefaultObject(): MaterialExpressionDivide;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDivide;
	static C(Other: UObject | any): MaterialExpressionDivide;
}

declare class MaterialExpressionDotProduct extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionDotProduct;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDotProduct;
	static GetDefaultObject(): MaterialExpressionDotProduct;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDotProduct;
	static C(Other: UObject | any): MaterialExpressionDotProduct;
}

declare class MaterialExpressionDoubleVectorParameter extends MaterialExpressionParameter { 
	DefaultValue: Vector4d;
	static Load(ResourceName: string): MaterialExpressionDoubleVectorParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDoubleVectorParameter;
	static GetDefaultObject(): MaterialExpressionDoubleVectorParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDoubleVectorParameter;
	static C(Other: UObject | any): MaterialExpressionDoubleVectorParameter;
}

declare class MaterialExpressionDynamicParameter extends MaterialExpression { 
	ParamNames: string[];
	DefaultValue: LinearColor;
	ParameterIndex: number;
	static Load(ResourceName: string): MaterialExpressionDynamicParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDynamicParameter;
	static GetDefaultObject(): MaterialExpressionDynamicParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionDynamicParameter;
	static C(Other: UObject | any): MaterialExpressionDynamicParameter;
}

declare class MaterialExpressionEyeAdaptation extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionEyeAdaptation;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionEyeAdaptation;
	static GetDefaultObject(): MaterialExpressionEyeAdaptation;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionEyeAdaptation;
	static C(Other: UObject | any): MaterialExpressionEyeAdaptation;
}

declare class MaterialExpressionEyeAdaptationInverse extends MaterialExpression { 
	LightValueInput: ExpressionInput;
	AlphaInput: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionEyeAdaptationInverse;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionEyeAdaptationInverse;
	static GetDefaultObject(): MaterialExpressionEyeAdaptationInverse;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionEyeAdaptationInverse;
	static C(Other: UObject | any): MaterialExpressionEyeAdaptationInverse;
}

declare class MaterialExpressionFeatureLevelSwitch extends MaterialExpression { 
	Default: ExpressionInput;
	Inputs: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionFeatureLevelSwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFeatureLevelSwitch;
	static GetDefaultObject(): MaterialExpressionFeatureLevelSwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionFeatureLevelSwitch;
	static C(Other: UObject | any): MaterialExpressionFeatureLevelSwitch;
}

declare class MaterialExpressionFloor extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionFloor;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFloor;
	static GetDefaultObject(): MaterialExpressionFloor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionFloor;
	static C(Other: UObject | any): MaterialExpressionFloor;
}

declare class MaterialExpressionFmod extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionFmod;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFmod;
	static GetDefaultObject(): MaterialExpressionFmod;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionFmod;
	static C(Other: UObject | any): MaterialExpressionFmod;
}

declare class MaterialExpressionFontSample extends MaterialExpression { 
	Font: Font;
	FontTexturePage: number;
	static Load(ResourceName: string): MaterialExpressionFontSample;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFontSample;
	static GetDefaultObject(): MaterialExpressionFontSample;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionFontSample;
	static C(Other: UObject | any): MaterialExpressionFontSample;
}

declare class MaterialExpressionFontSampleParameter extends MaterialExpressionFontSample { 
	ParameterName: string;
	ExpressionGUID: Guid;
	Group: string;
	SortPriority: number;
	static Load(ResourceName: string): MaterialExpressionFontSampleParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFontSampleParameter;
	static GetDefaultObject(): MaterialExpressionFontSampleParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionFontSampleParameter;
	static C(Other: UObject | any): MaterialExpressionFontSampleParameter;
}

declare class MaterialExpressionForLoop extends MaterialExpression { 
	LoopBody: ExpressionExecOutput;
	Completed: ExpressionExecOutput;
	StartIndex: ExpressionInput;
	EndIndex: ExpressionInput;
	IndexStep: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionForLoop;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionForLoop;
	static GetDefaultObject(): MaterialExpressionForLoop;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionForLoop;
	static C(Other: UObject | any): MaterialExpressionForLoop;
}

declare class MaterialExpressionFrac extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionFrac;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFrac;
	static GetDefaultObject(): MaterialExpressionFrac;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionFrac;
	static C(Other: UObject | any): MaterialExpressionFrac;
}

declare class MaterialExpressionFresnel extends MaterialExpression { 
	ExponentIn: ExpressionInput;
	Exponent: number;
	BaseReflectFractionIn: ExpressionInput;
	BaseReflectFraction: number;
	Normal: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionFresnel;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFresnel;
	static GetDefaultObject(): MaterialExpressionFresnel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionFresnel;
	static C(Other: UObject | any): MaterialExpressionFresnel;
}

declare class MaterialExpressionGenericConstant extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionGenericConstant;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionGenericConstant;
	static GetDefaultObject(): MaterialExpressionGenericConstant;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionGenericConstant;
	static C(Other: UObject | any): MaterialExpressionGenericConstant;
}

declare class MaterialExpressionConstantDouble extends MaterialExpressionGenericConstant { 
	Value: number;
	static Load(ResourceName: string): MaterialExpressionConstantDouble;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionConstantDouble;
	static GetDefaultObject(): MaterialExpressionConstantDouble;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionConstantDouble;
	static C(Other: UObject | any): MaterialExpressionConstantDouble;
}

declare class MaterialExpressionGetLocal extends MaterialExpression { 
	LocalName: string;
	static Load(ResourceName: string): MaterialExpressionGetLocal;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionGetLocal;
	static GetDefaultObject(): MaterialExpressionGetLocal;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionGetLocal;
	static C(Other: UObject | any): MaterialExpressionGetLocal;
}

declare class MaterialExpressionGetMaterialAttributes extends MaterialExpression { 
	MaterialAttributes: MaterialAttributesInput;
	AttributeGetTypes: Guid[];
	static Load(ResourceName: string): MaterialExpressionGetMaterialAttributes;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionGetMaterialAttributes;
	static GetDefaultObject(): MaterialExpressionGetMaterialAttributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionGetMaterialAttributes;
	static C(Other: UObject | any): MaterialExpressionGetMaterialAttributes;
}

declare class MaterialExpressionGIReplace extends MaterialExpression { 
	Default: ExpressionInput;
	StaticIndirect: ExpressionInput;
	DynamicIndirect: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionGIReplace;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionGIReplace;
	static GetDefaultObject(): MaterialExpressionGIReplace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionGIReplace;
	static C(Other: UObject | any): MaterialExpressionGIReplace;
}

declare class MaterialExpressionHairAttributes extends MaterialExpression { 
	bUseTangentSpace: boolean;
	static Load(ResourceName: string): MaterialExpressionHairAttributes;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionHairAttributes;
	static GetDefaultObject(): MaterialExpressionHairAttributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionHairAttributes;
	static C(Other: UObject | any): MaterialExpressionHairAttributes;
}

declare class MaterialExpressionHairColor extends MaterialExpression { 
	Melanin: ExpressionInput;
	Redness: ExpressionInput;
	DyeColor: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionHairColor;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionHairColor;
	static GetDefaultObject(): MaterialExpressionHairColor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionHairColor;
	static C(Other: UObject | any): MaterialExpressionHairColor;
}

declare class MaterialExpressionIf extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	AGreaterThanB: ExpressionInput;
	AEqualsB: ExpressionInput;
	ALessThanB: ExpressionInput;
	EqualsThreshold: number;
	ConstB: number;
	ConstAEqualsB: number;
	static Load(ResourceName: string): MaterialExpressionIf;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionIf;
	static GetDefaultObject(): MaterialExpressionIf;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionIf;
	static C(Other: UObject | any): MaterialExpressionIf;
}

declare class MaterialExpressionIfThenElse extends MaterialExpression { 
	then: ExpressionExecOutput;
	else: ExpressionExecOutput;
	Condition: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionIfThenElse;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionIfThenElse;
	static GetDefaultObject(): MaterialExpressionIfThenElse;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionIfThenElse;
	static C(Other: UObject | any): MaterialExpressionIfThenElse;
}

declare class MaterialExpressionInverseLinearInterpolate extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	Value: ExpressionInput;
	ConstA: number;
	ConstB: number;
	ConstValue: number;
	bClampResult: boolean;
	static Load(ResourceName: string): MaterialExpressionInverseLinearInterpolate;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionInverseLinearInterpolate;
	static GetDefaultObject(): MaterialExpressionInverseLinearInterpolate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionInverseLinearInterpolate;
	static C(Other: UObject | any): MaterialExpressionInverseLinearInterpolate;
}

declare class MaterialExpressionIsOrthographic extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionIsOrthographic;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionIsOrthographic;
	static GetDefaultObject(): MaterialExpressionIsOrthographic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionIsOrthographic;
	static C(Other: UObject | any): MaterialExpressionIsOrthographic;
}

declare class MaterialExpressionLightmapUVs extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionLightmapUVs;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLightmapUVs;
	static GetDefaultObject(): MaterialExpressionLightmapUVs;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLightmapUVs;
	static C(Other: UObject | any): MaterialExpressionLightmapUVs;
}

declare class MaterialExpressionLightmassReplace extends MaterialExpression { 
	Realtime: ExpressionInput;
	Lightmass: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionLightmassReplace;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLightmassReplace;
	static GetDefaultObject(): MaterialExpressionLightmassReplace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLightmassReplace;
	static C(Other: UObject | any): MaterialExpressionLightmassReplace;
}

declare class MaterialExpressionLightVector extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionLightVector;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLightVector;
	static GetDefaultObject(): MaterialExpressionLightVector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLightVector;
	static C(Other: UObject | any): MaterialExpressionLightVector;
}

declare class MaterialExpressionLinearInterpolate extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	Alpha: ExpressionInput;
	ConstA: number;
	ConstB: number;
	ConstAlpha: number;
	static Load(ResourceName: string): MaterialExpressionLinearInterpolate;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLinearInterpolate;
	static GetDefaultObject(): MaterialExpressionLinearInterpolate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLinearInterpolate;
	static C(Other: UObject | any): MaterialExpressionLinearInterpolate;
}

declare class MaterialExpressionLogarithm10 extends MaterialExpression { 
	X: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionLogarithm10;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLogarithm10;
	static GetDefaultObject(): MaterialExpressionLogarithm10;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLogarithm10;
	static C(Other: UObject | any): MaterialExpressionLogarithm10;
}

declare class MaterialExpressionLogarithm2 extends MaterialExpression { 
	X: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionLogarithm2;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionLogarithm2;
	static GetDefaultObject(): MaterialExpressionLogarithm2;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionLogarithm2;
	static C(Other: UObject | any): MaterialExpressionLogarithm2;
}

declare class MaterialExpressionMakeMaterialAttributes extends MaterialExpression { 
	BaseColor: ExpressionInput;
	Metallic: ExpressionInput;
	Specular: ExpressionInput;
	Roughness: ExpressionInput;
	Anisotropy: ExpressionInput;
	EmissiveColor: ExpressionInput;
	Opacity: ExpressionInput;
	OpacityMask: ExpressionInput;
	Normal: ExpressionInput;
	Tangent: ExpressionInput;
	WorldPositionOffset: ExpressionInput;
	SubsurfaceColor: ExpressionInput;
	ClearCoat: ExpressionInput;
	ClearCoatRoughness: ExpressionInput;
	AmbientOcclusion: ExpressionInput;
	Refraction: ExpressionInput;
	CustomizedUVs: ExpressionInput;
	PixelDepthOffset: ExpressionInput;
	ShadingModel: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionMakeMaterialAttributes;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMakeMaterialAttributes;
	static GetDefaultObject(): MaterialExpressionMakeMaterialAttributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMakeMaterialAttributes;
	static C(Other: UObject | any): MaterialExpressionMakeMaterialAttributes;
}

declare class MaterialExpressionMapARPassthroughCameraUV extends MaterialExpression { 
	Coordinates: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionMapARPassthroughCameraUV;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMapARPassthroughCameraUV;
	static GetDefaultObject(): MaterialExpressionMapARPassthroughCameraUV;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMapARPassthroughCameraUV;
	static C(Other: UObject | any): MaterialExpressionMapARPassthroughCameraUV;
}

declare class MaterialExpressionMaterialAttributeLayers extends MaterialExpression { 
	Input: MaterialAttributesInput;
	DefaultLayers: MaterialLayersFunctions;
	LayerCallers: MaterialExpressionMaterialFunctionCall[];
	NumActiveLayerCallers: number;
	BlendCallers: MaterialExpressionMaterialFunctionCall[];
	NumActiveBlendCallers: number;
	bIsLayerGraphBuilt: boolean;
	static Load(ResourceName: string): MaterialExpressionMaterialAttributeLayers;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMaterialAttributeLayers;
	static GetDefaultObject(): MaterialExpressionMaterialAttributeLayers;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMaterialAttributeLayers;
	static C(Other: UObject | any): MaterialExpressionMaterialAttributeLayers;
}

declare class MaterialExpressionMaterialLayerOutput extends MaterialExpressionFunctionOutput { 
	static Load(ResourceName: string): MaterialExpressionMaterialLayerOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMaterialLayerOutput;
	static GetDefaultObject(): MaterialExpressionMaterialLayerOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMaterialLayerOutput;
	static C(Other: UObject | any): MaterialExpressionMaterialLayerOutput;
}

declare class MaterialExpressionMaterialProxyReplace extends MaterialExpression { 
	Realtime: ExpressionInput;
	MaterialProxy: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionMaterialProxyReplace;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMaterialProxyReplace;
	static GetDefaultObject(): MaterialExpressionMaterialProxyReplace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMaterialProxyReplace;
	static C(Other: UObject | any): MaterialExpressionMaterialProxyReplace;
}

declare class MaterialExpressionMax extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	ConstA: number;
	ConstB: number;
	static Load(ResourceName: string): MaterialExpressionMax;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMax;
	static GetDefaultObject(): MaterialExpressionMax;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMax;
	static C(Other: UObject | any): MaterialExpressionMax;
}

declare class MaterialExpressionMin extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	ConstA: number;
	ConstB: number;
	static Load(ResourceName: string): MaterialExpressionMin;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMin;
	static GetDefaultObject(): MaterialExpressionMin;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMin;
	static C(Other: UObject | any): MaterialExpressionMin;
}

declare class MaterialExpressionMultiply extends MaterialExpression { 
	A: ExpressionInput;
	B: ExpressionInput;
	ConstA: number;
	ConstB: number;
	static Load(ResourceName: string): MaterialExpressionMultiply;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMultiply;
	static GetDefaultObject(): MaterialExpressionMultiply;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMultiply;
	static C(Other: UObject | any): MaterialExpressionMultiply;
}

declare class MaterialExpressionNamedRerouteBase extends MaterialExpressionRerouteBase { 
	static Load(ResourceName: string): MaterialExpressionNamedRerouteBase;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionNamedRerouteBase;
	static GetDefaultObject(): MaterialExpressionNamedRerouteBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionNamedRerouteBase;
	static C(Other: UObject | any): MaterialExpressionNamedRerouteBase;
}

declare class MaterialExpressionNamedRerouteDeclaration extends MaterialExpressionNamedRerouteBase { 
	Input: ExpressionInput;
	Name: string;
	NodeColor: LinearColor;
	VariableGuid: Guid;
	static Load(ResourceName: string): MaterialExpressionNamedRerouteDeclaration;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionNamedRerouteDeclaration;
	static GetDefaultObject(): MaterialExpressionNamedRerouteDeclaration;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionNamedRerouteDeclaration;
	static C(Other: UObject | any): MaterialExpressionNamedRerouteDeclaration;
}

declare class MaterialExpressionNamedRerouteUsage extends MaterialExpressionNamedRerouteBase { 
	Declaration: MaterialExpressionNamedRerouteDeclaration;
	DeclarationGuid: Guid;
	static Load(ResourceName: string): MaterialExpressionNamedRerouteUsage;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionNamedRerouteUsage;
	static GetDefaultObject(): MaterialExpressionNamedRerouteUsage;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionNamedRerouteUsage;
	static C(Other: UObject | any): MaterialExpressionNamedRerouteUsage;
}

declare class MaterialExpressionNaniteReplace extends MaterialExpression { 
	Default: ExpressionInput;
	Nanite: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionNaniteReplace;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionNaniteReplace;
	static GetDefaultObject(): MaterialExpressionNaniteReplace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionNaniteReplace;
	static C(Other: UObject | any): MaterialExpressionNaniteReplace;
}

declare type ENoiseFunction = 'NOISEFUNCTION_SimplexTex' | 'NOISEFUNCTION_GradientTex' | 'NOISEFUNCTION_GradientTex3D' | 'NOISEFUNCTION_GradientALU' | 'NOISEFUNCTION_ValueALU' | 'NOISEFUNCTION_VoronoiALU' | 'NOISEFUNCTION_MAX';
declare var ENoiseFunction : { NOISEFUNCTION_SimplexTex:'NOISEFUNCTION_SimplexTex',NOISEFUNCTION_GradientTex:'NOISEFUNCTION_GradientTex',NOISEFUNCTION_GradientTex3D:'NOISEFUNCTION_GradientTex3D',NOISEFUNCTION_GradientALU:'NOISEFUNCTION_GradientALU',NOISEFUNCTION_ValueALU:'NOISEFUNCTION_ValueALU',NOISEFUNCTION_VoronoiALU:'NOISEFUNCTION_VoronoiALU',NOISEFUNCTION_MAX:'NOISEFUNCTION_MAX', };
declare class MaterialExpressionNoise extends MaterialExpression { 
	Position: ExpressionInput;
	FilterWidth: ExpressionInput;
	Scale: number;
	Quality: number;
	NoiseFunction: ENoiseFunction;
	bTurbulence: boolean;
	Levels: number;
	OutputMin: number;
	OutputMax: number;
	LevelScale: number;
	bTiling: boolean;
	RepeatSize: number;
	static Load(ResourceName: string): MaterialExpressionNoise;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionNoise;
	static GetDefaultObject(): MaterialExpressionNoise;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionNoise;
	static C(Other: UObject | any): MaterialExpressionNoise;
}

declare class MaterialExpressionNormalize extends MaterialExpression { 
	VectorInput: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionNormalize;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionNormalize;
	static GetDefaultObject(): MaterialExpressionNormalize;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionNormalize;
	static C(Other: UObject | any): MaterialExpressionNormalize;
}

declare class MaterialExpressionObjectBounds extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionObjectBounds;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionObjectBounds;
	static GetDefaultObject(): MaterialExpressionObjectBounds;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionObjectBounds;
	static C(Other: UObject | any): MaterialExpressionObjectBounds;
}

declare class MaterialExpressionObjectOrientation extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionObjectOrientation;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionObjectOrientation;
	static GetDefaultObject(): MaterialExpressionObjectOrientation;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionObjectOrientation;
	static C(Other: UObject | any): MaterialExpressionObjectOrientation;
}

declare class MaterialExpressionObjectPositionWS extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionObjectPositionWS;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionObjectPositionWS;
	static GetDefaultObject(): MaterialExpressionObjectPositionWS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionObjectPositionWS;
	static C(Other: UObject | any): MaterialExpressionObjectPositionWS;
}

declare class MaterialExpressionObjectRadius extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionObjectRadius;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionObjectRadius;
	static GetDefaultObject(): MaterialExpressionObjectRadius;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionObjectRadius;
	static C(Other: UObject | any): MaterialExpressionObjectRadius;
}

declare class MaterialExpressionOneMinus extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionOneMinus;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionOneMinus;
	static GetDefaultObject(): MaterialExpressionOneMinus;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionOneMinus;
	static C(Other: UObject | any): MaterialExpressionOneMinus;
}

declare class MaterialExpressionPanner extends MaterialExpression { 
	Coordinate: ExpressionInput;
	Time: ExpressionInput;
	Speed: ExpressionInput;
	SpeedX: number;
	SpeedY: number;
	ConstCoordinate: number;
	bFractionalPart: boolean;
	static Load(ResourceName: string): MaterialExpressionPanner;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPanner;
	static GetDefaultObject(): MaterialExpressionPanner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPanner;
	static C(Other: UObject | any): MaterialExpressionPanner;
}

declare class MaterialExpressionParticleColor extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleColor;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleColor;
	static GetDefaultObject(): MaterialExpressionParticleColor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleColor;
	static C(Other: UObject | any): MaterialExpressionParticleColor;
}

declare class MaterialExpressionParticleDirection extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleDirection;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleDirection;
	static GetDefaultObject(): MaterialExpressionParticleDirection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleDirection;
	static C(Other: UObject | any): MaterialExpressionParticleDirection;
}

declare class MaterialExpressionParticleMacroUV extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleMacroUV;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleMacroUV;
	static GetDefaultObject(): MaterialExpressionParticleMacroUV;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleMacroUV;
	static C(Other: UObject | any): MaterialExpressionParticleMacroUV;
}

declare class MaterialExpressionParticleMotionBlurFade extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleMotionBlurFade;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleMotionBlurFade;
	static GetDefaultObject(): MaterialExpressionParticleMotionBlurFade;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleMotionBlurFade;
	static C(Other: UObject | any): MaterialExpressionParticleMotionBlurFade;
}

declare class MaterialExpressionParticlePositionWS extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticlePositionWS;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticlePositionWS;
	static GetDefaultObject(): MaterialExpressionParticlePositionWS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticlePositionWS;
	static C(Other: UObject | any): MaterialExpressionParticlePositionWS;
}

declare class MaterialExpressionParticleRadius extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleRadius;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleRadius;
	static GetDefaultObject(): MaterialExpressionParticleRadius;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleRadius;
	static C(Other: UObject | any): MaterialExpressionParticleRadius;
}

declare class MaterialExpressionParticleRandom extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleRandom;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleRandom;
	static GetDefaultObject(): MaterialExpressionParticleRandom;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleRandom;
	static C(Other: UObject | any): MaterialExpressionParticleRandom;
}

declare class MaterialExpressionParticleRelativeTime extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleRelativeTime;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleRelativeTime;
	static GetDefaultObject(): MaterialExpressionParticleRelativeTime;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleRelativeTime;
	static C(Other: UObject | any): MaterialExpressionParticleRelativeTime;
}

declare class MaterialExpressionParticleSize extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleSize;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleSize;
	static GetDefaultObject(): MaterialExpressionParticleSize;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleSize;
	static C(Other: UObject | any): MaterialExpressionParticleSize;
}

declare class MaterialExpressionParticleSpeed extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleSpeed;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleSpeed;
	static GetDefaultObject(): MaterialExpressionParticleSpeed;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleSpeed;
	static C(Other: UObject | any): MaterialExpressionParticleSpeed;
}

declare class MaterialExpressionParticleSubUV extends MaterialExpressionTextureSample { 
	bBlend: boolean;
	static Load(ResourceName: string): MaterialExpressionParticleSubUV;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleSubUV;
	static GetDefaultObject(): MaterialExpressionParticleSubUV;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleSubUV;
	static C(Other: UObject | any): MaterialExpressionParticleSubUV;
}

declare class MaterialExpressionParticleSubUVProperties extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionParticleSubUVProperties;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParticleSubUVProperties;
	static GetDefaultObject(): MaterialExpressionParticleSubUVProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParticleSubUVProperties;
	static C(Other: UObject | any): MaterialExpressionParticleSubUVProperties;
}

declare class MaterialExpressionPathTracingQualitySwitch extends MaterialExpression { 
	Normal: ExpressionInput;
	PathTraced: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionPathTracingQualitySwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPathTracingQualitySwitch;
	static GetDefaultObject(): MaterialExpressionPathTracingQualitySwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPathTracingQualitySwitch;
	static C(Other: UObject | any): MaterialExpressionPathTracingQualitySwitch;
}

declare class MaterialExpressionPerInstanceCustomData extends MaterialExpression { 
	DefaultValue: ExpressionInput;
	ConstDefaultValue: number;
	DataIndex: number;
	static Load(ResourceName: string): MaterialExpressionPerInstanceCustomData;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPerInstanceCustomData;
	static GetDefaultObject(): MaterialExpressionPerInstanceCustomData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPerInstanceCustomData;
	static C(Other: UObject | any): MaterialExpressionPerInstanceCustomData;
}

declare class MaterialExpressionPerInstanceCustomData3Vector extends MaterialExpression { 
	DefaultValue: ExpressionInput;
	ConstDefaultValue: LinearColor;
	DataIndex: number;
	static Load(ResourceName: string): MaterialExpressionPerInstanceCustomData3Vector;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPerInstanceCustomData3Vector;
	static GetDefaultObject(): MaterialExpressionPerInstanceCustomData3Vector;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPerInstanceCustomData3Vector;
	static C(Other: UObject | any): MaterialExpressionPerInstanceCustomData3Vector;
}

declare class MaterialExpressionPerInstanceFadeAmount extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPerInstanceFadeAmount;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPerInstanceFadeAmount;
	static GetDefaultObject(): MaterialExpressionPerInstanceFadeAmount;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPerInstanceFadeAmount;
	static C(Other: UObject | any): MaterialExpressionPerInstanceFadeAmount;
}

declare class MaterialExpressionPerInstanceRandom extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPerInstanceRandom;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPerInstanceRandom;
	static GetDefaultObject(): MaterialExpressionPerInstanceRandom;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPerInstanceRandom;
	static C(Other: UObject | any): MaterialExpressionPerInstanceRandom;
}

declare class MaterialExpressionPixelDepth extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPixelDepth;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPixelDepth;
	static GetDefaultObject(): MaterialExpressionPixelDepth;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPixelDepth;
	static C(Other: UObject | any): MaterialExpressionPixelDepth;
}

declare class MaterialExpressionPixelNormalWS extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPixelNormalWS;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPixelNormalWS;
	static GetDefaultObject(): MaterialExpressionPixelNormalWS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPixelNormalWS;
	static C(Other: UObject | any): MaterialExpressionPixelNormalWS;
}

declare class MaterialExpressionPower extends MaterialExpression { 
	Base: ExpressionInput;
	Exponent: ExpressionInput;
	ConstExponent: number;
	static Load(ResourceName: string): MaterialExpressionPower;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPower;
	static GetDefaultObject(): MaterialExpressionPower;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPower;
	static C(Other: UObject | any): MaterialExpressionPower;
}

declare class MaterialExpressionPrecomputedAOMask extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPrecomputedAOMask;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPrecomputedAOMask;
	static GetDefaultObject(): MaterialExpressionPrecomputedAOMask;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPrecomputedAOMask;
	static C(Other: UObject | any): MaterialExpressionPrecomputedAOMask;
}

declare class MaterialExpressionPreSkinnedLocalBounds extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPreSkinnedLocalBounds;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPreSkinnedLocalBounds;
	static GetDefaultObject(): MaterialExpressionPreSkinnedLocalBounds;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPreSkinnedLocalBounds;
	static C(Other: UObject | any): MaterialExpressionPreSkinnedLocalBounds;
}

declare class MaterialExpressionPreSkinnedNormal extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPreSkinnedNormal;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPreSkinnedNormal;
	static GetDefaultObject(): MaterialExpressionPreSkinnedNormal;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPreSkinnedNormal;
	static C(Other: UObject | any): MaterialExpressionPreSkinnedNormal;
}

declare class MaterialExpressionPreSkinnedPosition extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionPreSkinnedPosition;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPreSkinnedPosition;
	static GetDefaultObject(): MaterialExpressionPreSkinnedPosition;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPreSkinnedPosition;
	static C(Other: UObject | any): MaterialExpressionPreSkinnedPosition;
}

declare class MaterialExpressionPreviousFrameSwitch extends MaterialExpression { 
	CurrentFrame: ExpressionInput;
	PreviousFrame: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionPreviousFrameSwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPreviousFrameSwitch;
	static GetDefaultObject(): MaterialExpressionPreviousFrameSwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPreviousFrameSwitch;
	static C(Other: UObject | any): MaterialExpressionPreviousFrameSwitch;
}

declare class MaterialExpressionQualitySwitch extends MaterialExpression { 
	Default: ExpressionInput;
	Inputs: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionQualitySwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionQualitySwitch;
	static GetDefaultObject(): MaterialExpressionQualitySwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionQualitySwitch;
	static C(Other: UObject | any): MaterialExpressionQualitySwitch;
}

declare class MaterialExpressionRayTracingQualitySwitch extends MaterialExpression { 
	Normal: ExpressionInput;
	RayTraced: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionRayTracingQualitySwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRayTracingQualitySwitch;
	static GetDefaultObject(): MaterialExpressionRayTracingQualitySwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRayTracingQualitySwitch;
	static C(Other: UObject | any): MaterialExpressionRayTracingQualitySwitch;
}

declare class MaterialExpressionReflectionCapturePassSwitch extends MaterialExpression { 
	Default: ExpressionInput;
	Reflection: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionReflectionCapturePassSwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionReflectionCapturePassSwitch;
	static GetDefaultObject(): MaterialExpressionReflectionCapturePassSwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionReflectionCapturePassSwitch;
	static C(Other: UObject | any): MaterialExpressionReflectionCapturePassSwitch;
}

declare class MaterialExpressionReflectionVectorWS extends MaterialExpression { 
	CustomWorldNormal: ExpressionInput;
	bNormalizeCustomWorldNormal: boolean;
	static Load(ResourceName: string): MaterialExpressionReflectionVectorWS;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionReflectionVectorWS;
	static GetDefaultObject(): MaterialExpressionReflectionVectorWS;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionReflectionVectorWS;
	static C(Other: UObject | any): MaterialExpressionReflectionVectorWS;
}

declare class MaterialExpressionRotateAboutAxis extends MaterialExpression { 
	NormalizedRotationAxis: ExpressionInput;
	RotationAngle: ExpressionInput;
	PivotPoint: ExpressionInput;
	Position: ExpressionInput;
	Period: number;
	static Load(ResourceName: string): MaterialExpressionRotateAboutAxis;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRotateAboutAxis;
	static GetDefaultObject(): MaterialExpressionRotateAboutAxis;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRotateAboutAxis;
	static C(Other: UObject | any): MaterialExpressionRotateAboutAxis;
}

declare class MaterialExpressionRotator extends MaterialExpression { 
	Coordinate: ExpressionInput;
	Time: ExpressionInput;
	CenterX: number;
	CenterY: number;
	Speed: number;
	ConstCoordinate: number;
	static Load(ResourceName: string): MaterialExpressionRotator;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRotator;
	static GetDefaultObject(): MaterialExpressionRotator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRotator;
	static C(Other: UObject | any): MaterialExpressionRotator;
}

declare class MaterialExpressionRound extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionRound;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRound;
	static GetDefaultObject(): MaterialExpressionRound;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRound;
	static C(Other: UObject | any): MaterialExpressionRound;
}

declare class MaterialExpressionRuntimeVirtualTextureOutput extends MaterialExpressionCustomOutput { 
	BaseColor: ExpressionInput;
	Specular: ExpressionInput;
	Roughness: ExpressionInput;
	Normal: ExpressionInput;
	WorldHeight: ExpressionInput;
	Opacity: ExpressionInput;
	mask: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionRuntimeVirtualTextureOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRuntimeVirtualTextureOutput;
	static GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRuntimeVirtualTextureOutput;
	static C(Other: UObject | any): MaterialExpressionRuntimeVirtualTextureOutput;
}

declare class MaterialExpressionRuntimeVirtualTextureReplace extends MaterialExpression { 
	Default: ExpressionInput;
	VirtualTextureOutput: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionRuntimeVirtualTextureReplace;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRuntimeVirtualTextureReplace;
	static GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureReplace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRuntimeVirtualTextureReplace;
	static C(Other: UObject | any): MaterialExpressionRuntimeVirtualTextureReplace;
}

declare type ERuntimeVirtualTextureMipValueMode = 'RVTMVM_None' | 'RVTMVM_MipLevel' | 'RVTMVM_MipBias' | 'RVTMVM_RecalculateDerivatives' | 'RVTMVM_MAX';
declare var ERuntimeVirtualTextureMipValueMode : { RVTMVM_None:'RVTMVM_None',RVTMVM_MipLevel:'RVTMVM_MipLevel',RVTMVM_MipBias:'RVTMVM_MipBias',RVTMVM_RecalculateDerivatives:'RVTMVM_RecalculateDerivatives',RVTMVM_MAX:'RVTMVM_MAX', };
declare type ERuntimeVirtualTextureTextureAddressMode = 'RVTTA_Clamp' | 'RVTTA_Wrap' | 'RVTTA_MAX';
declare var ERuntimeVirtualTextureTextureAddressMode : { RVTTA_Clamp:'RVTTA_Clamp',RVTTA_Wrap:'RVTTA_Wrap',RVTTA_MAX:'RVTTA_MAX', };
declare class MaterialExpressionRuntimeVirtualTextureSample extends MaterialExpression { 
	Coordinates: ExpressionInput;
	WorldPosition: ExpressionInput;
	MipValue: ExpressionInput;
	VirtualTexture: RuntimeVirtualTexture;
	MaterialType: ERuntimeVirtualTextureMaterialType;
	bSinglePhysicalSpace: boolean;
	bAdaptive: boolean;
	MipValueMode: ERuntimeVirtualTextureMipValueMode;
	TextureAddressMode: ERuntimeVirtualTextureTextureAddressMode;
	static Load(ResourceName: string): MaterialExpressionRuntimeVirtualTextureSample;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRuntimeVirtualTextureSample;
	static GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureSample;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRuntimeVirtualTextureSample;
	static C(Other: UObject | any): MaterialExpressionRuntimeVirtualTextureSample;
}

declare class MaterialExpressionRuntimeVirtualTextureSampleParameter extends MaterialExpressionRuntimeVirtualTextureSample { 
	ParameterName: string;
	ExpressionGUID: Guid;
	Group: string;
	SortPriority: number;
	static Load(ResourceName: string): MaterialExpressionRuntimeVirtualTextureSampleParameter;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionRuntimeVirtualTextureSampleParameter;
	static GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureSampleParameter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionRuntimeVirtualTextureSampleParameter;
	static C(Other: UObject | any): MaterialExpressionRuntimeVirtualTextureSampleParameter;
}

declare class MaterialExpressionSamplePhysicsVectorField extends MaterialExpression { 
	WorldPosition: ExpressionInput;
	FieldTarget: EFieldVectorType;
	static Load(ResourceName: string): MaterialExpressionSamplePhysicsVectorField;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSamplePhysicsVectorField;
	static GetDefaultObject(): MaterialExpressionSamplePhysicsVectorField;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSamplePhysicsVectorField;
	static C(Other: UObject | any): MaterialExpressionSamplePhysicsVectorField;
}

declare class MaterialExpressionSamplePhysicsScalarField extends MaterialExpression { 
	WorldPosition: ExpressionInput;
	FieldTarget: EFieldScalarType;
	static Load(ResourceName: string): MaterialExpressionSamplePhysicsScalarField;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSamplePhysicsScalarField;
	static GetDefaultObject(): MaterialExpressionSamplePhysicsScalarField;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSamplePhysicsScalarField;
	static C(Other: UObject | any): MaterialExpressionSamplePhysicsScalarField;
}

declare class MaterialExpressionSamplePhysicsIntegerField extends MaterialExpression { 
	WorldPosition: ExpressionInput;
	FieldTarget: EFieldIntegerType;
	static Load(ResourceName: string): MaterialExpressionSamplePhysicsIntegerField;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSamplePhysicsIntegerField;
	static GetDefaultObject(): MaterialExpressionSamplePhysicsIntegerField;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSamplePhysicsIntegerField;
	static C(Other: UObject | any): MaterialExpressionSamplePhysicsIntegerField;
}

declare class MaterialExpressionSaturate extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionSaturate;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSaturate;
	static GetDefaultObject(): MaterialExpressionSaturate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSaturate;
	static C(Other: UObject | any): MaterialExpressionSaturate;
}

declare type EMaterialSceneAttributeInputMode = 'Coordinates' | 'OffsetFraction' | 'EMaterialSceneAttributeInputMode_MAX';
declare var EMaterialSceneAttributeInputMode : { Coordinates:'Coordinates',OffsetFraction:'OffsetFraction',EMaterialSceneAttributeInputMode_MAX:'EMaterialSceneAttributeInputMode_MAX', };
declare class MaterialExpressionSceneColor extends MaterialExpression { 
	InputMode: EMaterialSceneAttributeInputMode;
	Input: ExpressionInput;
	OffsetFraction: ExpressionInput;
	ConstInput: Vector2D;
	static Load(ResourceName: string): MaterialExpressionSceneColor;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSceneColor;
	static GetDefaultObject(): MaterialExpressionSceneColor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSceneColor;
	static C(Other: UObject | any): MaterialExpressionSceneColor;
}

declare class MaterialExpressionSceneDepth extends MaterialExpression { 
	InputMode: EMaterialSceneAttributeInputMode;
	Input: ExpressionInput;
	Coordinates: ExpressionInput;
	ConstInput: Vector2D;
	static Load(ResourceName: string): MaterialExpressionSceneDepth;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSceneDepth;
	static GetDefaultObject(): MaterialExpressionSceneDepth;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSceneDepth;
	static C(Other: UObject | any): MaterialExpressionSceneDepth;
}

declare class MaterialExpressionSceneDepthWithoutWater extends MaterialExpression { 
	InputMode: EMaterialSceneAttributeInputMode;
	Input: ExpressionInput;
	ConstInput: Vector2D;
	FallbackDepth: number;
	static Load(ResourceName: string): MaterialExpressionSceneDepthWithoutWater;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSceneDepthWithoutWater;
	static GetDefaultObject(): MaterialExpressionSceneDepthWithoutWater;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSceneDepthWithoutWater;
	static C(Other: UObject | any): MaterialExpressionSceneDepthWithoutWater;
}

declare class MaterialExpressionSceneTexelSize extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionSceneTexelSize;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSceneTexelSize;
	static GetDefaultObject(): MaterialExpressionSceneTexelSize;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSceneTexelSize;
	static C(Other: UObject | any): MaterialExpressionSceneTexelSize;
}

declare type ESceneTextureId = 'PPI_SceneColor' | 'PPI_SceneDepth' | 'PPI_DiffuseColor' | 'PPI_SpecularColor' | 'PPI_SubsurfaceColor' | 'PPI_BaseColor' | 'PPI_Specular' | 'PPI_Metallic' | 'PPI_WorldNormal' | 'PPI_SeparateTranslucency' | 'PPI_Opacity' | 'PPI_Roughness' | 'PPI_MaterialAO' | 'PPI_CustomDepth' | 'PPI_PostProcessInput0' | 'PPI_PostProcessInput1' | 'PPI_PostProcessInput2' | 'PPI_PostProcessInput3' | 'PPI_PostProcessInput4' | 'PPI_PostProcessInput5' | 'PPI_PostProcessInput6' | 'PPI_DecalMask' | 'PPI_ShadingModelColor' | 'PPI_ShadingModelID' | 'PPI_AmbientOcclusion' | 'PPI_CustomStencil' | 'PPI_StoredBaseColor' | 'PPI_StoredSpecular' | 'PPI_Velocity' | 'PPI_WorldTangent' | 'PPI_Anisotropy' | 'PPI_MAX';
declare var ESceneTextureId : { PPI_SceneColor:'PPI_SceneColor',PPI_SceneDepth:'PPI_SceneDepth',PPI_DiffuseColor:'PPI_DiffuseColor',PPI_SpecularColor:'PPI_SpecularColor',PPI_SubsurfaceColor:'PPI_SubsurfaceColor',PPI_BaseColor:'PPI_BaseColor',PPI_Specular:'PPI_Specular',PPI_Metallic:'PPI_Metallic',PPI_WorldNormal:'PPI_WorldNormal',PPI_SeparateTranslucency:'PPI_SeparateTranslucency',PPI_Opacity:'PPI_Opacity',PPI_Roughness:'PPI_Roughness',PPI_MaterialAO:'PPI_MaterialAO',PPI_CustomDepth:'PPI_CustomDepth',PPI_PostProcessInput0:'PPI_PostProcessInput0',PPI_PostProcessInput1:'PPI_PostProcessInput1',PPI_PostProcessInput2:'PPI_PostProcessInput2',PPI_PostProcessInput3:'PPI_PostProcessInput3',PPI_PostProcessInput4:'PPI_PostProcessInput4',PPI_PostProcessInput5:'PPI_PostProcessInput5',PPI_PostProcessInput6:'PPI_PostProcessInput6',PPI_DecalMask:'PPI_DecalMask',PPI_ShadingModelColor:'PPI_ShadingModelColor',PPI_ShadingModelID:'PPI_ShadingModelID',PPI_AmbientOcclusion:'PPI_AmbientOcclusion',PPI_CustomStencil:'PPI_CustomStencil',PPI_StoredBaseColor:'PPI_StoredBaseColor',PPI_StoredSpecular:'PPI_StoredSpecular',PPI_Velocity:'PPI_Velocity',PPI_WorldTangent:'PPI_WorldTangent',PPI_Anisotropy:'PPI_Anisotropy',PPI_MAX:'PPI_MAX', };
declare class MaterialExpressionSceneTexture extends MaterialExpression { 
	Coordinates: ExpressionInput;
	SceneTextureId: ESceneTextureId;
	bFiltered: boolean;
	static Load(ResourceName: string): MaterialExpressionSceneTexture;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSceneTexture;
	static GetDefaultObject(): MaterialExpressionSceneTexture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSceneTexture;
	static C(Other: UObject | any): MaterialExpressionSceneTexture;
}

declare class MaterialExpressionScreenPosition extends MaterialExpression { 
	static Load(ResourceName: string): MaterialExpressionScreenPosition;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionScreenPosition;
	static GetDefaultObject(): MaterialExpressionScreenPosition;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionScreenPosition;
	static C(Other: UObject | any): MaterialExpressionScreenPosition;
}

declare class MaterialExpressionSetLocal extends MaterialExpression { 
	exec: ExpressionExecOutput;
	Value: ExpressionInput;
	LocalName: string;
	static Load(ResourceName: string): MaterialExpressionSetLocal;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSetLocal;
	static GetDefaultObject(): MaterialExpressionSetLocal;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSetLocal;
	static C(Other: UObject | any): MaterialExpressionSetLocal;
}

declare class MaterialExpressionSetMaterialAttributes extends MaterialExpression { 
	Inputs: ExpressionInput[];
	AttributeSetTypes: Guid[];
	static Load(ResourceName: string): MaterialExpressionSetMaterialAttributes;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSetMaterialAttributes;
	static GetDefaultObject(): MaterialExpressionSetMaterialAttributes;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSetMaterialAttributes;
	static C(Other: UObject | any): MaterialExpressionSetMaterialAttributes;
}

declare class MaterialExpressionShaderStageSwitch extends MaterialExpression { 
	PixelShader: ExpressionInput;
	VertexShader: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionShaderStageSwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionShaderStageSwitch;
	static GetDefaultObject(): MaterialExpressionShaderStageSwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionShaderStageSwitch;
	static C(Other: UObject | any): MaterialExpressionShaderStageSwitch;
}

declare class MaterialExpressionShadingModel extends MaterialExpression { 
	ShadingModel: EMaterialShadingModel;
	static Load(ResourceName: string): MaterialExpressionShadingModel;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionShadingModel;
	static GetDefaultObject(): MaterialExpressionShadingModel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionShadingModel;
	static C(Other: UObject | any): MaterialExpressionShadingModel;
}

declare class MaterialExpressionShadingPathSwitch extends MaterialExpression { 
	Default: ExpressionInput;
	Inputs: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionShadingPathSwitch;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionShadingPathSwitch;
	static GetDefaultObject(): MaterialExpressionShadingPathSwitch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionShadingPathSwitch;
	static C(Other: UObject | any): MaterialExpressionShadingPathSwitch;
}

declare class MaterialExpressionShadowReplace extends MaterialExpression { 
	Default: ExpressionInput;
	Shadow: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionShadowReplace;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionShadowReplace;
	static GetDefaultObject(): MaterialExpressionShadowReplace;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionShadowReplace;
	static C(Other: UObject | any): MaterialExpressionShadowReplace;
}

declare class MaterialExpressionSign extends MaterialExpression { 
	Input: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionSign;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSign;
	static GetDefaultObject(): MaterialExpressionSign;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSign;
	static C(Other: UObject | any): MaterialExpressionSign;
}

declare class MaterialExpressionSine extends MaterialExpression { 
	Input: ExpressionInput;
	Period: number;
	static Load(ResourceName: string): MaterialExpressionSine;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSine;
	static GetDefaultObject(): MaterialExpressionSine;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSine;
	static C(Other: UObject | any): MaterialExpressionSine;
}

declare class MaterialExpressionSingleLayerWaterMaterialOutput extends MaterialExpressionCustomOutput { 
	ScatteringCoefficients: ExpressionInput;
	AbsorptionCoefficients: ExpressionInput;
	PhaseG: ExpressionInput;
	ColorScaleBehindWater: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionSingleLayerWaterMaterialOutput;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSingleLayerWaterMaterialOutput;
	static GetDefaultObject(): MaterialExpressionSingleLayerWaterMaterialOutput;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSingleLayerWaterMaterialOutput;
	static C(Other: UObject | any): MaterialExpressionSingleLayerWaterMaterialOutput;
}

declare class MaterialExpressionSkyAtmosphereLightDirection extends MaterialExpression { 
	LightIndex: number;
	static Load(ResourceName: string): MaterialExpressionSkyAtmosphereLightDirection;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSkyAtmosphereLightDirection;
	static GetDefaultObject(): MaterialExpressionSkyAtmosphereLightDirection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSkyAtmosphereLightDirection;
	static C(Other: UObject | any): MaterialExpressionSkyAtmosphereLightDirection;
}

declare class MaterialExpressionSkyAtmosphereLightIlluminance extends MaterialExpression { 
	LightIndex: number;
	WorldPosition: ExpressionInput;
	static Load(ResourceName: string): MaterialExpressionSkyAtmosphereLightIlluminance;
	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSkyAtmosphereLightIlluminance;
	static GetDefaultObject(): MaterialExpressionSkyAtmosphereLightIlluminance;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionSkyAtmosphereLightIlluminance;
	static C(Other: UObject | any): MaterialExpressionSkyAtmosphereLightIlluminance;
}

